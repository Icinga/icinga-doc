<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % all.entities SYSTEM "all-entities.ent">
%all.entities;
]>
<section version="5.0" xml:id="escalation_condition" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg" xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml" xmlns:db="http://docbook.org/ns/docbook">
  <title><anchor xml:id="escalation_cond" />Escalation Condition</title>

  <para><emphasis role="bold">Introduction</emphasis></para>

  <para>Starting with &name-icinga; 1.0.1 a patch is implemented which introduces the ability to define an escalation_condition (similar to escalation_options [w,u,c,r]). An
  escalation with a defined condition will only be escalated if the current state of a particular host/service fits the condition.
  One possible example of use for this could be the following scenario:</para>

  <para>Imagine two different escalations for the same service <emphasis>foo</emphasis>. One of them should only escalate when
  service <emphasis>bar</emphasis> is OK, the other should escalate if <emphasis>bar</emphasis> is CRITICAL or WARNING. Now think
  about <emphasis>foo</emphasis> being the main service offered by a company and the admin has to react immediately if it is down.
  <emphasis>bar</emphasis> could be a service indicating if the admin is in the office or at home and the escalation would react
  as following:</para>

  <itemizedlist>
    <listitem>
      <para>If the admin is in the office, send an email first, after 5 minutes send an SMS</para>
    </listitem>

    <listitem>
      <para>If the admin is at home, send an SMS first and after 30 minutes a second SMS to the admin and the head of
      department</para>
    </listitem>
  </itemizedlist>

  <para><emphasis role="bold"><emphasis>This should be achieved without reloading or restarting the Icinga service.</emphasis></emphasis></para>

  <para><emphasis role="bold">Syntax</emphasis></para>

  <para>The escalation_condition option is completely optional and can be defined for host escalations as well as for service
  escalations. The syntax is:</para>

  <para><literal>escalation_condition &lt;condition&gt; ( [ &amp; / | ] &lt;condition&gt; )*</literal></para>

  <para>where &lt;condition&gt; is either: <literal>host hostname = [u,d,o]</literal> or <literal>service
  hostname.service_description = [w,u,c,o]</literal>.</para>

  <para>As you can see, the escalation_condition accepts a list of one or more conditions separated by "&amp;" (logical AND) or "|"
  (logical OR). The meanings of [w,u,c,o,d] differ a bit from the ones used for escalation_options:</para>

  <itemizedlist>
    <listitem>
      <para>w = WARNING</para>
    </listitem>

    <listitem>
      <para>u = UNKNOWN</para>
    </listitem>

    <listitem>
      <para>c = CRITICAL</para>
    </listitem>

    <listitem>
      <para>o = OK for services or UP for hosts (one could think of ONLINE)</para>
    </listitem>

    <listitem>
      <para>d = Down for hosts</para>
    </listitem>
  </itemizedlist>

  <para><emphasis role="bold">Example</emphasis></para>

  <para><screen>define serviceescalation {
   host_name               localhost
   service_description     HTTP
   first_notification      5
   contact_groups          admins, managers
   escalation_condition    host linux=d | service linux.SSH=w,c
   }</screen> This example escalation would be escalated if the HOST 'linux' is DOWN or the Service 'linux.SSH' is WARNING or
  CRITICAL.</para>

  <para>[ Thanks to: Vitali Voroth, DECOIT GmbH * http://www.decoit.de ]</para>
  <indexterm zone="escalation_condition">
    <primary>Escalations</primary>

    <secondary>Escalation condition</secondary>
  </indexterm>
</section>
