<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!ENTITY % all.entities SYSTEM "all-entities.ent">
%all.entities;
]>
<section version="5.0" xml:id="icinga-web-scratch" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg" xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml" xmlns:db="http://docbook.org/ns/docbook">
  <title>Installation of the &name-web; Frontend</title>

  <para><emphasis role="bold">Introduction</emphasis></para>

  <para>The new Icinga Web is under heavy development so please keep in mind that some information in this howto might change without any
  further notice. If you require more detailed information about installing, please check doc/INSTALL.</para>

  <para>More information about the overall architecture can be found on our website: <link
  xlink:href="http://www.icinga.org/architecture/">&url-icinga;architecture/</link>. If you want know more about Icinga web development and
  the module architecture, please check out the development wiki of Icinga Web: <link
  xlink:href="https://dev.icinga.org/projects/icinga-development/wiki#24-Icinga-Web">&name-icingawiki;</link></para>

  <para>This installation guide describes the installation of &name-web; with &name-mysql; or &name-postgres; as underlying database.
  &name-web; also supports &name-oracle; as database backend.</para>

  <orderedlist>
    <listitem>
      <para><emphasis role="bold">Prerequisites</emphasis></para>

      <itemizedlist>
        <para><emphasis role="bold">&name-mysql;</emphasis></para>

        <listitem>
          <para>Based on the fact that you have a running MySQL and PHP (with PEAR and CLI) environment and Icinga and IDOUtils are running
          as well, you can continue with the second step. Otherwise:</para>

          <itemizedlist>
            <listitem>
              <para><emphasis role="bold">Ubuntu / Debian</emphasis></para>

              <programlisting> #&gt; apt-get install php5 php5-cli php-pear php5-xmlrpc php5-xsl php5-pdo php5-soap php5-gd php5-ldap php5-mysql</programlisting>

              <note>
                <para>For &name-ubuntu; you install the required PDO extensions with php5 and php5-mysql! There is no php5-pdo package
                available.</para>
              </note>
            </listitem>

            <listitem>
              <para><emphasis role="bold">Fedora / RHEL / CentOS</emphasis></para>

              <para><programlisting> #&gt; yum install php php-cli php-pear php-xmlrpc php-xsl php-pdo php-soap php-gd php-ldap php-mysql</programlisting></para>

              <note>
                <para>Make sure you have a repository/packages for PHP 5.2.x - RHEL/CentOS (CentOS &lt;= 5.4) only support 5.1.6 out of the
                box. For running Icinga web you need at least php 5.2.3 and pcre 7.6 - you can use an external repository, pre-built
                packages or compile php and pcre yourself. Precompiled PCRE and PHP packages can be installed e.g. from <link
                xlink:href="http://blog.famillecollet.com/pages/Config-en">Les RPM de Remi</link> or <link
                xlink:href="http://www.jasonlitka.com/category/yum-repo-news">http://www.jasonlitka.com/category/yum-repo-news/</link></para>
              </note>
            </listitem>

            <listitem>
              <para><emphasis role="bold">OpenSuSE</emphasis></para>

              <para>Please use yast to install the packages "php5", "php5-pear", "php5-xmlrpc", "php5-xsl", "php5-&lt;rdbm&gt;",
              "php5-soap", "php5-gettext", "php5-ldap", "php5-gd" and "php5-mysql". The CLI is contained in the php5 package.</para>

              <para><note>
                  <para>At least in SLES10 SP2 the function "hash_hmac" is missing.</para>
                </note></para>

              <para>Installing Icinga with IDOUtils is described in the <link linkend="quickstart-idoutils">Icinga with IDOUtils Quickstart
              Guide</link></para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <para><emphasis role="bold">&name-postgres;</emphasis></para>

        <listitem>
          <para>Based on the fact that you have a running &name-postgres; and PHP (with PEAR and CLI) environment and Icinga and IDOUtils
          are running as well, you can continue with the second step. Otherwise:</para>

          <itemizedlist>
            <listitem>
              <para><emphasis role="bold">Ubuntu / Debian</emphasis></para>

              <programlisting> #&gt; apt-get install php5 php5-cli php-pear php5-xmlrpc php5-xsl php5-pdo php5-gd php5-ldap php5-pgsql</programlisting>

              <note>
                <para>For &name-ubuntu; you install the required PDO extensions with php5 and php5-pgsql! There is no php5-pdo package
                available.</para>
              </note>
            </listitem>

            <listitem>
              <para><emphasis role="bold">Fedora / RHEL / CentOS</emphasis></para>

              <para><programlisting> #&gt; yum install php php-cli php-pear php-xmlrpc php-xsl php-pdo php-gd php-ldap php-pgsql</programlisting></para>

              <note>
                <para>Make sure you have a repository/packages for PHP 5.2.x - RHEL/CentOS (CentOS &lt;= 5.4) only support 5.1.6 out of the
                box. For running Icinga web you need at least php 5.2.3 and pcre 7.6 - you can use an external repository, pre-built
                packages or compile php and pcre yourself. Precompiled PCRE and PHP packages can be installed e.g. from <link
                xlink:href="http://blog.famillecollet.com/pages/Config-en">Les RPM de Remi</link> or <link
                xlink:href="http://www.jasonlitka.com/category/yum-repo-news">http://www.jasonlitka.com/category/yum-repo-news/</link></para>
              </note>
            </listitem>

            <listitem>
              <para><emphasis role="bold">OpenSuSE</emphasis></para>

              <para>Please use yast to install the packages "php5", "php5-pear", "php5-xmlrpc", "php5-xsl", "php5-&lt;rdbm&gt;",
              "php5-soap", "php5-gettext", "php5-ldap", "php5-gd" and "php5-mysql". The CLI is contained in the php5 package.</para>

              <para><note>
                  <para>At least in SLES10 SP2 the function "hash_hmac" is missing.</para>
                </note></para>

              <para>Installing Icinga with IDOUtils is described in the <link linkend="quickstart-idoutils">Icinga with IDOUtils Quickstart
              Guide</link></para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>

      <para><emphasis role="bold">The installation</emphasis></para>

      <para>Please download the archive from <link
      xlink:href="http://sourceforge.net/projects/icinga/files/">http://sourceforge.net/projects/icinga/files/</link>. If your need a
      function only available in the latest developer version then clone from the icinga-web.git to get the freshest branch:</para>

      <programlisting> #&gt; git clone git://git.icinga.org/icinga-web.git</programlisting>

      <para>Unpack your tarball:</para>

      <programlisting> #&gt; tar xzvf icinga-web-&ver-icingaweb;.tar.gz</programlisting>

      <para>Then change to the directory:</para>

      <programlisting> #&gt; cd icinga-web-&ver-icingaweb;</programlisting>

      <para>&name-web; provides several configure options e.g.</para>

      <programlisting> #&gt; ./configure
                --prefix=/usr/local/icinga-web
                --with-web-user=www-data
                --with-web-group=www-data
                --with-web-path=/icinga-web
                --with-web-apache-path=/etc/apache2/conf.d
                --with-db-type=mysql
                --with-db-host=localhost
                --with-db-port=3306
                --with-db-name=icinga_web
                --with-db-user=icinga_web
                --with-db-pass=icinga_web
                --with-conf-dir=etc/conf.d
                --with-log-folder=log
                --with-api-subtype=TYPE DB driver or network connection
                --with-api-host=HOST Host to connect (DB or other) (default localhost)
                --with-api-port=PORT Port for connection (default 3306)
                --with-api-socket=PATH Path to socket (default none)</programlisting>

      <note>
        <para>Keep in mind that you configure the Icinga Web database not the Icinga IDOUtils database! User and group name of the web
        process depend on the distribution used.</para>
      </note>

      <para>Please use:</para>

      <programlisting> #&gt; ./configure --help</programlisting>

      <para>to see all configure options.</para>

      <para>To configure &name-web; for &name-postgres; please execute the following command:</para>

      <programlisting> #&gt; ./configure --with-db-type=pgsql --with-db-port=5432</programlisting>

      <para>If &name-icinga; is running using pqsql as well then please supply the api-options as well:</para>

      <programlisting> #&gt; ./configure --with-db-type=pgsql --with-db-port=5432 \
    --with-api-subtype=pgsql --with-api-port=5432</programlisting>

      <para>Per default the &name-icingaweb; will be installed to <filename>/usr/local/icinga-web</filename> using:</para>

      <programlisting> #&gt; ./configure
 #&gt; make install</programlisting>
      <para>This may take a while so please be patient ;-).</para>

      <para>Install the new Apache configuration</para>

      <programlisting> #&gt; make install-apache-config</programlisting>

      <para>If you don't need an alias, you can alternatively use the old behaviour setting a symlink instead: <programlisting> #&gt; make install-javascript</programlisting></para>

      <para>Make reports after install:</para>

      <programlisting> #&gt; make install-done

 Installation of icinga-web succeeded.
 Please check the new Apache2 configuration (etc/apache2/icinga-web.conf).</programlisting>

      <para>Other useful target: <programlisting> #&gt; make icinga-reset-password</programlisting> Reset password for any account on
      icinga-web.</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">PHP dependencies</emphasis></para>

      <para>Test the php dependencies with:</para>

      <programlisting> #&gt; make testdeps</programlisting>

      <para>All required tests should pass successfully. Maybe you have to alter the <filename>php.ini</filename> for the framework.</para>

      <para>In case of the gpc_magic_quote setting, you have to disable both entries (apache and cli <filename>php.ini</filename>). If you
      use php &lt; 5.3.0, you have to set "safe_mode" to "off". The locations depend on the distributions used.</para>

      <programlisting> #&gt; vi /etc/php5/apache/php.ini
   magic_quotes_gpc = off
   safe_mode = off

 #&gt; vi /etc/php5/cli/php.ini
   magic_quotes_gpc = off</programlisting>

      <note>
        <para>If one of these files is missing you'll get an agavi error complaining about the setting of "magic_quotes_qpc" because the
        default is "ON".</para>
      </note>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Database creation</emphasis></para>

      <para>Icinga Web requires its own database e.g. icinga_web. You can use the one from Icinga IDOUtils but it is recommended to keep
      this separated for upgrading purposes.</para>

      <para><emphasis role="bold">Create a database user</emphasis></para>

      <para>The user must have default data privileges like SELECT, UPDATE, INSERT, DELETE.</para>

      <para></para>

      <programlisting> SQL&gt; GRANT USAGE ON *.* TO 'icinga_web'@'localhost' IDENTIFIED BY 'icinga_web';
 SQL&gt; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, INDEX ON icinga_web.* TO 'icinga_web'@'localhost';</programlisting>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">&name-mysql;</emphasis></para>

          <programlisting> # mysql -u root -p

 mysql&gt; CREATE DATABASE icinga_web;

        GRANT USAGE ON *.* TO 'icinga_web'@'localhost' IDENTIFIED BY 'icinga_web' WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0;

        GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, INDEX ON icinga_web.* TO 'icinga_web'@'localhost';

        quit</programlisting>
        </listitem>

        <listitem>
          <para><emphasis role="bold">&name-postgres;</emphasis></para>

          <programlisting> #&gt; su - postgres

 $ psql

 postgres=# CREATE USER icinga_web;

 postgres=# ALTER USER icinga_web WITH PASSWORD 'icinga_web' CREATEDB;

 &lt;Ctrl&gt;+&lt;D&gt;</programlisting>
        </listitem>
      </itemizedlist>

      <para><emphasis role="bold">Create Database</emphasis></para>

      <para>Icinga Web ships with Doctrine so you can initialise or drop the database directly using 'make'.</para>

      <programlisting> #&gt; make db-initialize      - creates a spick-and-span database</programlisting>

      <programlisting> #&gt; make db-drop            - drops your database with a security query to avoid casualties</programlisting>

      <programlisting> #&gt; make db-doc2sql         - if you require plain SQL scripts, use this option to generate SQL from Doctrine. This can be useful for packaging or manual db install</programlisting>

      <para>To use the database creation commands you have to grant privileges to the user who will execute the commands on your dbms. If
      the user defined via configure is a low-privileged one, 'make' asks about a more privileged one e.g. a root user. If this does not
      work for you, alter 'etc/build.properties' to match the requirements of a root user.</para>

      <para>So a simple database install looks like this:</para>

      <programlisting> #&gt; make db-initialize</programlisting>

      <para><emphasis role="bold">Manually create Database</emphasis></para>

      <para>If you require manual database creation e.g. for package building, you can extract the plain SQL scripts using:</para>

      <programlisting> #&gt; make db-doc2sql</programlisting>

      <para>and then use the generated scripts on the freshly created database.</para>

      <para><emphasis>&name-postgres;</emphasis></para>

      <para>Please edit the file <filename>pg_hba.conf</filename> and add the following lines:</para>

      <programlisting> #&gt; vi /etc/postgresql/9.x/main/pg_hba.conf

 # database administrative login by UNIX sockets
 local all postgres ident

 # TYPE DATABASE USER CIDR-ADDRESS METHOD
 #icinga_web
 local icinga_web icinga_web trust

 # "local" is for Unix domain socket connections only
 local all all trust

 # IPv4 local connections
 host all all 127.0.0.1/32 trust

 # IPV6 local connections
 host all all ::1/128 trust</programlisting>

      <para>Please keep in mind to restart &name-postgres; afterwards:</para>

      <programlisting> #&gt; /etc/init.d/postgresql reload</programlisting>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Settings</emphasis></para>

      <para>There are two different sections:</para>

      <para>* Settings of Icinga Web, escpecially database settings</para>

      <para>* Settings of the Icinga API which is mandatory as data source</para>

      <para><emphasis role="bold">Settings of &name-web;</emphasis></para>

      <para>Normally you can set the database credentials during configure, but if you want to recheck or even change them, please adapt
      those to your needs.</para>

		<note>
        <para>You may find it easier to use syntax highlighting while editing xml structures to differ between comments and xml tags.</para>
        <para>Edit <filename>/etc/vim/vimrc</filename><screen> " Vim5 and later versions support syntax highlighting. Uncommenting the next
 " line enables syntax highlighting by default.
 syntax on</screen> or <filename>/etc/nanorc</filename><screen> ## HTML
 include "/usr/share/nano/html.nanorc"</screen>
        </para>
      </note>

      <programlisting> #&gt; vi app/config/databases.xml</programlisting>

      <note>
        <para>Optional: Your specific Icinga database settings can be set in <filename>etc/conf.d/database.xml</filename> (or where your
        web_conf_path directive points to) and will be used in the first place. This won't get overwritten during upgrade process. There are
        two databases : 'icinga_web' (for internal use, created above) and 'icinga', which is the database ido2db writes to. (if using
        oracle, you must use icingaOracle as the dsn driver)</para>
      </note>

      <para><programlisting>   &lt;databases default="icinga_web"&gt;
      &lt;database name="icinga_web" class="AgaviDoctrineDatabase"&gt;

         &lt;!--
            Doctrine dsn strings:

            http://www.doctrine-project.org/documentation/manual/1_1/en/introduction-to-connections
         --&gt;
         &lt;!-- ##### &name-mysql; ##### --&gt;
         &lt;ae:parameter name="dsn"&gt;mysql://icinga_web:icinga_web@127.0.0.1:3306/icinga_web&lt;/ae:parameter&gt;
         &lt;!-- ##### &name-postgres; ##### --&gt;
         &lt;ae:parameter name="dsn"&gt;pgsql://icinga_web:icinga_web@localhost:5432/icinga_web&lt;/ae:parameter&gt;

         &lt;!-- Generic credentials  --&gt;
         &lt;!-- &lt;ae:parameter name="username"&gt;icinga_web&lt;/ae:parameter&gt; --&gt;
         &lt;!-- &lt;ae:parameter name="password"&gt;icinga_web&lt;/ae:parameter&gt; --&gt;

         &lt;!-- DB encoding type --&gt;
         &lt;ae:parameter name="charset"&gt;utf8&lt;/ae:parameter&gt;

         &lt;!--
            Doctrine_Manager configuration
         --&gt;
         &lt;ae:parameter name="manager_attributes"&gt;
            &lt;!-- This allows lazy loading of the models --&gt;
            &lt;ae:parameter name="Doctrine_Core::ATTR_MODEL_LOADING"&gt;CONSERVATIVE&lt;/ae:parameter&gt;
         &lt;/ae:parameter&gt;

         &lt;!-- The path to our models --&gt;
         &lt;ae:parameter name="load_models"&gt;%core.module_dir%/AppKit/lib/database/models/generated&lt;/ae:parameter&gt;
         &lt;ae:parameter name="models_directory"&gt;%core.module_dir%/AppKit/lib/database/models&lt;/ae:parameter&gt;

      &lt;/database&gt;

      &lt;-- The ido2db  icinga database--&gt;
      &lt;database name="icinga" class="AgaviDoctrineDatabase"&gt;

         &lt;!--
            Doctrine dsn strings:

            http://www.doctrine-project.org/documentation/manual/1_1/en/introduction-to-connections
         --&gt;
         &lt;!-- ##### &name-mysql; ##### --&gt;
         &lt;ae:parameter name="dsn"&gt;mysql://icinga:icinga@127.0.0.1:3306/icinga&lt;/ae:parameter&gt;
         &lt;!-- ##### &name-postgres; ##### --&gt;
         &lt;ae:parameter name="dsn"&gt;pgsql://icinga:icinga@localhost:5432/icinga&lt;/ae:parameter&gt;

         &lt;!-- Generic credentials  --&gt;
         &lt;!-- &lt;ae:parameter name="username"&gt;icinga&lt;/ae:parameter&gt; --&gt;
         &lt;!-- &lt;ae:parameter name="password"&gt;icinga&lt;/ae:parameter&gt; --&gt;

         &lt;!-- DB encoding type --&gt;
         &lt;ae:parameter name="charset"&gt;utf8&lt;/ae:parameter&gt;

         &lt;!--
            Doctrine_Manager configuration
         --&gt;
         &lt;ae:parameter name="manager_attributes"&gt;
            &lt;!-- This allows lazy loading of the models --&gt;
            &lt;ae:parameter name="Doctrine_Core::ATTR_MODEL_LOADING"&gt;CONSERVATIVE&lt;/ae:parameter&gt;
         &lt;/ae:parameter&gt;

         &lt;!-- The path to our models --&gt;
         &lt;ae:parameter name="load_models"&gt;%core.module_dir%/Api/lib/database/models/generated&lt;/ae:parameter&gt;
         &lt;ae:parameter name="models_directory"&gt;%core.module_dir%/Api/lib/database/models&lt;/ae:parameter&gt;

      &lt;/database&gt;
   &lt;/databases&gt;
      </programlisting></para>

      <para>In the <filename>access.xml</filename> you can specify the locations of your command pipe and the access credentials and method
      (ssh or via local console). Also you define here, which icinga instance is mapped to which host.</para>

      <programlisting>
        &lt;!-- Map your instances to hosts here --&gt;
        &lt;instances&gt;
            &lt;instance name="default"&gt;localhost&lt;/instance&gt;
        &lt;/instances&gt;
        &lt;!-- default location of the icinga pipe --&gt;
        &lt;defaults&gt;
            &lt;access&gt;
                &lt;write&gt;
                    &lt;files&gt;
                        &lt;resource name="icinga_pipe"&gt;/usr/local/icinga/var/rw/icinga.cmd&lt;/resource&gt;
                    &lt;/files&gt;
                &lt;/write&gt;
            &lt;/access&gt;
        &lt;/defaults&gt;

        &lt;!-- Hosts that can be accessed via the console interface --&gt;
        &lt;hosts&gt;
            &lt;host name="localhost"&gt;
                &lt;type&gt;local&lt;/type&gt;
                &lt;!-- Only allow access to these files, folders or executables --&gt;
                &lt;access useDefaults="true"&gt;
                    &lt;read&gt;
                        &lt;files&gt;
                            &lt;resource name="test"&gt;test&lt;/resource&gt;
                        &lt;/files&gt;
                    &lt;/read&gt;
                &lt;/access&gt;
            &lt;/host&gt;

            &lt;!--  Example for ssh connection with user/password auth --&gt;
            &lt;host name="remot_host"&gt;
                &lt;type&gt;ssh&lt;/type&gt;
                &lt;ssh-config&gt;
                    &lt;host&gt;localhost&lt;/host&gt;
                    &lt;port&gt;22&lt;/port&gt;
                    &lt;auth&gt;
                        &lt;type&gt;password&lt;/type&gt;
                        &lt;user&gt;john&lt;/user&gt;
                        &lt;password&gt;doe&lt;/password&gt;
                    &lt;/auth&gt;
                &lt;/ssh-config&gt;

                &lt;access useDefaults="true" /&gt;

            &lt;/host&gt;
      &lt;/hosts&gt;
      </programlisting>

      <note>
        <para>After changing those configs you need to clear the config cache again!</para>
      </note>

      <programlisting> #&gt; rm -rf app/cache/config/*.php</programlisting>

      <para>or /path/to/clearcache.sh</para>

      <programlisting> #&gt; /usr/local/icinga-web/bin/clearcache.sh</programlisting>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Apache settings</emphasis></para>

      <para>This should be prepared:</para>

      <itemizedlist>
        <listitem>
          <para>mod_rewrite enabled, maybe you have to create a link:</para>

          <para><programlisting> #&gt; ln -s /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load</programlisting></para>

          <para>Using OpenSuSE or SLES you can use "a2enmod rewrite" to activate the module. If that doesn't work you have to edit the file
          "<filename>/etc/sysconfig/apache2</filename>". The module "rewrite" has to be appended to the line "APACHE_MODULES=...".</para>

          <para>Using Debian or Ubuntu "a2enmod rewrite" activates the module as well.</para>

          <para>The httpd of RHEL / Fedora / CentOS already supports rewriting so you don't have to change anything in this regard.</para>
        </listitem>

        <listitem>
          <para>Any htaccess enabled alias settings</para>

          <para>Edit your <filename>.htaccess</filename> in <filename>/usr/local/icinga-web/pub</filename>:</para>

          <para>At line 14, change the RewriteBase direction to suit to your needs:<programlisting> DirectoryIndex index.php

 Options -MultiViews -Indexes +FollowSymLinks
 Order allow,deny
 Allow from all

 &lt;IfModule mod_rewrite.c&gt;
    RewriteEngine On

    # This depends on your path
    # on independent hosts the base is '/'
    RewriteBase /icinga-web/

        # If the requested URL does not exist (it's likely an agavi route),
        # pass it as path info to index.php, the Agavi dispatch script.
        RewriteRule ^$ index.php?/ [QSA,L]
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule (.*) index.php?/$1 [QSA,L]
 &lt;/IfModule&gt;

 &lt;IfModule mod_deflate.c&gt;
        SetOutputFilter DEFLATE

        BrowserMatch ^Mozilla/4 gzip-only-text/html
        BrowserMatch ^Mozilla/4\.0[678] no-gzip

        BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
        BrowserMatch \bMSI[E] !no-gzip !gzip-only-text/html

        Header append Vary User-Agent env=!dont-vary
 &lt;/IfModule&gt;

 &lt;IfDefine APACHE2&gt;
        AcceptPathInf  On
 &lt;/IfDefine&gt;

 #&lt;IfModule mod_auth_basic.c&gt;
 #       AuthType Basic
 #       AuthName "My http basic auth realm"
 #       AuthUserFile /path/to/my/htusers
 #       require valid-user
 #&lt;/IfModule&gt;</programlisting></para>
        </listitem>
      </itemizedlist>

      <para>Go to the webservers configuration directory. Look if the created config by <emphasis role="bold">make
      install-apache-config</emphasis> suits to your configuration. Or create new aliases (maybe in
      <filename>/etc/apache2/conf.d/icinga-web.conf</filename>) :</para>

      <para><programlisting>#&gt; cat /etc/apache2/icinga-web.conf

# icinga-web apache configuration
# - Enable all options .htaccess
# - Add extjs library to alias
#

Alias /icinga-web/js/ext3 /usr/local/icinga-web/lib/ext3
Alias /icinga-web /usr/local/icinga-web/pub

&lt;Directory /usr/local/icinga-web/lib/ext3&gt;
    Order allow,deny
    Allow from all
&lt;/Directory&gt;

&lt;Directory /usr/local/icinga-web/pub&gt;
    DirectoryIndex index.php
    Options FollowSymLinks
    AllowOverride all
    Order allow,deny
    Allow from all
&lt;/Directory&gt;</programlisting></para>

      <para>Clear cache:</para>

      <para><programlisting>#&gt; rm /usr/local/icinga-web/app/cache/config/*.php</programlisting></para>

      <para>or /path/to/clearcache.sh</para>

      <programlisting>#&gt; /usr/local/icinga-web/bin/clearcache.sh</programlisting>

      <para>Restart your Webserver:</para>

      <para><programlisting>#&gt; service apache2 restart</programlisting></para>

      <para>or</para>

      <para><programlisting>#&gt; /etc/init.d/apache2 restart</programlisting></para>

      <para>or</para>

      <programlisting>#&gt; /etc/init.d/httpd restart</programlisting>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Use It!</emphasis></para>

      <para><emphasis role="bold">Please ensure that your RDBMS, Apache, IDOUtils and Icinga are running!</emphasis></para>

      <para>Go to the webpath (http://localhost/icinga-web/) and check if the webinterface starts without exceptions (database connections
      web and api). You can login with user 'root' and password 'password'.</para>

      <para>Have fun! :-)</para>
    </listitem>

    <listitem>
      <para><anchor xml:id="icinga-web-scratch-errors" /> <emphasis role="bold">Test &amp; Errors ?</emphasis></para>

      <para>The following collection shows some useful information how to resolve errors - and what you should provide when reporting an
      error to the mailing lists or http://www.icinga-portal.org</para>

      <para>* Always provide the version - current tar.gz or GIT?</para>

      <para>* Add your browser and the version</para>

      <para>* If the problem is related to the data source, provide extensive information about IDOUtils, Core (version, debug logs)</para>

      <para>Where to look?</para>

      <para>* Apache Error Logs, PHP Errors, PHP files cannot be found</para>

      <para>* <filename>/var/log/messages</filename>, <filename>/path/to/icinga/var/icinga.log</filename> Changes on Icinga Web Config (e.g.
      API IDOUtils credentials changed) are not used?</para>

      <para>* Delete the config cache in <filename>app/cache/config/*.php</filename></para>

      <para>use /path/to/clearcache.sh</para>

      <programlisting>#&gt; /usr/local/icinga-web/bin/clearcache.sh</programlisting>

      <para>Icinga Web shows a blank page?</para>

      <para>* Apache Error Logs =&gt; mod_rewrite enabled, php dependencies ok? 'make testdeps'. Using Debian you may find something like
      the following: ".htaccess: Invalid command 'RewriteEngine', perhaps misspelled or defined by a module not included in the server
      configuration"</para>

      <para>* .htaccess/vhost config =&gt; paths not correct?</para>

      <para>Icinga Web does not show any data?</para>

      <para>* DB access denied =&gt; check if the icinga web database connection settings are correct</para>

      <para>IDOUtils DB does not get filled with data?</para>

      <para>* "Error writing to data sink" =&gt; check IDOUtils (ido2db runs 2x - ok?), ido2db.cfg debug_level=-1, debug_verbosity=2,
      restart IDOUtils and look for errors in ido2db.debug</para>

      <para>* Nothing there =&gt; Check icinga.log if IDOMOD gets loaded if not enable the Event Broker Module in icinga.cfg like described
      in the Icinga Core with <link linkend="quickstart-idoutils">IDOUtils Quickstart Guide</link></para>

      <para>* IDOUtils DB-Schema is the current one? =&gt; If not check the upgrade path and docs of IDOUtils</para>

      <para>* Sockets correctly defined? =&gt; unix-socket or tcp-socket, the last one with or without SSL</para>

      <para><emphasis role="bold">Testing the Web (make sure PHPUnit is installed):</emphasis></para>

      <para><programlisting> $&gt; make test</programlisting></para>

      <note>
        <para>If you are using your root account for testing then make sure in advance that the specified web user has a valid shell.
        Otherwise some tests might fail. Depending on the version used you might experience wrong permissions on
        <filename>/usr/local/icinga-web/log</filename> resulting in Icinga-Web showing "loading" coming to no end!</para>
      </note>

      <note>
        <para>Remember - changing the php settings in <filename>php.ini</filename> requires an Apache reload/restart!</para>
      </note>

      <para>* PHP Fatal error: Allowed memory size of ... bytes exhausted (tried to allocate ... bytes) =&gt; Check your
      <filename>php.ini</filename> (both apache2 and cli) and adjust memory_limit to 128M or higher.</para>

      <para>* PHP Fatal error: Uncaught exception 'AgaviCacheException' with message 'Failed to write cache file
      /usr/local/icinga-web/app/cache/config/config_handlers.xml_development__xxxx.php" generated from configuration file
      /usr/local/icinga-web/app/config/config_handlers.xml". Please make sure you have set correct write permissions for directory
      /usr/local/icinga-web/app/cache.... = &gt; Check <filename>/etc/php5/apache/php.ini</filename>, set safe_mode = off.</para>
      <note><para>This may also be an SELinux issue.</para></note>

      <para>* [PHP Error] strtotime(): It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone
      setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you
      most likely misspelled the timezone identifier. We selected 'Europe/Berlin' for 'CEST/2.0/DST' instead [line 1548 of
      /home/xxx/icinga/icinga-web/lib/doctrine/lib/Doctrine/Record.php] = &gt; You have to define date.timezone in your
      <filename>php.ini</filename>.</para>

      <para>* -&gt; 500 internal server error! Uncaught exception AgaviException thrown! Your default timezone is 'System/Localtime', ... =
      &gt; You have to define date.timezone in your <filename>php.ini</filename>.</para>

      <para>* Could not connect to API. The API Connector returned the following message: getConnection failed: Database connection failed:
      SQLSTATE[28000] [1045] Access denied for user 'icinga'@'localhost' (using password: YES))</para>

      <para>=&gt; check your IDOUtils DB credentials in ido2db.cfg and add those to Icinga Web configuration as preferred DB credentials for
      IDO (see above). With 1.0.3 you can set those values directly during configure</para>

      <para>* touch: cannot touch '/usr/local/icinga-web/.../cache/testfile.txt': Permission denied =&gt; Your configuration in the xml
      files will be pre-cached by the framework. It therefore needs special permissions on the caching directories. By running
      icingaWebTesting.php in etc/tests you will be asked to automatically fix this.</para>

      <para>* PHP Fatal error: Uncaught exception '...' with message 'Couldn't locate driver named mysql' =&gt; Make sure that the php pdo
      is installed and loaded in an appropriate way, even if make testdeps tells everything is fine.</para>

      <para>* Login is not shown =&gt; enable short_open_tag in your php.ini</para>

      <para>=&gt; edit open_basedir in your <filename>php.ini</filename> and add icinga web location and parent location of icinga api (e.g.
      <filename>/usr/local/icinga/share/</filename>).</para>

      <para>* Empty Icinga Web? =&gt; If mod_rewrite is enabled and 'index.php' appears in the request url the portal does not work. Try to
      remove the index.php from your url and everything should work</para>

      <para>* Login possible but Icinga Web keeps loading data...</para>

      <para>* Request failed, Ressource /icinga-web/appkit/ext/application State could not be loaded - is the url correct? =&gt; mod_rewrite
      enabled ?</para>

      <para>* Counts in the Status Cronk do not match your configuration? =&gt; Check with the Backend, e.g. IDOUtils DB, selecting the
      counts for the status tables.</para>

      <para>* No Data shown in Cronks? =&gt; Make sure that all permissions are set correctly, especially the log/. Furthermore, you can
      debug the data in your browser. Further instructions on that can be found in the Icinga Wiki:
      https://wiki.icinga.org/display/Dev/Icinga+Web+Testing</para>

      <para>If you have any updates on that please do not hesitate to report back! :-)</para>
    </listitem>
  </orderedlist>

  <indexterm zone="icinga-web-scratch">
    <primary>Webinterface</primary>
  </indexterm>

  <indexterm zone="icinga-web-scratch">
    <primary>Installation of the Webinterface</primary>
  </indexterm>

  <indexterm zone="icinga-web-scratch">
    <primary>Webinterface</primary>

    <secondary>Errors in the</secondary>
  </indexterm>
</section>
