<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!ENTITY % all.entities SYSTEM "all-entities.ent">
%all.entities;
]>
<section version="5.0" xml:id="configmain" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg" xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml" xmlns:db="http://docbook.org/ns/docbook">
  <title><anchor xml:id="config_main"/>Main Configuration File Options</title>

  <para><emphasis role="bold">Notes</emphasis></para>

  <para>When creating and/or editing configuration files, keep the following in mind:</para>

  <orderedlist>
    <listitem>
      <para>Lines that start with a '#' character are taken to be comments and are not processed</para>
    </listitem>

    <listitem>
      <para>Variables names must begin at the start of the line - no white space is allowed before the name</para>
    </listitem>

    <listitem>
      <para>Variable names are case-sensitive</para>
    </listitem>
  </orderedlist>

  <para><emphasis role="bold">Sample Configuration File</emphasis></para>

  <tip>
    <para>A sample main configuration file (<emphasis>&url-icinga-cfg;</emphasis>) is installed for you when you follow the <link
    linkend="quickstart">quickstart installation guide</link>.</para>
  </tip>

  <para><emphasis role="bold">Config File Location</emphasis></para>

  <para>The main configuration file is usually named <emphasis>icinga.cfg</emphasis> and located in the
  <emphasis>&url-icinga-base;/etc/</emphasis> directory.</para>

  <para><emphasis role="bold">Configuration File Variables</emphasis></para>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-log_file">Log file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-cfg_file">Object configuration file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-cfg_dir">Object configuration directory</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-object_cache_file">Object cache file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-precached_object_file">Precached object file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-resource_file">Resource file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-temp_file">Temp file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-temp_path">Temp path</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-status_file">Status file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-status_update_interval">Status file update interval</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-icinga_user">&name-icinga; user</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-icinga_group">&name-icinga; group</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-enable_notifications">Notifications option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-execute_service_checks">Service check execution option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-accept_passive_service_checks">Passive service check acceptance option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-execute_host_checks">Host check execution option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-accept_passive_host_checks">Passive host check acceptance option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-enable_event_handlers">Event handler option</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-log_rotation_method">Log rotation method</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-log_archive_path">Log archive path</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-check_external_commands">External command check option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-command_check_interval">External command check interval</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-command_file">External command file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-external_command_buffer_slots">External command buffer slots option</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-lock_file">Lock file</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-retain_state_information">State retention option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-state_retention_file">State retention file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-sync_retention_file">Sync retention file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-retention_update_interval">Automatic state retention update interval</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-use_retained_program_state">Use retained program state option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-use_retained_scheduling_info">Use retained scheduling info option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-retained_host_attribute_mask">Retained host/service attribute masks</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-retained_process_host_attribute_mask">Retained process attribute masks</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-retained_contact_host_attribute_mask">Retained contact attribute masks</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-use_syslog">Syslog logging option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-use_syslog_local_facility">Syslog local facility logging option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-syslog_local_facility">Syslog local facility logging value</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-log_notifications">Notification logging option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-log_service_retries">Service check retry logging option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-log_host_retries">Host retry logging option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-log_event_handlers">Event handler logging option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-log_initial_states">Initial state logging option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-log_external_commands">External command logging option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-log_external_commands_user">External commands user logging option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-log_passive_checks">Passive check logging option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-log_current_states">Current state logging option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-log_long_plugin_output">Long plugin output logging option</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-global_host_event_handler">Global host event handler</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-global_service_event_handler">Global service event handler</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-stalking_event_handlers_for_hosts">Stalking event handlers for hosts</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-stalking_event_handlers_for_services">Stalking event handlers for services</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-stalking_notifications_for_hosts">Notifications for stalked hosts</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-stalking_notifications_for_services">Notifications for stalked services</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-sleep_time">Inter-check sleep time</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-service_inter_check_delay_method">Service inter-check delay method</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-max_service_check_spread">Maximum service check spread</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-service_interleave_factor">Service interleave factor</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-max_concurrent_checks">Maximum concurrent service checks</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-check_result_reaper_frequency">Check result reaper frequency</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-max_check_result_reaper_time">Maximum check result reaper time</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-check_result_path">Check result path</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-max_check_result_file_age">Maximum check result file age</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-host_inter_check_delay_method">Host inter-check delay method</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-max_host_check_spread">Maximum host check spread</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-interval_length">Timing interval length</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-auto_reschedule_checks">Auto-rescheduling option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-auto_rescheduling_interval">Auto-rescheduling interval</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-auto_rescheduling_window">Auto-rescheduling window</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-use_aggressive_host_checking">Aggressive host checking option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-translate_passive_host_checks">Translate passive host checks option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-passive_host_checks_are_soft">Passive host checks are SOFT option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-enable_predictive_host_dependency_checks">Predictive host dependency checks option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-enable_predictive_service_dependency_checks">Predictive service dependency checks option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-cached_host_check_horizon">Cached host check horizon</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-cached_service_check_horizon">Cached service check horizon</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-use_large_installation_tweaks">Large installation tweaks option</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-enable_flap_detection">Flap detection option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-low_service_flap_threshold">Low service flap threshold</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-high_service_flap_threshold">High service flap threshold</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-low_host_flap_threshold">Low host flap threshold</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-high_host_flap_threshold">High host flap threshold</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-soft_state_dependencies">Soft state dependencies option</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-service_check_timeout">Service check timeout</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-service_check_timeout_state">Service check timeout state</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-host_check_timeout">Host check timeout</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-event_handler_timeout">Event handler timeout</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-notification_timeout">Notification timeout</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-ocsp_timeout">Obsessive compulsive service processor timeout</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-ochp_timeout">Obsessive compulsive host processor timeout</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-perfdata_timeout">Performance data processor command timeout</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-obsess_over_services">Obsess over services option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-ocsp_command">Obsessive compulsive service processor command</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-obsess_over_hosts">Obsess over hosts option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-ochp_command">Obsessive compulsive host processor command</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-process_performance_data">Performance data processing option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-host_perfdata_command">Host performance data processing command</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-service_perfdata_command">Service performance data processing command</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-host_perfdata_file">Host performance data file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-service_perfdata_file">Service performance data file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-host_perfdata_file_template">Host performance data file template</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-service_perfdata_file_template">Service performance data file template</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-host_perfdata_file_mode">Host performance data file mode</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-service_perfdata_file_mode">Service performance data file mode</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-host_perfdata_file_processing_interval">Host performance data file processing interval</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-service_perfdata_file_processing_interval">Service performance data file processing
      interval</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-host_perfdata_file_processing_command">Host performance data file processing command</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-service_perfdata_file_processing_command">Service performance data file processing
      command</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-check_for_orphaned_services">Orphaned service check option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-check_for_orphaned_hosts">Orphaned host check option</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-check_service_freshness">Service freshness checking option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-service_freshness_check_interval">Service freshness check interval</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-check_host_freshness">Host freshness checking option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-host_freshness_check_interval">Host freshness check interval</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-enable_embedded_perl">Embedded Perl interpreter option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-use_embedded_perl_implicitly">Embedded Perl implicit use option</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-date_format">Date format</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-illegal_object_name_chars">Illegal object name characters</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-illegal_macro_output_chars">Illegal macro output characters</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-use_regexp_matching">Regular expression matching option</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-use_true_regexp_matching">True regular expression matching option</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-admin_email">Administrator email address</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-admin_pager">Administrator pager</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-debug_file">Debug file</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-debug_level">Debug level</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-debug_verbosity">Debug verbosity</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-max_debug_file_size">Maximum debug file size option</link></para>
    </listitem>
  </itemizedlist>

  <itemizedlist>
    <listitem>
      <para><link linkend="configmain-allow_empty_hostgroup_assignment">Allow empty hostgroup assignment</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-process_empty_results">Process empty host performance results</link></para>
    </listitem>

    <listitem>
      <para><link linkend="configmain-process_empty_results">Process empty service performance results</link></para>
    </listitem>
  </itemizedlist>

  <para>Below you will find descriptions of each main &name-icinga; configuration file option...</para>

  <para><anchor xml:id="configmain-log_file"/> <emphasis role="bold">Log File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_file=&url-icinga-base;/var/icinga.log</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable specifies where &name-icinga; should create its main log file. This should be the first variable that you define in
  your configuration file, as &name-icinga; will try to write errors that it finds in the rest of your configuration data to this file. If
  you have <link linkend="configmain-log_rotation_method">log rotation</link> enabled, this file will automatically be rotated every hour,
  day, week, or month.</para>

  <para><anchor xml:id="configmain-cfg_file"/> <emphasis role="bold">Object Configuration File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">cfg_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">cfg_file=&url-icinga-base;/etc/conf.d/hosts.cfg</emphasis></emphasis></para><para><emphasis condition="red"
          role="color"><emphasis role="bold">cfg_file=&url-icinga-base;/etc/conf.d/services.cfg</emphasis></emphasis></para><para><emphasis condition="red" role="color"><emphasis role="bold">cfg_file=&url-icinga-base;/etc/conf.d/commands.cfg</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This directive is used to specify an <link linkend="configobject">object configuration file</link> containing object definitions
  that &name-icinga; should use for monitoring. Object configuration files contain definitions for hosts, host groups, contacts, contact
  groups, services, commands, etc. You can separate your configuration information into several files and specify multiple
  <emphasis>cfg_file=</emphasis> statements to have each of them processed.</para>

  <note>
    <para>Using <filename>cfg_file=.../foo/bar.cfg</filename> for a file in the same directory which is specified in a
    <filename>cfg_dir=.../foo</filename> directive will result in the file being processed twice and lead to config verification
    errors.</para>
  </note>

  <para><anchor xml:id="configmain-cfg_dir"/> <emphasis role="bold">Object Configuration Directory</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">cfg_dir=&lt;directory_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">cfg_dir=&url-icinga-base;/etc/conf.d</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This directive is used to specify a directory which contains <link linkend="configobject">object configuration files</link> that
  &name-icinga; should use for monitoring. All files in the directory with a <emphasis>.cfg</emphasis> extension are processed as object
  config files. Additionally, &name-icinga; will recursively process all config files in subdirectories of the directory you specify here.
  You can separate your configuration files into different directories and specify multiple <emphasis>cfg_dir=</emphasis> statements to have
  all config files in each directory processed.</para>

  <note>
    <para>Using <filename>cfg_file=.../foo/bar.cfg</filename> for a file in the same directory which is specified in a
    <filename>cfg_dir=.../foo</filename> directive will result in the file being processed twice and lead to config verification
    errors.</para>
  </note>

  <para><anchor xml:id="configmain-object_cache_file"/> <emphasis role="bold">Object Cache File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">object_cache_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">object_cache_file=&url-icinga-base;/var/objects.cache</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This directive is used to specify a file in which a cached copy of <link linkend="configobject">object definitions</link> should be
  stored. The cache file is (re)created every time &name-icinga; is (re)started and is used by the CGIs. It is intended to speed up config
  file caching in the CGIs and allow you to edit the source <link linkend="configmain-cfg_file">object config files</link> while
  &name-icinga; is running without affecting the output displayed in the CGIs.</para>

  <para><anchor xml:id="configmain-precached_object_file"/> <emphasis role="bold">Precached Object File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">precached_object_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">precached_object_file=&url-icinga-base;/var/objects.precache</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This directive is used to specify a file in which a pre-processed, pre-cached copy of <link linkend="configobject">object
  definitions</link> should be stored. This file can be used to drastically improve startup times in large/complex &name-icinga;
  installations. Read more information on how to speed up start times <link linkend="faststartup">here</link>.</para>

  <para><anchor xml:id="configmain-resource_file"/> <emphasis role="bold">Resource File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">resource_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">resource_file=&url-icinga-base;/etc/resource.cfg</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is used to specify an optional resource file that can contain $USERn$ <link linkend="macros">macro</link> definitions. $USERn$
  macros are useful for storing usernames, passwords, and items commonly used in command definitions (like directory paths). The CGIs will
  <emphasis>not</emphasis> attempt to read resource files, so you can set restrictive permissions (600 or 660) on them to protect sensitive
  information. You can include multiple resource files by adding multiple resource_file statements to the main config file - &name-icinga;
  will process them all. See the sample resource.cfg file in the <emphasis>sample-config/</emphasis> subdirectory of the &name-icinga;
  distribution for an example of how to define $USERn$ macros.</para>

  <para><anchor xml:id="configmain-temp_file"/> <emphasis role="bold">Temp File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">temp_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">temp_file=&url-icinga-base;/var/icinga.tmp</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is a temporary file that &name-icinga; periodically creates to use when updating comment data, status data, etc. The file is
  deleted when it is no longer needed.</para>

  <para><anchor xml:id="configmain-temp_path"/> <emphasis role="bold">Temp Path</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">temp_path=&lt;dir_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">temp_path=/tmp</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is a directory that &name-icinga; can use as scratch space for creating temporary files used during the monitoring process. You
  should run <emphasis>tmpwatch</emphasis>, or a similiar utility, on this directory occassionally to delete files older than 24
  hours.</para>

  <para><anchor xml:id="configmain-status_file"/> <emphasis role="bold">Status File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">status_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">status_file=&url-icinga-base;/var/status.dat</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the file that &name-icinga; uses to store the current status, comment, and downtime information. This file is used by the
  CGIs so that current monitoring status can be reported via a web interface. The CGIs must have read access to this file in order to
  function properly. This file is deleted every time &name-icinga; stops and recreated when it starts.</para>

  <para><anchor xml:id="configmain-status_update_interval"/> <emphasis role="bold">Status File Update Interval</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">status_update_interval=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">status_update_interval=15</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This setting determines how often (in seconds) that &name-icinga; will update status data in the <link
  linkend="configmain-status_file">status file</link>. The minimum update interval is 1 second.</para>

  <para><anchor xml:id="configmain-icinga_user"/> <emphasis role="bold">&name-icinga; User</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">icinga_user=&lt;username/UID&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">icinga_user=icinga</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is used to set the effective user that the &name-icinga; process should run as. After initial program startup and before
  starting to monitor anything, &name-icinga; will drop its effective privileges and run as this user. You may specify either a username or
  a UID.</para>

  <para><anchor xml:id="configmain-icinga_group"/> <emphasis role="bold">&name-icinga; Group</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">icinga_group=&lt;groupname/GID&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">icinga_group=icinga</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is used to set the effective group that the &name-icinga; process should run as. After initial program startup and before
  starting to monitor anything, &name-icinga; will drop its effective privileges and run as this group. You may specify either a groupname
  or a GID.</para>

  <para><anchor xml:id="configmain-enable_notifications"/> <emphasis role="bold">Notifications Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">enable_notifications=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">enable_notifications=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will send out <link linkend="notifications">notifications</link> when it
  initially (re)starts. If this option is disabled, &name-icinga; will not send out notifications for any host or service.</para>

  <note>
    <para>If you have <link linkend="configmain-retain_state_information">state retention</link> enabled, &name-icinga; will ignore this
    setting when it (re)starts and use the last known setting for this option (as stored in the <link
    linkend="configmain-state_retention_file">state retention file</link>), <emphasis>unless</emphasis> you disable the <link
    linkend="configmain-use_retained_program_state">use_retained_program_state</link> option. If you want to change this option when state
    retention is active (and the <link linkend="configmain-use_retained_program_state">use_retained_program_state</link> is enabled), you'll
    have to use the appropriate <link linkend="extcommands">external command</link> or change it via the web interface.</para>
  </note>

  <para>Values are as follows:</para>

  <itemizedlist>
    <listitem>
      <para>0 = Disable notifications</para>
    </listitem>

    <listitem>
      <para>1 = Enable notifications (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-execute_service_checks"/> <emphasis role="bold">Service Check Execution Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">execute_service_checks=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">execute_service_checks=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will execute service checks when it initially (re)starts. If this option is
  disabled, &name-icinga; will not actively execute any service checks and will remain in a sort of "sleep" mode (it can still accept <link
  linkend="passivechecks">passive checks</link> unless you've <link linkend="configmain-accept_passive_service_checks">disabled
  them</link>). This option is most often used when configuring backup monitoring servers, as described in the documentation on <link
  linkend="redundancy">redundancy</link>, or when setting up a <link linkend="distributed">distributed</link> monitoring environment.</para>

  <note>
    <para>If you have <link linkend="configmain-retain_state_information">state retention</link> enabled, &name-icinga; will ignore this
    setting when it (re)starts and use the last known setting for this option (as stored in the <link
    linkend="configmain-state_retention_file">state retention file</link>), <emphasis>unless</emphasis> you disable the <link
    linkend="configmain-use_retained_program_state">use_retained_program_state</link> option. If you want to change this option when state
    retention is active (and the <link linkend="configmain-use_retained_program_state">use_retained_program_state</link> is enabled), you'll
    have to use the appropriate <link linkend="extcommands">external command</link> or change it via the web interface.</para>
  </note>

  <para>Values are as follows:</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't execute service checks</para>
    </listitem>

    <listitem>
      <para>1 = Execute service checks (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-accept_passive_service_checks"/> <emphasis role="bold">Passive Service Check Acceptance
  Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">accept_passive_service_checks=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">accept_passive_service_checks=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will accept <link linkend="passivechecks">passive service checks</link> when it
  initially (re)starts. If this option is disabled, &name-icinga; will not accept any passive service checks.</para>

  <note>
    <para>If you have <link linkend="configmain-retain_state_information">state retention</link> enabled, &name-icinga; will ignore this
    setting when it (re)starts and use the last known setting for this option (as stored in the <link
    linkend="configmain-state_retention_file">state retention file</link>), <emphasis>unless</emphasis> you disable the <link
    linkend="configmain-use_retained_program_state">use_retained_program_state</link> option. If you want to change this option when state
    retention is active (and the <link linkend="configmain-use_retained_program_state">use_retained_program_state</link> is enabled), you'll
    have to use the appropriate <link linkend="extcommands">external command</link> or change it via the web interface.</para>
  </note>

  <para>Values are as follows:</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't accept passive service checks</para>
    </listitem>

    <listitem>
      <para>1 = Accept passive service checks (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-execute_host_checks"/> <emphasis role="bold">Host Check Execution Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">execute_host_checks=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">execute_host_checks=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will execute on-demand and regularly scheduled host checks when it initially
  (re)starts. If this option is disabled, &name-icinga; will not actively execute any host checks, although it can still accept <link
  linkend="passivechecks">passive host checks</link> unless you've <link linkend="configmain-accept_passive_host_checks">disabled
  them</link>). This option is most often used when configuring backup monitoring servers, as described in the documentation on <link
  linkend="redundancy">redundancy</link>, or when setting up a <link linkend="distributed">distributed</link> monitoring environment.</para>

  <note>
    <para>If you have <link linkend="configmain-retain_state_information">state retention</link> enabled, &name-icinga; will ignore this
    setting when it (re)starts and use the last known setting for this option (as stored in the <link
    linkend="configmain-state_retention_file">state retention file</link>), <emphasis>unless</emphasis> you disable the <link
    linkend="configmain-use_retained_program_state">use_retained_program_state</link> option. If you want to change this option when state
    retention is active (and the <link linkend="configmain-use_retained_program_state">use_retained_program_state</link> is enabled), you'll
    have to use the appropriate <link linkend="extcommands">external command</link> or change it via the web interface.</para>
  </note>

  <para>Values are as follows:</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't execute host checks</para>
    </listitem>

    <listitem>
      <para>1 = Execute host checks (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-accept_passive_host_checks"/> <emphasis role="bold">Passive Host Check Acceptance
  Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">accept_passive_host_checks=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">accept_passive_host_checks=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will accept <link linkend="passivechecks">passive host checks</link> when it
  initially (re)starts. If this option is disabled, &name-icinga; will not accept any passive host checks.</para>

  <note>
    <para>If you have <link linkend="configmain-retain_state_information">state retention</link> enabled, &name-icinga; will ignore this
    setting when it (re)starts and use the last known setting for this option (as stored in the <link
    linkend="configmain-state_retention_file">state retention file</link>), <emphasis>unless</emphasis> you disable the <link
    linkend="configmain-use_retained_program_state">use_retained_program_state</link> option. If you want to change this option when state
    retention is active (and the <link linkend="configmain-use_retained_program_state">use_retained_program_state</link> is enabled), you'll
    have to use the appropriate <link linkend="extcommands">external command</link> or change it via the web interface.</para>
  </note>

  <para>Values are as follows:</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't accept passive host checks</para>
    </listitem>

    <listitem>
      <para>1 = Accept passive host checks (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-enable_event_handlers"/> <emphasis role="bold">Event Handler Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">enable_event_handlers=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">enable_event_handlers=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will run <link linkend="eventhandlers">event handlers</link> when it initially
  (re)starts. If this option is disabled, &name-icinga; will not run any host or service event handlers.</para>

  <note>
    <para>If you have <link linkend="configmain-retain_state_information">state retention</link> enabled, &name-icinga; will ignore this
    setting when it (re)starts and use the last known setting for this option (as stored in the <link
    linkend="configmain-state_retention_file">state retention file</link>), <emphasis>unless</emphasis> you disable the <link
    linkend="configmain-use_retained_program_state">use_retained_program_state</link> option. If you want to change this option when state
    retention is active (and the <link linkend="configmain-use_retained_program_state">use_retained_program_state</link> is enabled), you'll
    have to use the appropriate <link linkend="extcommands">external command</link> or change it via the web interface.</para>
  </note>

  <para>Values are as follows:</para>

  <itemizedlist>
    <listitem>
      <para>0 = Disable event handlers</para>
    </listitem>

    <listitem>
      <para>1 = Enable event handlers (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-log_rotation_method"/> <emphasis role="bold">Log Rotation Method</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_rotation_method=&lt;n/h/d/w/m&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_rotation_method=d</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the rotation method that you would like &name-icinga; to use for your log file. Values are as follows:</para>

  <itemizedlist>
    <listitem>
      <para>n = None (don't rotate the log - this is the default)</para>
    </listitem>

    <listitem>
      <para>h = Hourly (rotate the log at the top of each hour)</para>
    </listitem>

    <listitem>
      <para>d = Daily (rotate the log at midnight each day)</para>
    </listitem>

    <listitem>
      <para>w = Weekly (rotate the log at midnight on Saturday)</para>
    </listitem>

    <listitem>
      <para>m = Monthly (rotate the log at midnight on the last day of the month)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-log_archive_path"/> <emphasis role="bold">Log Archive Path</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_archive_path=&lt;path&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">log_archive_path=&url-icinga-base;/var/archives/</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the directory where &name-icinga; should place log files that have been rotated. This option is ignored if you choose to not
  use the <link linkend="configmain-log_rotation_method">log rotation</link> functionality.</para>

  <para><anchor xml:id="configmain-check_external_commands"/> <emphasis role="bold">External Command Check Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">check_external_commands=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">check_external_commands=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will check the <link linkend="configmain-command_file">command file</link> for
  commands that should be executed. This option must be enabled if you plan on using the <link linkend="cgis-cmd_cgi">command CGI</link> to
  issue commands via the web interface. More information on external commands can be found <link linkend="extcommands">here</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't check external commands</para>
    </listitem>

    <listitem>
      <para>1 = Check external commands (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-command_check_interval"/> <emphasis role="bold">External Command Check Interval</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">command_check_interval=&lt;xxx&gt;[s]</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">command_check_interval=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>If you specify a number with an "s" appended to it (i.e. 30s), this is the number of <emphasis>seconds</emphasis> to wait between
  external command checks. If you leave off the "s", this is the number of "time units" to wait between external command checks. Unless
  you've changed the <link linkend="configmain-interval_length">interval_length</link> value (as defined below) from the default value of
  60, this number will mean minutes.</para>

  <note>
    <para>By setting this value to <emphasis role="bold">-1</emphasis>, &name-icinga; will check for external commands as often as possible.
    Each time &name-icinga; checks for external commands it will read and process all commands present in the <link
    linkend="configmain-command_file">command file</link> before continuing on with its other duties. More information on external commands
    can be found <link linkend="extcommands">here</link>.</para>
  </note>

  <para><anchor xml:id="configmain-command_file"/> <emphasis role="bold">External Command File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">command_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">command_file=&url-icinga-base;/var/rw/icinga.cmd</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the file that &name-icinga; will check for external commands to process. The <link linkend="cgis-cmd_cgi">command CGI</link>
  writes commands to this file. The external command file is implemented as a named pipe (FIFO), which is created when &name-icinga; starts
  and removed when it shuts down. If the file exists when &name-icinga; starts, the &name-icinga; process will terminate with an error
  message. More information on external commands can be found <link linkend="extcommands">here</link>.</para>

  <para><anchor xml:id="configmain-external_command_buffer_slots"/> <emphasis role="bold">External Command Buffer Slots</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">external_command_buffer_slots=&lt;#&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">external_command_buffer_slots=512</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <note>
    <para>This is an advanced feature. This option determines how many buffer slots &name-icinga; will reserve for caching external commands
    that have been read from the external command file by a worker thread, but have not yet been processed by the main thread of the
    &name-icinga; deamon. Each slot can hold one external command, so this option essentially determines how many commands can be buffered.
    For installations where you process a large number of passive checks (e.g. <link linkend="distributed">distributed setups</link>), you
    may need to increase this number. You should consider using &name-pnp; to graph &name-icinga;'s usage of external command buffers. You
    can read more on how to configure graphing <link linkend="perfgraphs">here</link>.</para>
  </note>

  <para><anchor xml:id="configmain-lock_file"/> <emphasis role="bold">Lock File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">lock_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">lock_file=/tmp/icinga.lock</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option specifies the location of the lock file that &name-icinga; should create when it runs as a daemon (when started with the
  -d command line argument). This file contains the process id (PID) number of the running &name-icinga; process.</para>

  <para><anchor xml:id="configmain-retain_state_information"/> <emphasis role="bold">State Retention Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">retain_state_information=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">retain_state_information=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will retain state information for hosts and services between program restarts.
  If you enable this option, you should supply a value for the <link linkend="configmain-state_retention_file">state_retention_file</link>
  variable. When enabled, &name-icinga; will save all state information for hosts and service before it shuts down (or restarts) and will
  read in previously saved state information when it starts up again.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't retain state information</para>
    </listitem>

    <listitem>
      <para>1 = Retain state information (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-state_retention_file"/> <emphasis role="bold">State Retention File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">state_retention_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">state_retention_file=&url-icinga-base;/var/retention.dat</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the file that &name-icinga; will use for storing status, downtime, and comment information before it shuts down. When
  &name-icinga; is restarted it will use the information stored in this file for setting the initial states of services and hosts before it
  starts monitoring anything. In order to make &name-icinga; retain state information between program restarts, you must enable the <link
  linkend="configmain-retain_state_information">retain_state_information</link> option.</para>

  <para><anchor xml:id="configmain-sync_retention_file"/> <emphasis role="bold">Sync Retention File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">sync_retention_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">sync_retention_file=&url-icinga-base;/var/sync.dat</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is an advanced option which works like the state_retention_file so that you can load a subset of retention information such as
  status , acknowledgements, downtimes, and comments (you will have to create the contents of this file outside of &name-icinga;). When
  &name-icinga; is restarted, it reads the information in the sync_retention_file and will update the host or service specified <emphasis>if
  the last_update time in the sync file is newer</emphasis> than in the state_retention_file, otherwise information will be discarded for
  that host or service. After the sync file has been read, it will be removed. To disable, comment out the option. This option can be used
  starting with &name-icinga; 1.0.2.</para>

  <para><anchor xml:id="configmain-retention_update_interval"/> <emphasis role="bold">Automatic State Retention Update
  Interval</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">retention_update_interval=&lt;minutes&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">retention_update_interval=60</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This setting determines how often (in minutes) that &name-icinga; will automatically save retention data during normal operation. If
  you set this value to 0, &name-icinga; will not save retention data at regular intervals, but it will still save retention data before
  shutting down or restarting. If you have disabled state retention (with the <link
  linkend="configmain-retain_state_information">retain_state_information</link> option), this option has no effect.</para>

  <para><anchor xml:id="configmain-use_retained_program_state"/> <emphasis role="bold">Use Retained Program State Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">use_retained_program_state=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">use_retained_program_state=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This setting determines whether or not &name-icinga; will set various program-wide state variables based on the values saved in the
  retention file. Some of these program-wide state variables that are normally saved across program restarts if state retention is enabled
  include the <link linkend="configmain-enable_notifications">enable_notifications</link>, <link
  linkend="configmain-enable_flap_detection">enable_flap_detection</link>, <link
  linkend="configmain-enable_event_handlers">enable_event_handlers</link>, <link
  linkend="configmain-execute_service_checks">execute_service_checks</link>, and <link
  linkend="configmain-accept_passive_service_checks">accept_passive_service_checks</link> options. If you do not have <link
  linkend="configmain-retain_state_information">state retention</link> enabled, this option has no effect.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't use retained program state</para>
    </listitem>

    <listitem>
      <para>1 = Use retained program state (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-use_retained_scheduling_info"/> <emphasis role="bold">Use Retained Scheduling Info
  Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">use_retained_scheduling_info=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">use_retained_scheduling_info=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This setting determines whether or not &name-icinga; will retain scheduling info (next check times) for hosts and services when it
  restarts. If you are adding a large number (or percentage) of hosts and services, we would recommend disabling this option when you first
  restart &name-icinga;, as it can adversely skew the spread of initial checks. Otherwise you will probably want to leave it enabled.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't use retained scheduling info</para>
    </listitem>

    <listitem>
      <para>1 = Use retained scheduling info (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-retained_host_attribute_mask"/></para>

  <para><anchor xml:id="configmain-retained_service_attribute_mask"/> <emphasis role="bold">Retained Host and Service Attribute
  Masks</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para>
               

              <emphasis role="bold">retained_host_attribute_mask=&lt;number&gt;</emphasis>

               
            </para> <para>
               

              <emphasis role="bold">retained_service_attribute_mask=&lt;number&gt;</emphasis>

               
            </para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para>
               

              <emphasis condition="red" role="color">
                 

                <emphasis role="bold">retained_host_attribute_mask=0</emphasis>

                 
              </emphasis>

               
            </para> <para>
               

              <emphasis condition="red" role="color">
                 

                <emphasis role="bold">retained_service_attribute_mask=0</emphasis>

                 
              </emphasis>

               
            </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>WARNING: This is an advanced feature. You'll need to read the &name-icinga; source code to use this option effectively.</para>

  <para>These options determine which host or service attributes are NOT retained across program restarts. The values for these options are
  a bitwise AND of values specified by the "MODATTR_" definitions in the include/common.h source code file. By default, all host and service
  attributes are retained.</para>

  <para><anchor xml:id="configmain-retained_process_host_attribute_mask"/></para>

  <para><anchor xml:id="configmain-retained_process_service_attribute_mask"/> <emphasis role="bold">Retained Process Attribute
  Masks</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para>
               

              <emphasis role="bold">retained_process_host_attribute_mask=&lt;number&gt;</emphasis>

               
            </para> <para>
               

              <emphasis role="bold">retained_process_service_attribute_mask=&lt;number&gt;</emphasis>

               
            </para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para>
               

              <emphasis condition="red" role="color">
                 

                <emphasis role="bold">retained_process_host_attribute_mask=0</emphasis>

                 
              </emphasis>

               
            </para> <para>
               

              <emphasis condition="red" role="color">
                 

                <emphasis role="bold">retained_process_service_attribute_mask=0</emphasis>

                 
              </emphasis>

               
            </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>WARNING: This is an advanced feature. You'll need to read the &name-icinga; source code to use this option effectively.</para>

  <para>These options determine which process attributes are NOT retained across program restarts. There are two masks because there are
  often separate host and service process attributes that can be changed. For example, host checks can be disabled at the program level,
  while service checks are still enabled. The values for these options are a bitwise AND of values specified by the "MODATTR_" definitions
  in the include/common.h source code file. By default, all process attributes are retained.</para>

  <para><anchor xml:id="configmain-retained_contact_host_attribute_mask"/></para>

  <para><anchor xml:id="configmain-retained_contact_service_attribute_mask"/> <emphasis role="bold">Retained Contact Attribute
  Masks</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para>
               

              <emphasis role="bold">retained_contact_host_attribute_mask=&lt;number&gt;</emphasis>

               
            </para> <para>
               

              <emphasis role="bold">retained_contact_service_attribute_mask=&lt;number&gt;</emphasis>

               
            </para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para>
               

              <emphasis condition="red" role="color">
                 

                <emphasis role="bold">retained_contact_host_attribute_mask=0</emphasis>

                 
              </emphasis>

               
            </para> <para>
               

              <emphasis condition="red" role="color">
                 

                <emphasis role="bold">retained_contact_service_attribute_mask=0</emphasis>

                 
              </emphasis>

               
            </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>WARNING: This is an advanced feature. You'll need to read the &name-icinga; source code to use this option effectively.</para>

  <para>These options determine which contact attributes are NOT retained across program restarts. There are two masks because there are
  often separate host and service contact attributes that can be changed. The values for these options are a bitwise AND of values specified
  by the "MODATTR_" definitions in the include/common.h source code file. By default, all process attributes are retained.</para>

  <para><anchor xml:id="configmain-use_syslog"/> <emphasis role="bold">Syslog Logging Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">use_syslog=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">use_syslog=1</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable determines whether messages are logged to the syslog facility on your local host. Values are as follows:</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't use syslog facility</para>
    </listitem>

    <listitem>
      <para>1 = Use syslog facility</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-use_syslog_local_facility"/> <emphasis role="bold">Local Syslog Facility Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">use_syslog_local_facility=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">use_syslog_local_facility=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>If you enabled use_syslog you can set &name-icinga; to use a local facility instead of the default. Values are as follows:</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't use syslog local facility</para>
    </listitem>

    <listitem>
      <para>1 = Use syslog local facility</para>
    </listitem>
  </itemizedlist>

  <para>This option can be used starting with &name-icinga; 1.0.2.</para>

  <para><anchor xml:id="configmain-syslog_local_facility"/> <emphasis role="bold">Syslog Local Facility Value</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">syslog_local_facility=&lt;0|1|2|3|4|5|6|7&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">syslog_local_facility=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>If you enabled use_syslog_local_facility you can choose which local facility to use. Valid values are from 0 to 7. This option can
  be used starting with &name-icinga; 1.0.2.</para>

  <para><anchor xml:id="configmain-log_notifications"/> <emphasis role="bold">Notification Logging Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_notifications=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_notifications=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable determines whether or not notification messages are logged. If you have a lot of contacts or regular service failures
  your log file will grow relatively quickly. Use this option to keep contact notifications from being logged.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't log notifications</para>
    </listitem>

    <listitem>
      <para>1 = Log notifications</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-log_service_retries"/> <emphasis role="bold">Service Check Retry Logging Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_service_retries=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_service_retries=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable determines whether or not service check retries are logged. Service check retries occur when a service check results
  in a non-OK state, but you have configured &name-icinga; to retry the service more than once before responding to the error. Services in
  this situation are considered to be in "soft" states. Logging service check retries is mostly useful when attempting to debug
  &name-icinga; or test out service <link linkend="eventhandlers">event handlers</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't log service check retries</para>
    </listitem>

    <listitem>
      <para>1 = Log service check retries</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-log_host_retries"/> <emphasis role="bold">Host Check Retry Logging Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_host_retries=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_host_retries=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable determines whether or not host check retries are logged. Logging host check retries is mostly useful when attempting
  to debug &name-icinga; or test out host <link linkend="eventhandlers">event handlers</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't log host check retries</para>
    </listitem>

    <listitem>
      <para>1 = Log host check retries</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-log_event_handlers"/> <emphasis role="bold">Event Handler Logging Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_event_handlers=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_event_handlers=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable determines whether or not service and host <link linkend="eventhandlers">event handlers</link> are logged. Event
  handlers are optional commands that can be run whenever a service or hosts changes state. Logging event handlers is most useful when
  debugging &name-icinga; or first trying out your event handler scripts.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't log event handlers</para>
    </listitem>

    <listitem>
      <para>1 = Log event handlers</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-log_initial_states"/> <emphasis role="bold">Initial States Logging Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_initial_states=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_initial_states=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable determines whether or not &name-icinga; will force all initial host and service states to be logged, even if they
  result in an OK state. Initial service and host states are normally only logged when there is a problem on the first check. Enabling this
  option is useful if you are using an application that scans the log file to determine long-term state statistics for services and
  hosts.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't log initial states (default)</para>
    </listitem>

    <listitem>
      <para>1 = Log initial states</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-log_external_commands"/> <emphasis role="bold">External Command Logging Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_external_commands=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_external_commands=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable determines whether or not &name-icinga; will log <link linkend="extcommands">external commands</link> that it receives
  from the <link linkend="configmain-command_file">external command file</link>.</para>

  <note>
    <para>This option does not control whether or not <link linkend="passivechecks">passive service checks</link> (which are a type of
    external command) get logged. To enable or disable logging of passive checks, use the <link
    linkend="configmain-log_passive_checks">log_passive_checks</link> option.</para>
  </note>

  <itemizedlist>
    <listitem>
      <para>0 = Don't log external commands</para>
    </listitem>

    <listitem>
      <para>1 = Log external commands (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-log_external_commands_user"/> <emphasis role="bold">External Commands User Logging
  Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_external_commands_user=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_external_commands_user=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to enable the logging of the current user of external commands. The syntax will be CMD;username;cmdargs
  instead of CMD;cmdargs written to the logs, if the external application sends that correctly. Since this will break compatibility with
  existing log parsers, it is intentionally disabled by default.</para>

  <note>
    <para>This option is deprecated starting with &name-icinga; 1.4 because you can use the directive <link
    linkend="configcgi-use_logging">use_logging</link> to enable logging of CGI commands.</para>
  </note>

  <itemizedlist>
    <listitem>
      <para>0 = Don't log user name using external commands (default)</para>
    </listitem>

    <listitem>
      <para>1 = Log user name using external commands</para>
    </listitem>
  </itemizedlist>

  <note>
    <para>This option is available starting with &name-icinga; 1.0.3.</para>
  </note>

  <para><anchor xml:id="configmain-log_passive_checks"/> <emphasis role="bold">Passive Check Logging Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_passive_checks=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_passive_checks=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable determines whether or not &name-icinga; will log <link linkend="passivechecks">passive host and service checks</link>
  that it receives from the <link linkend="configmain-command_file">external command file</link>. If you are setting up a <link
  linkend="distributed">distributed monitoring environment</link> or plan on handling a large number of passive checks on a regular basis,
  you may wish to disable this option so your log file doesn't get too large.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't log passive checks</para>
    </listitem>

    <listitem>
      <para>1 = Log passive checks (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-log_current_states"/> <emphasis role="bold">Current State Logging Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_current_states=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_current_states=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable determines whether or not &name-icinga; will log the current states of hosts and services after a log rotation. If you
  set the value of log_current_states to 0 the current states will not be written to the main log file after a log rotation.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't log current host and service states</para>
    </listitem>

    <listitem>
      <para>1 = Log current host and service states (default)</para>
    </listitem>
  </itemizedlist>

  <note>
    <para>This option is available starting with &name-icinga; 1.0.3.</para>
  </note>

  <para><anchor xml:id="configmain-log_long_plugin_output"/> <emphasis role="bold">Long Plugin Output Logging Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">log_long_plugin_output=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">log_long_plugin_output=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable determines whether or not &name-icinga; will log the complete output of a plugin (not only the first line). If you set
  the value of log_long_plugin_output to 1 the complete plugin output will be logged.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Only log the first line of plugin output (default)</para>
    </listitem>

    <listitem>
      <para>1 = Log complete plugin output</para>
    </listitem>
  </itemizedlist>

  <note>
    <para>This option is available starting with &name-icinga; 1.0.3.</para>
  </note>

  <para><anchor xml:id="configmain-global_host_event_handler"/> <emphasis role="bold">Global Host Event Handler Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">global_host_event_handler=&lt;command&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">global_host_event_handler=log-host-event-to-db</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify a host event handler command that is to be run for every host state change. The global event
  handler is executed immediately prior to the event handler that you have optionally specified in each host definition. The
  <emphasis>command</emphasis> argument is the short name of a command that you define in your <link linkend="configobject">object
  configuration file</link>. The maximum amount of time that this command can run is controlled by the <link
  linkend="configmain-event_handler_timeout">event_handler_timeout</link> option. More information on event handlers can be found <link
  linkend="eventhandlers">here</link>.</para>

  <para><anchor xml:id="configmain-global_service_event_handler"/> <emphasis role="bold">Global Service Event Handler
  Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">global_service_event_handler=&lt;command&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">global_service_event_handler=log-service-event-to-db</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify a service event handler command that is to be run for every service state change. The global event
  handler is executed immediately prior to the event handler that you have optionally specified in each service definition. The
  <emphasis>command</emphasis> argument is the short name of a command that you define in your <link linkend="configobject">object
  configuration file</link>. The maximum amount of time that this command can run is controlled by the <link
  linkend="configmain-event_handler_timeout">event_handler_timeout</link> option. More information on event handlers can be found <link
  linkend="eventhandlers">here</link>.</para>

  <para><anchor xml:id="configmain-stalking_event_handlers_for_hosts"/> <emphasis role="bold"> Event handlers for stalked
  hosts</emphasis></para>

  <para><anchor xml:id="configmain-stalking_event_handlers_for_services"/> <emphasis role="bold"> Event handlers for stalked
  services</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para>
               

              <emphasis role="bold">stalking_event_handlers_for_hosts=&lt;0|1&gt;</emphasis>

               
            </para> <para>
               

              <emphasis role="bold">stalking_event_handlers_for_services=&lt;0|1&gt;</emphasis>

               
            </para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">stalking_event_handlers_for_hosts=1</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>These options allow you to specify whether or not &name-icinga; executes event handlers for stalked hosts or services, respectively.
  This way it is possible to forward status information changes to external systems.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Event handler disabled (default)</para>
    </listitem>

    <listitem>
      <para>1 = Event handler enabled</para>
    </listitem>
  </itemizedlist>

  <note>
    <para>This option is available starting with &name-icinga; 1.0.3.</para>
  </note>

  <para><anchor xml:id="configmain-stalking_notifications_for_hosts"/> <emphasis role="bold">Notifications for stalked
  hosts</emphasis></para>

  <para><anchor xml:id="configmain-stalking_notifications_for_services"/> <emphasis role="bold">Notifications for stalked
  services</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para>
               

              <emphasis role="bold">stalking_notification_for_hosts=&lt;0|1&gt;</emphasis>

               
            </para> <para>
               

              <emphasis role="bold">stalking_notifications_for_services=&lt;0|1&gt;</emphasis>

               
            </para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">stalking_notifications_for_hosts=1</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>These options specify globally for all contacts whether or not &name-icinga; sends notifications for stalked hosts/services.</para>

  <note>
    <para>Unless there are no stalking_options defined on a host/service, the global definitions above won't affect anything.</para>
  </note>

  <itemizedlist>
    <listitem>
      <para>0 = Notifications disabled (default)</para>
    </listitem>

    <listitem>
      <para>1 = Notifications enabled</para>
    </listitem>
  </itemizedlist>

  <note>
    <para>This option is available starting with &name-icinga; 1.6.</para>
  </note>

  <para><anchor xml:id="configmain-sleep_time"/> <emphasis role="bold">Inter-Check Sleep Time</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">sleep_time=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">sleep_time=1</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the number of seconds that &name-icinga; will sleep before checking to see if the next service or host check in the
  scheduling queue should be executed. Note that &name-icinga; will only sleep after it "catches up" with queued service checks that have
  fallen behind.</para>

  <para><anchor xml:id="configmain-service_inter_check_delay_method"/> <emphasis role="bold">Service Inter-Check Delay
  Method</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">service_inter_check_delay_method=&lt;n/d/s/x.xx&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">service_inter_check_delay_method=s</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to control how service checks are initially "spread out" in the event queue. Using a "smart" delay
  calculation (the default) will cause &name-icinga; to calculate an average check interval and spread initial checks of all services out
  over that interval, thereby helping to eliminate CPU load spikes. Using no delay is generally <emphasis>not</emphasis> recommended, as it
  will cause all service checks to be scheduled for execution at the same time. This means that you will generally have large CPU spikes
  when the services are all executed in parallel. More information on how to estimate how the inter-check delay affects service check
  scheduling can be found <link linkend="checkscheduling-service_inter_check_delay">here</link>. Values are as follows:</para>

  <itemizedlist>
    <listitem>
      <para>n = Don't use any delay - schedule all service checks to run immediately (i.e. at the same time!)</para>
    </listitem>

    <listitem>
      <para>d = Use a "dumb" delay of 1 second between service checks</para>
    </listitem>

    <listitem>
      <para>s = Use a "smart" delay calculation to spread service checks out evenly (default)</para>
    </listitem>

    <listitem>
      <para>x.xx = Use a user-supplied inter-check delay of x.xx seconds</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-max_service_check_spread"/> <emphasis role="bold">Maximum Service Check Spread</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">max_service_check_spread=&lt;minutes&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">max_service_check_spread=30</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines the maximum number of minutes from when &name-icinga; starts that all services (that are scheduled to be
  regularly checked) are checked. This option will automatically adjust the <link
  linkend="configmain-service_inter_check_delay_method">service inter-check delay method</link> (if necessary) to ensure that the initial
  checks of all services occur within the timeframe you specify. In general, this option will not have an affect on service check scheduling
  if scheduling information is being retained using the <link
  linkend="configmain-use_retained_scheduling_info">use_retained_scheduling_info</link> option. Default value is <emphasis
  role="bold">30</emphasis> (minutes).</para>

  <para><anchor xml:id="configmain-service_interleave_factor"/> <emphasis role="bold">Service Interleave Factor</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">service_interleave_factor=&lt;s|x&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">service_interleave_factor=s</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This variable determines how service checks are interleaved. Interleaving allows for a more even distribution of service checks,
  reduced load on remote hosts, and faster overall detection of host problems. Setting this value to 1 is equivalent to not interleaving the
  service checks (this is how versions of &name-icinga; previous to 0.0.5 worked). Set this value to <emphasis role="bold">s</emphasis>
  (smart) for automatic calculation of the interleave factor unless you have a specific reason to change it. The best way to understand how
  interleaving works is to watch the <link linkend="cgis-status_cgi">status CGI</link> (detailed view) when &name-icinga; is just starting.
  You should see that the service check results are spread out as they begin to appear. More information on how interleaving works can be
  found <link linkend="checkscheduling-service_interleaving">here</link>.</para>

  <itemizedlist>
    <listitem>
      <para><emphasis>x</emphasis> = A number greater than or equal to 1 that specifies the interleave factor to use. An interleave factor
      of 1 is equivalent to not interleaving the service checks.</para>
    </listitem>

    <listitem>
      <para>s = Use a "smart" interleave factor calculation (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-max_concurrent_checks"/> <emphasis role="bold">Maximum Concurrent Service Checks</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">max_concurrent_checks=&lt;max_checks&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">max_concurrent_checks=20</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify the maximum number of service checks that can be run in parallel at any given time. Specifying a
  value of 1 for this variable essentially prevents any service checks from being run in parallel. Specifying a value of 0 (the default)
  does not place any restrictions on the number of concurrent checks. You'll have to modify this value based on the system resources you
  have available on the machine that runs &name-icinga;, as it directly affects the maximum load that will be imposed on the system
  (processor utilization, memory, etc.). More information on how to estimate how many concurrent checks you should allow can be found <link
  linkend="checkscheduling-max_concurrent_checks">here</link>.</para>

  <para><anchor xml:id="configmain-check_result_reaper_frequency"/> <emphasis role="bold">Check Result Reaper Frequency</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">check_result_reaper_frequency=&lt;frequency_in_seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">check_result_reaper_frequency=5</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to control the frequency <emphasis>in seconds</emphasis> of check result "reaper" events. "Reaper" events
  process the results from host and service checks that have finished executing. These events consitute the core of the monitoring logic in
  &name-icinga;.</para>

  <para><anchor xml:id="configmain-max_check_result_reaper_time"/> <emphasis role="bold">Maximum Check Result Reaper Time</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">max_check_result_reaper_time=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">max_check_result_reaper_time=30</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to control the maximum amount of time <emphasis>in seconds</emphasis> that host and service check result
  "reaper" events are allowed to run. "Reaper" events process the results from host and service checks that have finished executing. If
  there are a lot of results to process, reaper events may take a long time to finish, which might delay timely execution of new host and
  service checks. This variable allows you to limit the amount of time that an individual reaper event will run before it hands control back
  over to &name-icinga; for other portions of the monitoring logic.</para>

  <para><anchor xml:id="configmain-check_result_path"/> <emphasis role="bold">Check Result Path</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">check_result_path=&lt;path&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">check_result_path=/var/spool/icinga/checkresults</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This options determines which directory &name-icinga; will use to temporarily store host and service check results before they are
  processed. This directory should not be used to store any other files, as &name-icinga; will periodically clean this directory of old file
  (see the <link linkend="configmain-max_check_result_file_age">max_check_result_file_age</link> option for more information).</para>

  <note>
    <para>Make sure that only a single instance of &name-icinga; has access to the check result path. If multiple instances of &name-icinga;
    have their check result path set to the same directory, you will run into problems with check results being processed (incorrectly) by
    the wrong instance of &name-icinga;!</para>
  </note>

  <para><anchor xml:id="configmain-max_check_result_file_age"/> <emphasis role="bold">Max Check Result File Age</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">max_check_result_file_age=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">max_check_result_file_age=3600</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This options determines the maximum age in seconds that &name-icinga; will consider check result files found in the <link
  linkend="configmain-check_result_path">check_result_path</link> directory to be valid. Check result files that are older that this
  threshold will be deleted by &name-icinga; and the check results they contain will not be processed. By using a value of zero (0) with
  this option, &name-icinga; will process all check result files - even if they're older than your hardware :-).</para>

  <para><anchor xml:id="configmain-host_inter_check_delay_method"/> <emphasis role="bold">Host Inter-Check Delay Method</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">host_inter_check_delay_method=&lt;n/d/s/x.xx&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">host_inter_check_delay_method=s</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to control how host checks <emphasis>that are scheduled to be checked on a regular basis</emphasis> are
  initially "spread out" in the event queue. Using a "smart" delay calculation (the default) will cause &name-icinga; to calculate an
  average check interval and spread initial checks of all hosts out over that interval, thereby helping to eliminate CPU load spikes. Using
  no delay is generally <emphasis>not</emphasis> recommended. Using no delay will cause all host checks to be scheduled for execution at the
  same time. More information on how to estimate how the inter-check delay affects host check scheduling can be found <link
  linkend="checkscheduling-host_inter_check_delay">here</link>. Values are as follows:</para>

  <itemizedlist>
    <listitem>
      <para>n = Don't use any delay - schedule all host checks to run immediately (i.e. at the same time!)</para>
    </listitem>

    <listitem>
      <para>d = Use a "dumb" delay of 1 second between host checks</para>
    </listitem>

    <listitem>
      <para>s = Use a "smart" delay calculation to spread host checks out evenly (default)</para>
    </listitem>

    <listitem>
      <para>x.xx = Use a user-supplied inter-check delay of x.xx seconds</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-max_host_check_spread"/> <emphasis role="bold">Maximum Host Check Spread</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">max_host_check_spread=&lt;minutes&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">max_host_check_spread=30</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines the maximum number of minutes from when &name-icinga; starts that all hosts (that are scheduled to be
  regularly checked) are checked. This option will automatically adjust the <link linkend="configmain-host_inter_check_delay_method">host
  inter-check delay method</link> (if necessary) to ensure that the initial checks of all hosts occur within the timeframe you specify. In
  general, this option will not have an affect on host check scheduling if scheduling information is being retained using the <link
  linkend="configmain-use_retained_scheduling_info">use_retained_scheduling_info</link> option. Default value is <emphasis
  role="bold">30</emphasis> (minutes).</para>

  <para><anchor xml:id="configmain-interval_length"/> <emphasis role="bold">Timing Interval Length</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">interval_length=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">interval_length=60</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the number of seconds per "unit interval" used for timing in the scheduling queue, re-notifications, etc. "Units intervals"
  are used in the object configuration file to determine how often to run a service check, how often to re-notify a contact, etc.</para>

  <para><emphasis role="bold">Important:</emphasis> The default value for this is set to 60, which means that a "unit value" of 1 in the
  object configuration file will mean 60 seconds (1 minute). We have not really tested other values for this variable, so proceed at your
  own risk if you decide to do so!</para>

  <para><anchor xml:id="configmain-auto_reschedule_checks"/> <emphasis role="bold">Auto-Rescheduling Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">auto_reschedule_checks=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">auto_reschedule_checks=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will attempt to automatically reschedule active host and service checks to
  "smooth" them out over time. This can help to balance the load on the monitoring server, as it will attempt to keep the time between
  consecutive checks consistent, at the expense of executing checks on a more rigid schedule.</para>

  <para><emphasis role="bold">WARNING:</emphasis> THIS IS AN EXPERIMENTAL FEATURE AND MAY BE REMOVED IN FUTURE VERSIONS. ENABLING THIS
  OPTION CAN DEGRADE PERFORMANCE - RATHER THAN INCREASE IT - IF USED IMPROPERLY!</para>

  <para><anchor xml:id="configmain-auto_rescheduling_interval"/> <emphasis role="bold">Auto-Rescheduling Interval</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">auto_rescheduling_interval=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">auto_rescheduling_interval=30</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines how often (in seconds) &name-icinga; will attempt to automatically reschedule checks. This option only has an
  effect if the <link linkend="configmain-auto_reschedule_checks">auto_reschedule_checks</link> option is enabled. Default is 30
  seconds.</para>

  <para><emphasis role="bold">WARNING:</emphasis> THIS IS AN EXPERIMENTAL FEATURE AND MAY BE REMOVED IN FUTURE VERSIONS. ENABLING THE
  AUTO-RESCHEDULING OPTION CAN DEGRADE PERFORMANCE - RATHER THAN INCREASE IT - IF USED IMPROPERLY!</para>

  <para><anchor xml:id="configmain-auto_rescheduling_window"/> <emphasis role="bold">Auto-Rescheduling Window</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">auto_rescheduling_window=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">auto_rescheduling_window=180</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines the "window" of time (in seconds) that &name-icinga; will look at when automatically rescheduling checks.
  Only host and service checks that occur in the next X seconds (determined by this variable) will be rescheduled. This option only has an
  effect if the <link linkend="configmain-auto_reschedule_checks">auto_reschedule_checks</link> option is enabled. Default is 180 seconds (3
  minutes).</para>

  <para><emphasis role="bold">WARNING:</emphasis> THIS IS AN EXPERIMENTAL FEATURE AND MAY BE REMOVED IN FUTURE VERSIONS. ENABLING THE
  AUTO-RESCHEDULING OPTION CAN DEGRADE PERFORMANCE - RATHER THAN INCREASE IT - IF USED IMPROPERLY!</para>

  <para><anchor xml:id="configmain-use_agressive_host_checking"/></para>

  <para><anchor xml:id="configmain-use_aggressive_host_checking"/> <emphasis role="bold">Aggressive Host Checking Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">use_aggressive_host_checking=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">use_aggressive_host_checking=0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>&name-icinga; tries to be smart about how and when it checks the status of hosts. In general, disabling this option will allow
  &name-icinga; to make some smarter decisions and check hosts a bit faster. Enabling this option will increase the amount of time required
  to check hosts, but may improve reliability a bit. Unless you have problems with &name-icinga; not recognizing that a host recovered, we
  would suggest <emphasis role="bold">not</emphasis> enabling this option.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't use aggressive host checking (default)</para>
    </listitem>

    <listitem>
      <para>1 = Use aggressive host checking</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-translate_passive_host_checks"/> <emphasis role="bold">Translate Passive Host Checks
  Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">translate_passive_host_checks=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">translate_passive_host_checks=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will translate DOWN/UNREACHABLE passive host check results to their "correct"
  state from the viewpoint of the local &name-icinga; instance. This can be very useful in distributed and failover monitoring
  installations. More information on passive check state translation can be found <link
  linkend="passivestatetranslation">here</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Disable check translation (default)</para>
    </listitem>

    <listitem>
      <para>1 = Enable check translation</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-passive_host_checks_are_soft"/> <emphasis role="bold">Passive Host Checks Are SOFT
  Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">passive_host_checks_are_soft=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">passive_host_checks_are_soft=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will treat <link linkend="passivechecks">passive host checks</link> as HARD
  states or SOFT states. By default, a passive host check result will put a host into a <link linkend="statetypes">HARD state type</link>.
  You can change this behavior by enabling this option.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Passive host checks are HARD (default)</para>
    </listitem>

    <listitem>
      <para>1 = Passive host checks are SOFT</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-enable_predictive_host_dependency_checks"/> <emphasis role="bold">Predictive Host Dependency Checks
  Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">enable_predictive_host_dependency_checks=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">enable_predictive_host_dependency_checks=1</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will execute predictive checks of hosts that are being depended upon (as defined
  in <link linkend="objectdefinitions-hostdependency">host dependencies</link>) for a particular host when it changes state. Predictive
  checks help ensure that the dependency logic is as accurate as possible. More information on how predictive checks work can be found <link
  linkend="dependencychecks">here</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Disable predictive checks</para>
    </listitem>

    <listitem>
      <para>1 = Enable predictive checks (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-enable_predictive_service_dependency_checks"/> <emphasis role="bold">Predictive Service Dependency Checks
  Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">enable_predictive_service_dependency_checks=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">enable_predictive_service_dependency_checks=1</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will execute predictive checks of services that are being depended upon (as
  defined in <link linkend="objectdefinitions-servicedependency">service dependencies</link>) for a particular service when it changes
  state. Predictive checks help ensure that the dependency logic is as accurate as possible. More information on how predictive checks work
  can be found <link linkend="dependencychecks">here</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Disable predictive checks</para>
    </listitem>

    <listitem>
      <para>1 = Enable predictive checks (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-cached_host_check_horizon"/> <emphasis role="bold">Cached Host Check Horizon</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">cached_host_check_horizon=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">cached_host_check_horizon=15</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines the maximum amount of time (in seconds) that the state of a previous host check is considered current. Cached
  host states (from host checks that were performed more recently than the time specified by this value) can improve host check performance
  immensely. Too high of a value for this option may result in (temporarily) inaccurate host states, while a low value may result in a
  performance hit for host checks. Use a value of 0 if you want to disable host check caching. More information on cached checks can be
  found <link linkend="cachedchecks">here</link>.</para>

  <para><anchor xml:id="configmain-cached_service_check_horizon"/> <emphasis role="bold">Cached Service Check Horizon</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">cached_service_check_horizon=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">cached_service_check_horizon=15</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines the maximum amount of time (in seconds) that the state of a previous service check is considered current.
  Cached service states (from service checks that were performed more recently than the time specified by this value) can improve service
  check performance when a lot of <link linkend="objectdefinitions-servicedependency">service dependencies</link> are used. Too high of a
  value for this option may result in inaccuracies in the service dependency logic. Use a value of 0 if you want to disable service check
  caching. More information on cached checks can be found <link linkend="cachedchecks">here</link>.</para>

  <para><anchor xml:id="configmain-use_large_installation_tweaks"/> <emphasis role="bold">Large Installation Tweaks Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">use_large_installation_tweaks=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">use_large_installation_tweaks=0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not the &name-icinga; daemon will take several shortcuts to improve performance. These shortcuts
  result in the loss of a few features, but larger installations will likely see a lot of benefit from doing so. More information on what
  optimizations are taken when you enable this option can be found <link linkend="largeinstalltweaks">here</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't use tweaks (default)</para>
    </listitem>

    <listitem>
      <para>1 = Use tweaks</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-free_child_process_memory"/> <emphasis role="bold">Child Process Memory Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">free_child_process_memory=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">free_child_process_memory=0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will free memory in child processes when they are fork()ed off from the main
  process. By default, &name-icinga; frees memory. However, if the <link
  linkend="configmain-use_large_installation_tweaks">use_large_installation_tweaks</link> option is enabled, it will not. By defining this
  option in your configuration file, you are able to override things to get the behavior you want.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't free memory</para>
    </listitem>

    <listitem>
      <para>1 = Free memory</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-child_processes_fork_twice"/> <emphasis role="bold">Child Processes Fork Twice</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">child_processes_fork_twice=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">child_processes_fork_twice=0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will fork() child processes twice when it executes host and service checks. By
  default, &name-icinga; fork()s twice. However, if the <link
  linkend="configmain-use_large_installation_tweaks">use_large_installation_tweaks</link> option is enabled, it will only fork() once. By
  defining this option in your configuration file, you are able to override things to get the behavior you want.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Fork() just once</para>
    </listitem>

    <listitem>
      <para>1 = Fork() twice</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-enable_environment_macros"/> <emphasis role="bold">Environment Macros Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">enable_environment_macros=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">enable_environment_macros=0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not the &name-icinga; daemon will make all standard <link linkend="macrolist">macros</link>
  available as environment variables to your check, notification, event hander, etc. commands. In large &name-icinga; installations this can
  be problematic because it takes additional memory and (more importantly) CPU to compute the values of all macros and make them available
  to the environment.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't make macros available as environment variables (default)</para>
    </listitem>

    <listitem>
      <para>1 = Make macros available as environment variables</para>
    </listitem>
  </itemizedlist>

  <note>
    <para>The default has changed starting with &name-icinga; 1.5. Prior to this version the directive has been enabled, now it is
    <emphasis>disabled</emphasis>.</para>
  </note>

  <para><anchor xml:id="configmain-enable_flap_detection"/> <emphasis role="bold">Flap Detection Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">enable_flap_detection=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">enable_flap_detection=0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will try and detect hosts and services that are "flapping". Flapping occurs when
  a host or service changes between states too frequently, resulting in a barrage of notifications being sent out. When &name-icinga;
  detects that a host or service is flapping, it will temporarily suppress notifications for that host/service until it stops flapping. Flap
  detection is very experimental at this point, so use this feature with caution! More information on how flap detection and handling works
  can be found <link linkend="flapping">here</link>.</para>

  <note>
    <para>If you have <link linkend="configmain-retain_state_information">state retention</link> enabled, &name-icinga; will ignore this
    setting when it (re)starts and use the last known setting for this option (as stored in the <link
    linkend="configmain-state_retention_file">state retention file</link>), <emphasis>unless</emphasis> you disable the <link
    linkend="configmain-use_retained_program_state">use_retained_program_state</link> option. If you want to change this option when state
    retention is active (and the <link linkend="configmain-use_retained_program_state">use_retained_program_state</link> is enabled), you'll
    have to use the appropriate <link linkend="extcommands">external command</link> or change it via the web interface.</para>
  </note>

  <itemizedlist>
    <listitem>
      <para>0 = Don't enable flap detection (default)</para>
    </listitem>

    <listitem>
      <para>1 = Enable flap detection</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-low_service_flap_threshold"/> <emphasis role="bold">Low Service Flap Threshold</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">low_service_flap_threshold=&lt;percent&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">low_service_flap_threshold=25.0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option is used to set the low threshold for detection of service flapping. For more information on how flap detection and
  handling works (and how this option affects things) read <link linkend="flapping">this</link>.</para>

  <para><anchor xml:id="configmain-high_service_flap_threshold"/> <emphasis role="bold">High Service Flap Threshold</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">high_service_flap_threshold=&lt;percent&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">high_service_flap_threshold=50.0</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option is used to set the high threshold for detection of service flapping. For more information on how flap detection and
  handling works (and how this option affects things) read <link linkend="flapping">this</link>.</para>

  <para><anchor xml:id="configmain-low_host_flap_threshold"/> <emphasis role="bold">Low Host Flap Threshold</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">low_host_flap_threshold=&lt;percent&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">low_host_flap_threshold=25.0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option is used to set the low threshold for detection of host flapping. For more information on how flap detection and handling
  works (and how this option affects things) read <link linkend="flapping">this</link>.</para>

  <para><anchor xml:id="configmain-high_host_flap_threshold"/> <emphasis role="bold">High Host Flap Threshold</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">high_host_flap_threshold=&lt;percent&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">high_host_flap_threshold=50.0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option is used to set the high threshold for detection of host flapping. For more information on how flap detection and
  handling works (and how this option affects things) read <link linkend="flapping">this</link>.</para>

  <para><anchor xml:id="configmain-soft_state_dependencies"/> <emphasis role="bold">Soft State Dependencies Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">soft_state_dependencies=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">soft_state_dependencies=0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will use soft state information when checking <link linkend="dependencies">host
  and service dependencies</link>. Normally &name-icinga; will only use the latest hard host or service state when checking dependencies. If
  you want it to use the latest state (regardless of whether its a soft or hard <link linkend="statetypes">state type</link>), enable this
  option.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't use soft state dependencies (default)</para>
    </listitem>

    <listitem>
      <para>1 = Use soft state dependencies</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-service_check_timeout"/> <emphasis role="bold">Service Check Timeout</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">service_check_timeout=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">service_check_timeout=60</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the maximum number of seconds that &name-icinga; will allow service checks to run. If checks exceed this limit, they are
  killed and a CRITICAL state is returned. A timeout error will also be logged.</para>

  <para>There is often widespread confusion as to what this option really does. It is meant to be used as a last ditch mechanism to kill off
  plugins which are misbehaving and not exiting in a timely manner. It should be set to something high (like 60 seconds or more), so that
  each service check normally finishes executing within this time limit. If a service check runs longer than this limit, &name-icinga; will
  kill it off thinking it is a runaway processes.</para>

  <para><anchor xml:id="configmain-service_check_timeout_state"/> <emphasis role="bold">Service Check Timeout State</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">service_check_timeout_state=&lt;c/u/w/o&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">service_check_timeout_state=u</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This setting determines the state &name-icinga; will report when a service check times out - that is does not respond within
  service_check_timeout seconds. This can be useful if a machine is running at too high a load and you do not want to consider a failed
  service check to be critical. The default was changed to service_check_timeout_state=u in &name-icinga;1.0.1</para>

  <para><anchor xml:id="configmain-host_check_timeout"/> <emphasis role="bold">Host Check Timeout</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">host_check_timeout=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">host_check_timeout=60</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the maximum number of seconds that &name-icinga; will allow host checks to run. If checks exceed this limit, they are killed
  and a CRITICAL state is returned and the host will be assumed to be DOWN. A timeout error will also be logged.</para>

  <para>There is often widespread confusion as to what this option really does. It is meant to be used as a last ditch mechanism to kill off
  plugins which are misbehaving and not exiting in a timely manner. It should be set to something high (like 60 seconds or more), so that
  each host check normally finishes executing within this time limit. If a host check runs longer than this limit, &name-icinga; will kill
  it off thinking it is a runaway processes.</para>

  <para><anchor xml:id="configmain-event_handler_timeout"/> <emphasis role="bold">Event Handler Timeout</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">event_handler_timeout=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">event_handler_timeout=60</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the maximum number of seconds that &name-icinga; will allow <link linkend="eventhandlers">event handlers</link> to be run.
  If an event handler exceeds this time limit it will be killed and a warning will be logged.</para>

  <para>There is often widespread confusion as to what this option really does. It is meant to be used as a last ditch mechanism to kill off
  commands which are misbehaving and not exiting in a timely manner. It should be set to something high (like 60 seconds or more), so that
  each event handler command normally finishes executing within this time limit. If an event handler runs longer than this limit,
  &name-icinga; will kill it off thinking it is a runaway processes.</para>

  <para><anchor xml:id="configmain-notification_timeout"/> <emphasis role="bold">Notification Timeout</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">notification_timeout=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">notification_timeout=60</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the maximum number of seconds that &name-icinga; will allow notification commands to be run. If a notification command
  exceeds this time limit it will be killed and a warning will be logged.</para>

  <para>There is often widespread confusion as to what this option really does. It is meant to be used as a last ditch mechanism to kill off
  commands which are misbehaving and not exiting in a timely manner. It should be set to something high (like 60 seconds or more), so that
  each notification command finishes executing within this time limit. If a notification command runs longer than this limit, &name-icinga;
  will kill it off thinking it is a runaway processes.</para>

  <para><anchor xml:id="configmain-ocsp_timeout"/> <emphasis role="bold">Obsessive Compulsive Service Processor Timeout</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">ocsp_timeout=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">ocsp_timeout=5</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the maximum number of seconds that &name-icinga; will allow an <link linkend="configmain-ocsp_command">obsessive compulsive
  service processor command</link> to be run. If a command exceeds this time limit it will be killed and a warning will be logged.</para>

  <para><anchor xml:id="configmain-ochp_timeout"/> <emphasis role="bold">Obsessive Compulsive Host Processor Timeout</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">ochp_timeout=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">ochp_timeout=5</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the maximum number of seconds that &name-icinga; will allow an <link linkend="configmain-ochp_command">obsessive compulsive
  host processor command</link> to be run. If a command exceeds this time limit it will be killed and a warning will be logged.</para>

  <para><anchor xml:id="configmain-perfdata_timeout"/> <emphasis role="bold">Performance Data Processor Command Timeout</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">perfdata_timeout=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">perfdata_timeout=5</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the maximum number of seconds that &name-icinga; will allow a <link linkend="configmain-host_perfdata_command">host
  performance data processor command</link> or <link linkend="configmain-service_perfdata_command">service performance data processor
  command</link> to be run. If a command exceeds this time limit it will be killed and a warning will be logged.</para>

  <para><anchor xml:id="configmain-obsess_over_services"/> <emphasis role="bold">Obsess Over Services Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">obsess_over_services=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">obsess_over_services=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This value determines whether or not &name-icinga; will "obsess" over service checks results and run the <link
  linkend="configmain-ocsp_command">obsessive compulsive service processor command</link> you define. We know - funny name, but it was all
  Ethan could think of. This option is useful for performing <link linkend="distributed">distributed monitoring</link>. If you're not doing
  distributed monitoring, don't enable this option.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't obsess over services (default)</para>
    </listitem>

    <listitem>
      <para>1 = Obsess over services</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-ocsp_command"/> <emphasis role="bold">Obsessive Compulsive Service Processor Command</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">ocsp_command=&lt;command&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">ocsp_command=obsessive_service_handler</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify a command to be run after <emphasis>every</emphasis> service check, which can be useful in <link
  linkend="distributed">distributed monitoring</link>. This command is executed after any <link linkend="eventhandlers">event handler</link>
  or <link linkend="notifications">notification</link> commands. The <emphasis>command</emphasis> argument is the short name of a <link
  linkend="objectdefinitions-command">command definition</link> that you define in your object configuration file. The maximum amount of
  time that this command can run is controlled by the <link linkend="configmain-ocsp_timeout">ocsp_timeout</link> option. More information
  on distributed monitoring can be found <link linkend="distributed">here</link>. This command is only executed if the <link
  linkend="configmain-obsess_over_services">obsess_over_services</link> option is enabled globally and if the
  <emphasis>obsess_over_service</emphasis> directive in the <link linkend="objectdefinitions-service">service definition</link> is
  enabled.</para>

  <para><anchor xml:id="configmain-obsess_over_hosts"/> <emphasis role="bold">Obsess Over Hosts Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">obsess_over_hosts=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">obsess_over_hosts=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This value determines whether or not &name-icinga; will "obsess" over host checks results and run the <link
  linkend="configmain-ochp_command">obsessive compulsive host processor command</link> you define. We know - funny name, but it was all
  Ethan could think of. This option is useful for performing <link linkend="distributed">distributed monitoring</link>. If you're not doing
  distributed monitoring, don't enable this option.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't obsess over hosts (default)</para>
    </listitem>

    <listitem>
      <para>1 = Obsess over hosts</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-ochp_command"/> <emphasis role="bold">Obsessive Compulsive Host Processor Command</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">ochp_command=&lt;command&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">ochp_command=obsessive_host_handler</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify a command to be run after <emphasis>every</emphasis> host check, which can be useful in <link
  linkend="distributed">distributed monitoring</link>. This command is executed after any <link linkend="eventhandlers">event handler</link>
  or <link linkend="notifications">notification</link> commands. The <emphasis>command</emphasis> argument is the short name of a <link
  linkend="objectdefinitions-command">command definition</link> that you define in your object configuration file. The maximum amount of
  time that this command can run is controlled by the <link linkend="configmain-ochp_timeout">ochp_timeout</link> option. More information
  on distributed monitoring can be found <link linkend="distributed">here</link>. This command is only executed if the <link
  linkend="configmain-obsess_over_hosts">obsess_over_hosts</link> option is enabled globally and if the
  <emphasis>obsess_over_host</emphasis> directive in the <link linkend="objectdefinitions-host">host definition</link> is enabled.</para>

  <para><anchor xml:id="configmain-process_performance_data"/> <emphasis role="bold">Performance Data Processing Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">process_performance_data=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">process_performance_data=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This value determines whether or not &name-icinga; will process host and service check <link linkend="perfdata">performance
  data</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't process performance data (default)</para>
    </listitem>

    <listitem>
      <para>1 = Process performance data</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-host_perfdata_command"/> <emphasis role="bold">Host Performance Data Processing Command</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">host_perfdata_command=&lt;command&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">host_perfdata_command=process-host-perfdata</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify a command to be run after <emphasis>every</emphasis> host check to process host <link
  linkend="perfdata">performance data</link> that may be returned from the check. The <emphasis>command</emphasis> argument is the short
  name of a <link linkend="objectdefinitions-command">command definition</link> that you define in your object configuration file. This
  command is only executed if the <link linkend="configmain-process_performance_data">process_performance_data</link> option is enabled
  globally and if the <emphasis>process_perf_data</emphasis> directive in the <link linkend="objectdefinitions-host">host definition</link>
  is enabled.</para>

  <para><anchor xml:id="configmain-service_perfdata_command"/> <emphasis role="bold">Service Performance Data Processing
  Command</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">service_perfdata_command=&lt;command&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">service_perfdata_command=process-service-perfdata</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify a command to be run after <emphasis>every</emphasis> service check to process service <link
  linkend="perfdata">performance data</link> that may be returned from the check. The <emphasis>command</emphasis> argument is the short
  name of a <link linkend="objectdefinitions-command">command definition</link> that you define in your object configuration file. This
  command is only executed if the <link linkend="configmain-process_performance_data">process_performance_data</link> option is enabled
  globally and if the <emphasis>process_perf_data</emphasis> directive in the <link linkend="objectdefinitions-service">service
  definition</link> is enabled.</para>

  <para><anchor xml:id="configmain-host_perfdata_file"/> <emphasis role="bold">Host Performance Data File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">host_perfdata_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">host_perfdata_file=&url-icinga-base;/var/host-perfdata.dat</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify a file to which host <link linkend="perfdata">performance data</link> will be written after every
  host check. Data will be written to the performance file as specified by the <link
  linkend="configmain-host_perfdata_file_template">host_perfdata_file_template</link> option. Performance data is only written to this file
  if the <link linkend="configmain-process_performance_data">process_performance_data</link> option is enabled globally and if the
  <emphasis>process_perf_data</emphasis> directive in the <link linkend="objectdefinitions-host">host definition</link> is enabled.</para>

  <para><anchor xml:id="configmain-service_perfdata_file"/> <emphasis role="bold">Service Performance Data File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">service_perfdata_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">service_perfdata_file=&url-icinga-base;/var/service-perfdata.dat</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify a file to which service <link linkend="perfdata">performance data</link> will be written after
  every service check. Data will be written to the performance file as specified by the <link
  linkend="configmain-service_perfdata_file_template">service_perfdata_file_template</link> option. Performance data is only written to this
  file if the <link linkend="configmain-process_performance_data">process_performance_data</link> option is enabled globally and if the
  <emphasis>process_perf_data</emphasis> directive in the <link linkend="objectdefinitions-service">service definition</link> is
  enabled.</para>

  <para><anchor xml:id="configmain-host_perfdata_file_template"/> <emphasis role="bold">Host Performance Data File
  Template</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">host_perfdata_file_template=&lt;template&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">host_perfdata_file_template=[HOSTPERFDATA]\t$TIMET$\t$HOSTNAME$ \
          \t$HOSTEXECUTIONTIME$\t$HOSTOUTPUT$\t$HOSTPERFDATA$</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines what (and how) data is written to the <link linkend="configmain-host_perfdata_file">host performance data
  file</link>. The template may contain <link linkend="macros">macros</link>, special characters (\t for tab, \r for carriage return, \n for
  newline) and plain text. A newline is automatically added after each write to the performance data file.</para>

  <para><anchor xml:id="configmain-service_perfdata_file_template"/> <emphasis role="bold">Service Performance Data File
  Template</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">service_perfdata_file_template=&lt;template&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">service_perfdata_file_template=[SERVICEPERFDATA]\t$TIMET$\t$HOSTNAME$ \
          \t$SERVICEDESC$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$ \ \t$SERVICEOUTPUT$\t$SERVICEPERFDATA$</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines what (and how) data is written to the <link linkend="configmain-service_perfdata_file">service performance
  data file</link>. The template may contain <link linkend="macros">macros</link>, special characters (\t for tab, \r for carriage return,
  \n for newline) and plain text. A newline is automatically added after each write to the performance data file.</para>

  <para><anchor xml:id="configmain-host_perfdata_file_mode"/> <emphasis role="bold">Host Performance Data File Mode</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">host_perfdata_file_mode=&lt;mode&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">host_perfdata_file_mode=a</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines how the <link linkend="configmain-host_perfdata_file">host performance data file</link> is opened. Unless the
  file is a named pipe you'll probably want to use the default mode of append.</para>

  <itemizedlist>
    <listitem>
      <para>a = Open file in append mode (default)</para>
    </listitem>

    <listitem>
      <para>w = Open file in write mode</para>
    </listitem>

    <listitem>
      <para>p = Open in non-blocking read/write mode (useful when writing to pipes)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-service_perfdata_file_mode"/> <emphasis role="bold">Service Performance Data File Mode</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">service_perfdata_file_mode=&lt;mode&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">service_perfdata_file_mode=a</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines how the <link linkend="configmain-service_perfdata_file">service performance data file</link> is opened.
  Unless the file is a named pipe you'll probably want to use the default mode of append.</para>

  <itemizedlist>
    <listitem>
      <para>a = Open file in append mode (default)</para>
    </listitem>

    <listitem>
      <para>w = Open file in write mode</para>
    </listitem>

    <listitem>
      <para>p = Open in non-blocking read/write mode (useful when writing to pipes)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-host_perfdata_file_processing_interval"/> <emphasis role="bold">Host Performance Data File Processing
  Interval</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">host_perfdata_file_processing_interval=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">host_perfdata_file_processing_interval=0</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify the interval (in seconds) at which the <link linkend="configmain-host_perfdata_file">host
  performance data file</link> is processed using the <link linkend="configmain-host_perfdata_file_processing_command">host performance data
  file processing command</link>. A value of 0 indicates that the performance data file should not be processed at regular intervals.</para>

  <para><anchor xml:id="configmain-service_perfdata_file_processing_interval"/> <emphasis role="bold">Service Performance Data File
  Processing Interval</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">service_perfdata_file_processing_interval=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">service_perfdata_file_processing_interval=0</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify the interval (in seconds) at which the <link linkend="configmain-service_perfdata_file">service
  performance data file</link> is processed using the <link linkend="configmain-service_perfdata_file_processing_command">service
  performance data file processing command</link>. A value of 0 indicates that the performance data file should not be processed at regular
  intervals.</para>

  <para><anchor xml:id="configmain-host_perfdata_file_processing_command"/> <emphasis role="bold">Host Performance Data File Processing
  Command</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">host_perfdata_file_processing_command=&lt;command&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">host_perfdata_file_processing_command=process-host-perfdata-file</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify the command that should be executed to process the <link
  linkend="configmain-host_perfdata_file">host performance data file</link>. The <emphasis>command</emphasis> argument is the short name of
  a <link linkend="objectdefinitions-command">command definition</link> that you define in your object configuration file. The interval at
  which this command is executed is determined by the <link
  linkend="configmain-host_perfdata_file_processing_interval">host_perfdata_file_processing_interval</link> directive.</para>

  <para><anchor xml:id="configmain-service_perfdata_file_processing_command"/> <emphasis role="bold">Service Performance Data File
  Processing Command</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">service_perfdata_file_processing_command=&lt;command&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">service_perfdata_file_processing_command=process-service-perfdata-file</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify the command that should be executed to process the <link
  linkend="configmain-service_perfdata_file">service performance data file</link>. The <emphasis>command</emphasis> argument is the short
  name of a <link linkend="objectdefinitions-command">command definition</link> that you define in your object configuration file. The
  interval at which this command is executed is determined by the <link
  linkend="configmain-service_perfdata_file_processing_interval">service_perfdata_file_processing_interval</link> directive.</para>

  <para><anchor xml:id="configmain-check_for_orphaned_services"/> <emphasis role="bold">Orphaned Service Check Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">check_for_orphaned_services=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">check_for_orphaned_services=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to enable or disable checks for orphaned service checks. Orphaned service checks are checks which have been
  executed and have been removed from the event queue, but have not had any results reported in a long time. Since no results have come back
  in for the service, it is not rescheduled in the event queue. This can cause service checks to stop being executed. Normally it is very
  rare for this to happen - it might happen if an external user or process killed off the process that was being used to execute a service
  check. If this option is enabled and &name-icinga; finds that results for a particular service check have not come back, it will log an
  error message and reschedule the service check. If you start seeing service checks that never seem to get rescheduled, enable this option
  and see if you notice any log messages about orphaned services.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't check for orphaned service checks</para>
    </listitem>

    <listitem>
      <para>1 = Check for orphaned service checks (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-check_for_orphaned_hosts"/> <emphasis role="bold">Orphaned Host Check Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">check_for_orphaned_hosts=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">check_for_orphaned_hosts=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to enable or disable checks for orphaned hoste checks. Orphaned host checks are checks which have been
  executed and have been removed from the event queue, but have not had any results reported in a long time. Since no results have come back
  in for the host, it is not rescheduled in the event queue. This can cause host checks to stop being executed. Normally it is very rare for
  this to happen - it might happen if an external user or process killed off the process that was being used to execute a host check. If
  this option is enabled and &name-icinga; finds that results for a particular host check have not come back, it will log an error message
  and reschedule the host check. If you start seeing host checks that never seem to get rescheduled, enable this option and see if you
  notice any log messages about orphaned hosts.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't check for orphaned host checks</para>
    </listitem>

    <listitem>
      <para>1 = Check for orphaned host checks (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-check_service_freshness"/> <emphasis role="bold">Service Freshness Checking Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">check_service_freshness=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">check_service_freshness=0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will periodically check the "freshness" of service checks. Enabling this option
  is useful for helping to ensure that <link linkend="passivechecks">passive service checks</link> are received in a timely manner. More
  information on freshness checking can be found <link linkend="freshness">here</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't check service freshness</para>
    </listitem>

    <listitem>
      <para>1 = Check service freshness (default)</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-service_freshness_check_interval"/> <emphasis role="bold">Service Freshness Check
  Interval</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">service_freshness_check_interval=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">service_freshness_check_interval=60</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This setting determines how often (in seconds) &name-icinga; will periodically check the "freshness" of service check results. If
  you have disabled service freshness checking (with the <link linkend="configmain-check_service_freshness">check_service_freshness</link>
  option), this option has no effect. More information on freshness checking can be found <link linkend="freshness">here</link>.</para>

  <para><anchor xml:id="configmain-check_host_freshness"/> <emphasis role="bold">Host Freshness Checking Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">check_host_freshness=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">check_host_freshness=0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not &name-icinga; will periodically check the "freshness" of host checks. Enabling this option is
  useful for helping to ensure that <link linkend="passivechecks">passive host checks</link> are received in a timely manner. More
  information on freshness checking can be found <link linkend="freshness">here</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't check host freshness (default)</para>
    </listitem>

    <listitem>
      <para>1 = Check host freshness</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-host_freshness_check_interval"/> <emphasis role="bold">Host Freshness Check Interval</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">host_freshness_check_interval=&lt;seconds&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">host_freshness_check_interval=60</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This setting determines how often (in seconds) &name-icinga; will periodically check the "freshness" of host check results. If you
  have disabled host freshness checking (with the <link linkend="configmain-check_host_freshness">check_host_freshness</link> option), this
  option has no effect. More information on freshness checking can be found <link linkend="freshness">here</link>.</para>

  <para><anchor xml:id="configmain-additional_freshness_latency"/> <emphasis role="bold">Additional Freshness Threshold Latency
  Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">additional_freshness_latency=&lt;#&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">additional_freshness_latency=15</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines the number of seconds &name-icinga; will add to any host or services freshness threshold it automatically
  calculates (e.g. those not specified explicity by the user). More information on freshness checking can be found <link
  linkend="freshness">here</link>.</para>

  <para><anchor xml:id="configmain-enable_embedded_perl"/> <emphasis role="bold">Embedded Perl Interpreter Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">enable_embedded_perl=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">enable_embedded_perl=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This setting determines whether or not the embedded Perl interpreter is enabled on a program-wide basis. &name-icinga; must be
  compiled with support for embedded Perl for this option to have an effect. More information on the embedded Perl interpreter can be found
  <link linkend="embeddedperl">here</link>.</para>

  <note>
    <para>The default has changed starting with &name-icinga; 1.5. Prior to this version the directive has been enabled, now it is
    <emphasis>disabled</emphasis>.</para>
  </note>

  <para><anchor xml:id="configmain-use_embedded_perl_implicitly"/> <emphasis role="bold">Embedded Perl Implicit Use Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">use_embedded_perl_implicitly=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">use_embedded_perl_implicitly=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This setting determines whether or not the embedded Perl interpreter should be used for Perl plugins/scripts that do not explicitly
  enable/disable it. &name-icinga; must be compiled with support for embedded Perl for this option to have an effect. More information on
  the embedded Perl interpreter and the effect of this setting can be found <link linkend="embeddedperl">here</link>.</para>

  <para><anchor xml:id="configmain-date_format"/> <emphasis role="bold">Date Format</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">date_format=&lt;option&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">date_format=us</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify what kind of date/time format &name-icinga; should use in the web interface and date/time <link
  linkend="macros">macros</link>. Possible options (along with example output) include:</para>

  <informaltable frame="all">
    <tgroup cols="3">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="10*"/>

      <colspec colname="c3" colwidth="10*"/>

      <tbody>
        <row>
          <entry><para><emphasis role="bold">Option</emphasis></para></entry>

          <entry><para><emphasis role="bold">Output Format</emphasis></para></entry>

          <entry><para><emphasis role="bold">Sample Output</emphasis></para></entry>
        </row>

        <row>
          <entry><para>us</para></entry>

          <entry><para>MM-DD-YYYY HH:MM:SS</para></entry>

          <entry><para>06-30-2002 03:15:00</para></entry>
        </row>

        <row>
          <entry><para>euro</para></entry>

          <entry><para>DD-MM-YYYY HH:MM:SS</para></entry>

          <entry><para>30-06-2002 03:15:00</para></entry>
        </row>

        <row>
          <entry><para>iso8601</para></entry>

          <entry><para>YYYY-MM-DD HH:MM:SS</para></entry>

          <entry><para>2002-06-30 03:15:00</para></entry>
        </row>

        <row>
          <entry><para>strict-iso8601</para></entry>

          <entry><para>YYYY-MM-DDTHH:MM:SS</para></entry>

          <entry><para>2002-06-30T03:15:00</para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para><anchor xml:id="configmain-use_timezone"/> <emphasis role="bold">Timezone Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">use_timezone=&lt;tz&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">use_timezone=US/Mountain</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to override the default timezone that this instance of &name-icinga; runs in. Useful if you have multiple
  instances of &name-icinga; that need to run from the same server, but have different local times associated with them. If not specified,
  &name-icinga; will use the system configured timezone.</para>

  <note>
    <para>If you use this option to specify a custom timezone, you will also need to alter the Apache configuration directives for the CGIs
    to specify the timezone you want. Example:</para>
  </note>

  <para>&lt;Directory "&url-icinga-base;/sbin/"&gt;</para>

  <para>SetEnv TZ "US/Mountain"</para>

  <para>...</para>

  <para>&lt;/Directory&gt;</para>

  <para><anchor xml:id="configmain-illegal_object_name_chars"/> <emphasis role="bold">Illegal Object Name Characters</emphasis></para>

  <para><informaltable frame="none">
      <tgroup cols="2">
        <colspec colname="c1" colwidth="5*"/>

        <colspec colname="c2" colwidth="50*"/>

        <tbody>
          <row>
            <entry><para>Format:</para></entry>

            <entry><para><emphasis role="bold">illegal_object_name_chars=&lt;chars...&gt;</emphasis></para></entry>
          </row>

          <row>
            <entry><para>Example:</para></entry>

            <entry><para><emphasis condition="red" role="color"><emphasis
            role="bold">illegal_object_name_chars=`~!$%^&amp;*"|'&lt;&gt;?,()=</emphasis></emphasis></para></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable> This option allows you to specify illegal characters that cannot be used in host names, service descriptions, or names
  of other object types. &name-icinga; will allow you to use most characters in object definitions, but we recommend not using the
  characters shown in the example above. Doing may give you problems in the web interface, notification commands, etc.</para>

  <para><anchor xml:id="configmain-illegal_macro_output_chars"/> <emphasis role="bold">Illegal Macro Output Characters</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">illegal_macro_output_chars=&lt;chars...&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">illegal_macro_output_chars=`~$^&amp;"|'&lt;&gt;</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option allows you to specify illegal characters that should be stripped from <link linkend="macros">macros</link> before being
  used in notifications, event handlers, and other commands. This ALSO affects macros used in service or host check commands. You can choose
  to not strip out the characters shown in the example above, but we recommend you do not do this. Some of these characters are interpreted
  by the shell (i.e. the backtick) and can lead to security problems. The following macros are stripped of the characters you
  specify:</para>

  <para><emphasis role="bold">$HOSTOUTPUT$</emphasis>, <emphasis role="bold">$HOSTPERFDATA$</emphasis>, <emphasis
  role="bold">$HOSTACKAUTHOR$</emphasis>, <emphasis role="bold">$HOSTACKCOMMENT$</emphasis>, <emphasis
  role="bold">$SERVICEOUTPUT$</emphasis>, <emphasis role="bold">$SERVICEPERFDATA$</emphasis>, <emphasis
  role="bold">$SERVICEACKAUTHOR$</emphasis>, and <emphasis role="bold">$SERVICEACKCOMMENT$</emphasis></para>

  <para><anchor xml:id="configmain-use_regexp_matching"/> <emphasis role="bold">Regular Expression Matching Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">use_regexp_matching=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">use_regexp_matching=0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines whether or not various directives in your <link linkend="configobject">object definitions</link> will be
  processed as regular expressions. More information on how this works can be found <link linkend="objecttricks">here</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't use regular expression matching (default)</para>
    </listitem>

    <listitem>
      <para>1 = Use regular expression matching</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-use_true_regexp_matching"/> <emphasis role="bold">True Regular Expression Matching
  Option</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">use_true_regexp_matching=&lt;0/1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">use_true_regexp_matching=0</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>If you've enabled regular expression matching of various object directives using the <link
  linkend="configmain-use_regexp_matching">use_regexp_matching</link> option, this option will determine when object directives are treated
  as regular expressions. If this option is disabled (the default), directives will only be treated as regular expressions if they contain
  <emphasis role="bold">*</emphasis>, <emphasis role="bold">?</emphasis>, <emphasis role="bold">+</emphasis>, or <emphasis
  role="bold">\.</emphasis>. If this option is enabled, all appropriate directives will be treated as regular expression - be careful when
  enabling this! More information on how this works can be found <link linkend="objecttricks">here</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Don't use true regular expression matching (default)</para>
    </listitem>

    <listitem>
      <para>1 = Use true regular expression matching</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-admin_email"/> <emphasis role="bold">Administrator Email Address</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">admin_email=&lt;email_address&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">admin_email=root@localhost.localdomain</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the email address for the administrator of the local machine (i.e. the one that &name-icinga; is running on). This value can
  be used in notification commands by using the <emphasis role="bold">$ADMINEMAIL$</emphasis> <link linkend="macros">macro</link>.</para>

  <para><anchor xml:id="configmain-admin_pager"/> <emphasis role="bold">Administrator Pager</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">admin_pager=&lt;pager_number_or_pager_email_gateway&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">admin_pager=pageroot@localhost.localdomain</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This is the pager number (or pager email gateway) for the administrator of the local machine (i.e. the one that &name-icinga; is
  running on). The pager number/address can be used in notification commands by using the <emphasis role="bold">$ADMINPAGER$</emphasis>
  <link linkend="macros">macro</link>.</para>

  <para><anchor xml:id="configmain-event_broker_options"/> <emphasis role="bold">Event Broker Options</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">event_broker_options=&lt;#&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">event_broker_options=-1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option controls what (if any) data gets sent to the event broker and, in turn, to any loaded event broker modules. This is an
  advanced option. When in doubt, either broker nothing (if not using event broker modules) or broker everything (if using event broker
  modules). Possible values are shown below.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Broker nothing</para>
    </listitem>

    <listitem>
      <para>-1 = Broker everything</para>
    </listitem>

    <listitem>
      <para># = See BROKER_* definitions in source code (include/broker.h) for other values that can be OR'ed together</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-broker_module"/> <emphasis role="bold">Event Broker Modules</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">broker_module=&lt;modulepath&gt; [moduleargs]</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">broker_module=&url-icinga-base;/lib/idomod.so \
          cfg_file=/usr/local/icinga/etc/idomod.cfg</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This directive is used to specify an event broker module that should by loaded by &name-icinga; at startup. Use multiple directives
  if you want to load more than one module. Arguments that should be passed to the module at startup are separated from the module path by a
  space.</para>

  <para>!!! WARNING !!!</para>

  <para>Do NOT overwrite modules while they are being used by &name-icinga; or &name-icinga; will crash in a fiery display of SEGFAULT
  glory. This is a bug/limitation either in dlopen(), the kernel, and/or the filesystem. And maybe &name-icinga;...</para>

  <para>The correct/safe way of updating a module is by using one of these methods:</para>

  <orderedlist>
    <listitem>
      <para>Shutdown &name-icinga;, replace the module file, restart &name-icinga;</para>
    </listitem>

    <listitem>
      <para>While &name-icinga; is running... delete the original module file, move the new module file into place, restart
      &name-icinga;</para>
    </listitem>
  </orderedlist>

  <para><anchor xml:id="configmain-debug_file"/> <emphasis role="bold">Debug File</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">debug_file=&lt;file_name&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis
          role="bold">debug_file=&url-icinga-base;/var/icinga.debug</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines where &name-icinga; should write debugging information. What (if any) information is written is determined by
  the <link linkend="configmain-debug_level">debug_level</link> and <link linkend="configmain-debug_verbosity">debug_verbosity</link>
  options. You can have &name-icinga; automaticaly rotate the debug file when it reaches a certain size by using the <link
  linkend="configmain-max_debug_file_size">max_debug_file_size</link> option.</para>

  <para><anchor xml:id="configmain-debug_level"/> <emphasis role="bold">Debug Level</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">debug_level=&lt;#&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">debug_level=24</emphasis></emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines what type of information &name-icinga; should write to the <link
  linkend="configmain-debug_file">debug_file</link>. This value is a logical OR of the values below.</para>

  <itemizedlist>
    <listitem>
      <para>-1 = Log everything</para>
    </listitem>

    <listitem>
      <para>0 = Log nothing (default)</para>
    </listitem>

    <listitem>
      <para>1 = Function enter/exit information</para>
    </listitem>

    <listitem>
      <para>2 = Config information</para>
    </listitem>

    <listitem>
      <para>4 = Process information</para>
    </listitem>

    <listitem>
      <para>8 = Scheduled event information</para>
    </listitem>

    <listitem>
      <para>16 = Host/service check information</para>
    </listitem>

    <listitem>
      <para>32 = Notification information</para>
    </listitem>

    <listitem>
      <para>64 = Event broker information</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-debug_verbosity"/> <emphasis role="bold">Debug Verbosity</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">debug_verbosity=&lt;#&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">debug_verbosity=1</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines how much debugging information &name-icinga; should write to the <link
  linkend="configmain-debug_file">debug_file</link>.</para>

  <itemizedlist>
    <listitem>
      <para>0 = Basic information</para>
    </listitem>

    <listitem>
      <para>1 = More detailed information (default)</para>
    </listitem>

    <listitem>
      <para>2 = Highly detailed information</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="configmain-max_debug_file_size"/> <emphasis role="bold">Maximum Debug File Size</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">max_debug_file_size=&lt;#&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">max_debug_file_size=1000000</emphasis></emphasis>
          </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This option determines the maximum size (in bytes) of the <link linkend="configmain-debug_file">debug file</link>. If the file grows
  larger than this size, it will be renamed with a .old extension. If a file already exists with a .old extension it will automatically be
  deleted. This helps ensure your disk space usage doesn't get out of control when debugging &name-icinga;.</para>

  <para><anchor xml:id="configmain-allow_empty_hostgroup_assignment"/> <emphasis role="bold">Allow Empty Hostgroup
  Assignment</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para><emphasis role="bold">allow_empty_hostgroup_assignment=&lt;0|1&gt;</emphasis></para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para><emphasis condition="red" role="color"><emphasis role="bold">allow_empty_hostgroup_assignment=1</emphasis>
          </emphasis></para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>This boolean option determines whether services, service dependencies, or host dependencies assigned to empty host groups (host
  groups with no host members) will cause &name-icinga; to exit with error on startup (or during a configuration check) or not. The default
  behaviour if the option is not present (or set to "0") in the main configuration file is for &name-icinga; to exit with error if any of
  these objects are associated with host groups whose hostgroup definitions have no host_members associated with them.</para>

  <para>Enabling this option can be useful when:</para>

  <itemizedlist>
    <listitem>
      <para>Configuration files or pre-cached object files are distributed across many &name-icinga; pollers.</para>
    </listitem>

    <listitem>
      <para>Automation is used to generate an &name-icinga; configuration file tree.</para>
    </listitem>

    <listitem>
      <para>There is one set of services, service dependencies, or host dependencies maintained by administrators for which users may add
      hosts through host group membership for convenience (e.g. a suite of checks associated with a remote monitoring agent) but for which
      there is no guarantee that users will use the services associated with the host group or that the hosts will exists (e.g. a remote
      agent that is being deprecated over time or hosts that are being decommissioned).</para>
    </listitem>
  </itemizedlist>

  <note>
    <para>This option is available starting with &name-icinga; 1.3.</para>
  </note>

  <para><anchor xml:id="configmain-process_empty_results"/> <emphasis role="bold">Process empty performance results</emphasis></para>

  <informaltable frame="none">
    <tgroup cols="2">
      <colspec colname="c1" colwidth="5*"/>

      <colspec colname="c2" colwidth="50*"/>

      <tbody>
        <row>
          <entry><para>Format:</para></entry>

          <entry><para>
               

              <emphasis role="bold">host_perfdata_process_empty_results=&lt;0|1&gt;</emphasis>

               
            </para> <para>
               

              <emphasis role="bold">service_perfdata_process_empty_results=&lt;0|1&gt;</emphasis>

               
            </para></entry>
        </row>

        <row>
          <entry><para>Example:</para></entry>

          <entry><para>
               

              <emphasis condition="red" role="color">
                 

                <emphasis role="bold">host_perfdata_process_empty_results=1</emphasis>

                 
              </emphasis>

               
            </para> <para>
               

              <emphasis condition="red" role="color">
                 

                <emphasis role="bold">service_perfdata_process_empty_results=1</emphasis>

                 
              </emphasis>

               
            </para></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>These options determine whether the core will process empty perfdata results or not. This is needed for distributed monitoring, and
  intentionally turned on by default. If you don't require empty perfdata - saving some cpu cycles on unwanted macro calculation - you can
  turn that off. Be careful! Values: 1 = enable, 0 = disable</para>

  <note>
    <para>These options are available starting with &name-icinga; 1.4</para>
  </note>

  <indexterm zone="config_main">
    <primary>Main Configuration File Options</primary>
  </indexterm>

  <indexterm zone="configmain-log_file">
    <primary>log_file=</primary>

    <secondary>Log File</secondary>
  </indexterm>

  <indexterm zone="configmain-cfg_file">
    <primary>cfg_file=</primary>

    <secondary>Object Configuration File</secondary>
  </indexterm>

  <indexterm zone="configmain-cfg_dir">
    <primary>cfg_dir=</primary>

    <secondary>Object Configuration Directory</secondary>
  </indexterm>

  <indexterm zone="configmain-object_cache_file">
    <primary>object_cache_file=</primary>

    <secondary>Object Cache File</secondary>
  </indexterm>

  <indexterm zone="configmain-precached_object_file">
    <primary>precached_object_file=</primary>

    <secondary>Precached Object File</secondary>
  </indexterm>

  <indexterm zone="configmain-resource_file">
    <primary>resource_file=</primary>

    <secondary>Resource File</secondary>
  </indexterm>

  <indexterm zone="configmain-temp_file">
    <primary>temp_file=</primary>

    <secondary>Temp File</secondary>
  </indexterm>

  <indexterm zone="configmain-temp_path">
    <primary>temp_path=</primary>

    <secondary>Temp Path</secondary>
  </indexterm>

  <indexterm zone="configmain-status_file">
    <primary>status_file=</primary>

    <secondary>Status File</secondary>
  </indexterm>

  <indexterm zone="configmain-status_log">
    <primary>status_log=</primary>

    <secondary>Status Log</secondary>
  </indexterm>

  <indexterm zone="configmain-status_update_interval">
    <primary>status_update_interval=</primary>

    <secondary>Status File Update Interval</secondary>
  </indexterm>

  <indexterm zone="configmain-icinga_user">
    <primary>icinga_user=</primary>

    <secondary>&name-icinga; User</secondary>
  </indexterm>

  <indexterm zone="configmain-icinga_group">
    <primary>icinga_group=</primary>

    <secondary>&name-icinga; Group</secondary>
  </indexterm>

  <indexterm zone="configmain-enable_notifications">
    <primary>enable_notifications=</primary>

    <secondary>Notifications Option</secondary>
  </indexterm>

  <indexterm zone="configmain-execute_service_checks">
    <primary>execute_service_checks=</primary>

    <secondary>Service Check Execution</secondary>
  </indexterm>

  <indexterm zone="configmain-accept_passive_service_checks">
    <primary>accept_passive_service_checks=</primary>

    <secondary>Passive Service Check Acceptance</secondary>
  </indexterm>

  <indexterm zone="configmain-execute_host_checks">
    <primary>execute_host_checks=</primary>

    <secondary>Host Check Execution Option</secondary>
  </indexterm>

  <indexterm zone="configmain-accept_passive_host_checks">
    <primary>accept_passive_host_checks=</primary>

    <secondary>Passive Host Check Acceptance</secondary>
  </indexterm>

  <indexterm zone="configmain-enable_event_handlers">
    <primary>enable_event_handlers=</primary>

    <secondary>Event Handler Option</secondary>
  </indexterm>

  <indexterm zone="configmain-log_rotation_method">
    <primary>log_rotation_method=</primary>

    <secondary>Log Rotation Method</secondary>
  </indexterm>

  <indexterm zone="configmain-log_archive_path">
    <primary>log_archive_path=</primary>

    <secondary>Log Archive Path</secondary>
  </indexterm>

  <indexterm zone="configmain-check_external_commands">
    <primary>check_external_commands=</primary>

    <secondary>External Command Check</secondary>
  </indexterm>

  <indexterm zone="configmain-command_check_interval">
    <primary>command_check_interval=</primary>

    <secondary>External Command Check</secondary>
  </indexterm>

  <indexterm zone="configmain-command_file">
    <primary>command_file=</primary>

    <secondary>External Command File</secondary>
  </indexterm>

  <indexterm zone="configmain-external_command_buffer_slots">
    <primary>external_command_buffer_slots=</primary>

    <secondary>External Command Buffer</secondary>
  </indexterm>

  <indexterm zone="configmain-lock_file">
    <primary>lock_file=</primary>

    <secondary>Lock File</secondary>
  </indexterm>

  <indexterm zone="configmain-retain_state_information">
    <primary>retain_state_information=</primary>

    <secondary>State Retention Option</secondary>
  </indexterm>

  <indexterm zone="configmain-state_retention_file">
    <primary>state_retention_file=</primary>

    <secondary>State Retention File</secondary>
  </indexterm>

  <indexterm zone="configmain-retention_update_interval">
    <primary>retention_update_interval=</primary>

    <secondary>Automatic State Retention Update</secondary>
  </indexterm>

  <indexterm zone="configmain-use_retained_program_state">
    <primary>use_retained_program_state=</primary>

    <secondary>Use Retained Program State</secondary>
  </indexterm>

  <indexterm zone="configmain-use_retained_scheduling_info">
    <primary>retained_scheduling_info=</primary>

    <secondary>Use Retained Scheduling Info</secondary>
  </indexterm>

  <indexterm zone="configmain-retained_host_attribute_mask">
    <primary>retained_host_attribute_mask=</primary>

    <secondary>Retained Host Attribute Mask</secondary>
  </indexterm>

  <indexterm zone="configmain-retained_service_attribute_mask">
    <primary>retained_service_attribute_mask=</primary>

    <secondary>Retained Host and Service Attribute Mask</secondary>
  </indexterm>

  <indexterm zone="configmain-retained_process_host_attribute_mask">
    <primary>retained_process_host_attribute_mask=</primary>

    <secondary>Retained Process Host Attribute Mask</secondary>
  </indexterm>

  <indexterm zone="configmain-retained_process_service_attribute_mask">
    <primary>retained_process_attribute_mask=</primary>

    <secondary>Retained Process Attribute Mask</secondary>
  </indexterm>

  <indexterm zone="configmain-retained_contact_host_attribute_mask">
    <primary>retained_contact_host_attribute_mask=</primary>

    <secondary>Retained Contact Host Attribute Mask</secondary>
  </indexterm>

  <indexterm zone="configmain-retained_contact_service_attribute_mask">
    <primary>retained_contact_service_attribute_mask=</primary>

    <secondary>Retained Contact Service Attribute Mask</secondary>
  </indexterm>

  <indexterm zone="configmain-use_syslog">
    <primary>use_syslog=</primary>

    <secondary>Syslog Logging Option</secondary>
  </indexterm>

  <indexterm zone="configmain-use_syslog_local_facility">
    <primary>use_syslog_local_facility=</primary>

    <secondary>Syslog Local Facility Logging Option</secondary>
  </indexterm>

  <indexterm zone="configmain-syslog_local_facility">
    <primary>syslog_local_facility=</primary>

    <secondary>Syslog Local Facility Logging Value</secondary>
  </indexterm>

  <indexterm zone="configmain-log_notifications">
    <primary>log_notifications=</primary>

    <secondary>Notification Logging Option</secondary>
  </indexterm>

  <indexterm zone="configmain-log_service_retries">
    <primary>log_service_retries=</primary>

    <secondary>Service Check Retry Logging</secondary>
  </indexterm>

  <indexterm zone="configmain-log_host_retries">
    <primary>log_host_retries=</primary>

    <secondary>Host Check Retry Logging Option</secondary>
  </indexterm>

  <indexterm zone="configmain-log_event_handlers">
    <primary>log_event_handlers=</primary>

    <secondary>Event Handler Logging Option</secondary>
  </indexterm>

  <indexterm zone="configmain-log_initial_states">
    <primary>log_initial_states=</primary>

    <secondary>Initial States Logging Option</secondary>
  </indexterm>

  <indexterm zone="configmain-log_external_commands">
    <primary>log_external_commands=</primary>

    <secondary>External Command Logging</secondary>
  </indexterm>

  <indexterm zone="configmain-log_passive_checks">
    <primary>log_passive_checks=</primary>

    <secondary>Passive Check Logging Option</secondary>
  </indexterm>

  <indexterm zone="configmain-global_host_event_handler">
    <primary>global_host_event_handler=</primary>

    <secondary>Global Host Event Handler</secondary>
  </indexterm>

  <indexterm zone="configmain-global_service_event_handler">
    <primary>global_service_event_handler=</primary>

    <secondary>Global Service Event Handler</secondary>
  </indexterm>

  <indexterm zone="configmain-stalking_event_handlers_for_hosts">
    <primary>stalking_event_handlers_for_hosts=</primary>

    <secondary>Stalking Event Handlers for Hosts</secondary>
  </indexterm>

  <indexterm zone="configmain-stalking_event_handlers_for_services">
    <primary>stalking_event_handlers_for_services=</primary>

    <secondary>Stalking Event Handlers for Services</secondary>
  </indexterm>

  <indexterm zone="configmain-stalking_notifications_for_hosts">
    <primary>stalking_notifications_for_hosts=</primary>

    <secondary>Notifications for Stalked Hosts</secondary>
  </indexterm>

  <indexterm zone="configmain-stalking_notifications_for_services">
    <primary>stalking_notifications_for_services=</primary>

    <secondary>Notifications for Stalked Services</secondary>
  </indexterm>

  <indexterm zone="configmain-sleep_time">
    <primary>sleep_time=</primary>

    <secondary>Inter-Check Sleep Time</secondary>
  </indexterm>

  <indexterm zone="configmain-service_inter_check_delay_method">
    <primary>service_inter_check_delay_method=</primary>

    <secondary>Service Inter-Check Delay</secondary>
  </indexterm>

  <indexterm zone="configmain-max_service_check_spread">
    <primary>max_service_check_spread=</primary>

    <secondary>Maximum Service Check</secondary>
  </indexterm>

  <indexterm zone="configmain-service_interleave_factor">
    <primary>service_interleave_factor=</primary>

    <secondary>Service Interleave Factor</secondary>
  </indexterm>

  <indexterm zone="configmain-max_concurrent_checks">
    <primary>max_concurrent_checks=</primary>

    <secondary>Maximum Concurrent Service</secondary>
  </indexterm>

  <indexterm zone="configmain-check_result_reaper_frequency">
    <primary>check_result_reaper_frequency=</primary>

    <secondary>Check Result Reaper</secondary>
  </indexterm>

  <indexterm zone="configmain-max_check_result_reaper_time">
    <primary>max_check_result_reaper_time=</primary>

    <secondary>Maximum Check Result Reaper</secondary>
  </indexterm>

  <indexterm zone="configmain-check_result_path">
    <primary>check_result_path=</primary>

    <secondary>Check Result Path</secondary>
  </indexterm>

  <indexterm zone="configmain-max_check_result_file_age">
    <primary>max_check_result_file_age=</primary>

    <secondary>Max Check Result File Age</secondary>
  </indexterm>

  <indexterm zone="configmain-host_inter_check_delay_method">
    <primary>host_inter_check_delay_method=</primary>

    <secondary>Host Inter-Check Delay</secondary>
  </indexterm>

  <indexterm zone="configmain-max_host_check_spread">
    <primary>max_host_check_spread=</primary>

    <secondary>Maximum Host Check Spread</secondary>
  </indexterm>

  <indexterm zone="configmain-interval_length">
    <primary>interval_length=</primary>

    <secondary>Timing Interval Length</secondary>
  </indexterm>

  <indexterm zone="configmain-auto_reschedule_checks">
    <primary>auto_reschedule_checks=</primary>

    <secondary>Auto-Rescheduling Option</secondary>
  </indexterm>

  <indexterm zone="configmain-auto_rescheduling_interval">
    <primary>auto_rescheduling_interval=</primary>

    <secondary>Auto-Rescheduling</secondary>
  </indexterm>

  <indexterm zone="configmain-auto_rescheduling_window">
    <primary>auto_rescheduling_windows=</primary>

    <secondary>Auto-Rescheduling Window</secondary>
  </indexterm>

  <indexterm zone="configmain-use_agressive_host_checking">
    <primary>use_agressive_host_checking=</primary>

    <secondary>Aggressive Host Checking</secondary>
  </indexterm>

  <indexterm zone="configmain-use_aggressive_host_checking">
    <primary>use_aggressive_host_checking=</primary>

    <secondary>Aggressive Host Checking</secondary>
  </indexterm>

  <indexterm zone="configmain-translate_passive_host_checks">
    <primary>translage_passive_host_checks=</primary>

    <secondary>Translate Passive Host Checks</secondary>
  </indexterm>

  <indexterm zone="configmain-passive_host_checks_are_soft">
    <primary>passive_host_checks_are_soft=</primary>

    <secondary>Passive Host Checks Are SOFT</secondary>
  </indexterm>

  <indexterm zone="configmain-enable_predictive_host_dependency_checks">
    <primary>enable_predictive_host_dependency_checks=</primary>

    <secondary>Predictive Host Dependency</secondary>
  </indexterm>

  <indexterm zone="configmain-enable_predictive_service_dependency_checks">
    <primary>enable_predictive_service_dependency_checks=</primary>

    <secondary>Predictive Service</secondary>
  </indexterm>

  <indexterm zone="configmain-cached_host_check_horizon">
    <primary>cached_host_check_horizon=</primary>

    <secondary>Cached Host Check Horizon</secondary>
  </indexterm>

  <indexterm zone="configmain-cached_service_check_horizon">
    <primary>cached_service_check_horizon=</primary>

    <secondary>Cached Service Check</secondary>
  </indexterm>

  <indexterm zone="configmain-use_large_installation_tweaks">
    <primary>use_large_installation_tweaks=</primary>

    <secondary>Large Installation Tweaks</secondary>
  </indexterm>

  <indexterm zone="configmain-free_child_process_memory">
    <primary>free_child_process_memory=</primary>

    <secondary>Child Process Memory</secondary>
  </indexterm>

  <indexterm zone="configmain-child_processes_fork_twice">
    <primary>child_processes_fork_twice=</primary>

    <secondary>Child Processes Fork</secondary>
  </indexterm>

  <indexterm zone="configmain-enable_environment_macros">
    <primary>enable_environment_macros=</primary>

    <secondary>Environment Macros Option</secondary>
  </indexterm>

  <indexterm zone="configmain-enable_flap_detection">
    <primary>enable_flap_detection=</primary>

    <secondary>Flap Detection Option</secondary>
  </indexterm>

  <indexterm zone="configmain-low_service_flap_threshold">
    <primary>low_service_flap_threshold=</primary>

    <secondary>Low Service Flap</secondary>
  </indexterm>

  <indexterm zone="configmain-high_service_flap_threshold">
    <primary>high_service_flap_threshold=</primary>

    <secondary>High Service Flap</secondary>
  </indexterm>

  <indexterm zone="configmain-low_host_flap_threshold">
    <primary>low_host_flap_threshold=</primary>

    <secondary>Low Host Flap Threshold</secondary>
  </indexterm>

  <indexterm zone="configmain-high_host_flap_threshold">
    <primary>high_host_flap_threshold=</primary>

    <secondary>High Host Flap Threshold</secondary>
  </indexterm>

  <indexterm zone="configmain-soft_state_dependencies">
    <primary>soft_state_dependencies=</primary>

    <secondary>Soft State Dependencies</secondary>
  </indexterm>

  <indexterm zone="configmain-service_check_timeout">
    <primary>service_check_timeout=</primary>

    <secondary>Service Check Timeout</secondary>
  </indexterm>

  <indexterm zone="configmain-service_check_timeout_state">
    <primary>service_check_timeout_state=</primary>

    <secondary>Service Check Timeout State</secondary>
  </indexterm>

  <indexterm zone="configmain-host_check_timeout">
    <primary>host_check_timeout=</primary>

    <secondary>Host Check Timeout</secondary>
  </indexterm>

  <indexterm zone="configmain-event_handler_timeout">
    <primary>event_handler_timeout=</primary>

    <secondary>Event Handler Timeout</secondary>
  </indexterm>

  <indexterm zone="configmain-notification_timeout">
    <primary>notification_timeout=</primary>

    <secondary>Notification Timeout</secondary>
  </indexterm>

  <indexterm zone="configmain-ocsp_timeout">
    <primary>ocsp_timeout=</primary>

    <secondary>Obsessive Compulsive Service Processor</secondary>
  </indexterm>

  <indexterm zone="configmain-ochp_timeout">
    <primary>ochp_timeout=</primary>

    <secondary>Obsessive Compulsive Host Processor</secondary>
  </indexterm>

  <indexterm zone="configmain-perfdata_timeout">
    <primary>perfdata_timeout=</primary>

    <secondary>Performance Data Processor Command</secondary>
  </indexterm>

  <indexterm zone="configmain-obsess_over_services">
    <primary>obsess_over_services=</primary>

    <secondary>Obsess Over Services Option</secondary>
  </indexterm>

  <indexterm zone="configmain-ocsp_command">
    <primary>ocsp_command=</primary>

    <secondary>Obsessive Compulsive Service Processor</secondary>
  </indexterm>

  <indexterm zone="configmain-obsess_over_hosts">
    <primary>obsess_over_hosts=</primary>

    <secondary>Obsess Over Hosts Option</secondary>
  </indexterm>

  <indexterm zone="configmain-ochp_command">
    <primary>ochp_command=</primary>

    <secondary>Obsessive Compulsive Host Processor</secondary>
  </indexterm>

  <indexterm zone="configmain-process_performance_data">
    <primary>process_performance_data=</primary>

    <secondary>Performance Data Processing</secondary>
  </indexterm>

  <indexterm zone="configmain-host_perfdata_command">
    <primary>host_perfdata_command=</primary>

    <secondary>Host Performance Data Processing</secondary>
  </indexterm>

  <indexterm zone="configmain-service_perfdata_command">
    <primary>service_perfdata_command=</primary>

    <secondary>Service Performance Data Processing</secondary>
  </indexterm>

  <indexterm zone="configmain-host_perfdata_file">
    <primary>host_perfdata_file=</primary>

    <secondary>Host Performance Data File</secondary>
  </indexterm>

  <indexterm zone="configmain-service_perfdata_file">
    <primary>service_perfdata_file=</primary>

    <secondary>Service Performance Data File</secondary>
  </indexterm>

  <indexterm zone="configmain-host_perfdata_file_template">
    <primary>host_perfdata_file_template=</primary>

    <secondary>Host Performance Data File</secondary>
  </indexterm>

  <indexterm zone="configmain-service_perfdata_file_template">
    <primary>service_perfdata_file_template=</primary>

    <secondary>Service Performance Data File</secondary>
  </indexterm>

  <indexterm zone="configmain-host_perfdata_file_mode">
    <primary>host_perfdata_file_mode=</primary>

    <secondary>Host Performance Data File</secondary>
  </indexterm>

  <indexterm zone="configmain-service_perfdata_file_mode">
    <primary>service_perfdata_file_mode=</primary>

    <secondary>Service Performance Data File</secondary>
  </indexterm>

  <indexterm zone="configmain-host_perfdata_file_processing_interval">
    <primary>host_perfdata_file_processing_interval=</primary>

    <secondary>Host Performance Data File</secondary>
  </indexterm>

  <indexterm zone="configmain-service_perfdata_file_processing_interval">
    <primary>service_perfdata_file_processing_interval=</primary>

    <secondary>Service Performance Data</secondary>
  </indexterm>

  <indexterm zone="configmain-host_perfdata_file_processing_command">
    <primary>host_perfdata_file_processing_command=</primary>

    <secondary>Host Performance Data File</secondary>
  </indexterm>

  <indexterm zone="configmain-service_perfdata_file_processing_command">
    <primary>service_perfdata_file_processing_command=</primary>

    <secondary>Service Performance Data</secondary>
  </indexterm>

  <indexterm zone="configmain-check_for_orphaned_services">
    <primary>check_for_orphaned_services=</primary>

    <secondary>Orphaned Service Check</secondary>
  </indexterm>

  <indexterm zone="configmain-check_for_orphaned_hosts">
    <primary>check_for_orphaned_hosts=</primary>

    <secondary>Orphaned Host Check Option</secondary>
  </indexterm>

  <indexterm zone="configmain-check_service_freshness">
    <primary>check_service_freshness=</primary>

    <secondary>Service Freshness Checking</secondary>
  </indexterm>

  <indexterm zone="configmain-service_freshness_check_interval">
    <primary>service_freshness_check_interval=</primary>

    <secondary>Service Freshness Check</secondary>
  </indexterm>

  <indexterm zone="configmain-check_host_freshness">
    <primary>check_host_freshness=</primary>

    <secondary>Host Freshness Checking Option</secondary>
  </indexterm>

  <indexterm zone="configmain-host_freshness_check_interval">
    <primary>host_freshness_check_interval=</primary>

    <secondary>Host Freshness Check</secondary>
  </indexterm>

  <indexterm zone="configmain-additional_freshness_latency">
    <primary>additional_freshness_latency=</primary>

    <secondary>Additional Freshness Threshold Latency</secondary>
  </indexterm>

  <indexterm zone="configmain-enable_embedded_perl">
    <primary>enabled_embedded_perl=</primary>

    <secondary>Embedded Perl Interpreter</secondary>
  </indexterm>

  <indexterm zone="configmain-use_embedded_perl_implicitly">
    <primary>use_embedded_perl_implicitly=</primary>

    <secondary>Embedded Perl Implicit Use</secondary>
  </indexterm>

  <indexterm zone="configmain-date_format">
    <primary>date_format=</primary>

    <secondary>Date Format</secondary>
  </indexterm>

  <indexterm zone="configmain-use_timezone">
    <primary>use_timezone=</primary>

    <secondary>Timezone Option</secondary>
  </indexterm>

  <indexterm zone="configmain-illegal_object_name_chars">
    <primary>illegal_object_name_chars=</primary>

    <secondary>Illegal Object Name</secondary>
  </indexterm>

  <indexterm zone="configmain-illegal_macro_output_chars">
    <primary>illegal_macro_output_chars=</primary>

    <secondary>Illegal Macro Output</secondary>
  </indexterm>

  <indexterm zone="configmain-use_regexp_matching">
    <primary>use_regexp_matching=</primary>

    <secondary>Regular Expression Matching</secondary>
  </indexterm>

  <indexterm zone="configmain-use_true_regexp_matching">
    <primary>use_true_regexp_matching=</primary>

    <secondary>True Regular Expression Matching</secondary>
  </indexterm>

  <indexterm zone="configmain-admin_email">
    <primary>admin_email=</primary>

    <secondary>Administrator Email Address</secondary>
  </indexterm>

  <indexterm zone="configmain-admin_pager">
    <primary>admin_pager=</primary>

    <secondary>Administrator Pager</secondary>
  </indexterm>

  <indexterm zone="configmain-event_broker_options">
    <primary>event_broker_options=</primary>

    <secondary>Event Broker Options</secondary>
  </indexterm>

  <indexterm zone="configmain-broker_module">
    <primary>broker_module=</primary>

    <secondary>Event Broker Modules</secondary>
  </indexterm>

  <indexterm zone="configmain-debug_file">
    <primary>debug_file=</primary>

    <secondary>Debug File</secondary>
  </indexterm>

  <indexterm zone="configmain-debug_level">
    <primary>debug_level=</primary>

    <secondary>Debug Level</secondary>
  </indexterm>

  <indexterm zone="configmain-debug_verbosity">
    <primary>debug_verbosity=</primary>

    <secondary>Debug Verbosity</secondary>
  </indexterm>

  <indexterm zone="configmain-max_debug_file_size">
    <primary>max_debug_file_size=</primary>

    <secondary>Maximum Debug File Size</secondary>
  </indexterm>

  <indexterm zone="configmain-allow_empty_hostgroup_assignment">
    <primary>allow_empty_hostgroup_assignment=</primary>

    <secondary>Allow Empty Hostgroup Assignment</secondary>
  </indexterm>

  <indexterm zone="configmain-process_empty_results">
    <primary>host_perfdata_process_empty_results</primary>

    <secondary>Process Empty Host Performance Data Results</secondary>
  </indexterm>

  <indexterm zone="configmain-process_empty_results">
    <primary>service_perfdata_process_empty_results</primary>

    <secondary>Process Empty Service Performance Data Results</secondary>
  </indexterm>
</section>
