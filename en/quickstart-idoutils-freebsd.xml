<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!ENTITY % all.entities SYSTEM "all-entities.ent">
%all.entities;
]>
<section version="5.0" xml:id="quickstart-idoutils-freebsd" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg" xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml" xmlns:db="http://docbook.org/ns/docbook">
  <title>&name-icinga; and &name-idoutils; Quickstart on FreeBSD</title>

  <para><emphasis role="bold"><anchor xml:id="introduction_idoutils_freebsd"/>Introduction</emphasis></para>

  <note>
    <para>Instead of installing &name-icinga; from scratch you may want to use a package which might be available for your OS. Please take a
    look at the <link xlink:href="https://www.icinga.org/download/packages">table of packages</link>.</para>

    <para>Please keep in mind that the upstream packages might be outdated so using backport packages is a way to get a recent version.
    Please take a look at wiki articles for detailed descriptions:</para>

    <itemizedlist>
      <listitem>
        <para><link xlink:href="https://wiki.icinga.org/display/howtos/Setting+up+Icinga+with+IDOUtils+on+Debian">Debian</link></para>
      </listitem>

      <listitem>
        <para><link xlink:href="https://wiki.icinga.org/display/howtos/Setting+up+Icinga+with+IDOUtils+on+Ubuntu">Ubuntu</link></para>
      </listitem>

      <listitem>
        <para><link xlink:href="https://wiki.icinga.org/display/howtos/Setting+up+Icinga+with+IDOUtils+on+RHEL">RHEL/CentOS</link></para>
      </listitem>
    </itemizedlist>

    <para>If you are planning to install from source then please use the official release tarball.</para>
  </note>

  <important>
    <para>Please don't use git snapshots unless you have an issue which might be solved in the current developer version.</para>
  </important>

  <para>This guide is intended to provide you with simple instructions on how to install &name-icinga; from source (code) and have it
  monitoring your local machine within 30 minutes.</para>

  <para>No advanced installation options are discussed here - just the basics that will work for most of the users who want to get
  started.</para>

  <para>This guide will give you examples for installation on <link xlink:href="">&name-freebsd;</link> 8.1-RELEASE. Thanks to <link
  xlink:href="http://www.nagios-portal.org/wbb/index.php?page=User&amp;userID=8925">"ScotchTape"</link> for the adapted instructions.</para>

  <para>Later distributions of &name-freebsd; may inherit from these examples.</para>

  <note>
    <para>Meanwhile there's a &name-freebsd; port of &name-icinga; (net-mgmt/icinga) so maybe that's the one you want to install ;-).</para>
  </note>

  <para><emphasis role="bold">What You'll End Up With</emphasis></para>

  <para>If you follow these instructions, here's what you'll end up with:</para>

  <itemizedlist>
    <listitem>
      <para>&name-icinga; and the plugins will be installed underneath <filename>&url-icinga-base;</filename></para>
    </listitem>

    <listitem>
      <para>&name-icinga; will be configured to monitor a few aspects of your local system (CPU load, disk usage, etc.)</para>
    </listitem>

    <listitem>
      <para>The &name-icinga; classic web interface will be accessible at <uri>http://localhost/icinga/</uri> or
      <uri>http://yourdomain.com/icinga</uri></para>
    </listitem>

    <listitem>
      <para>a database being filled using the &name-idoutils;</para>
    </listitem>
  </itemizedlist>

  <para><emphasis role="bold">Prerequisites</emphasis></para>

  <para>During portions of the installation you'll need to have <emphasis role="bold">root</emphasis> access to your machine.</para>

  <para>Make sure you've installed the following packages on your system before continuing.</para>

  <itemizedlist>
    <listitem>
      <para><link xlink:href="http://www.apache.org">&name-apache;</link></para>
    </listitem>

    <listitem>
      <para>GCC compiler</para>
    </listitem>

    <listitem>
      <para>C/C++ development libraries</para>
    </listitem>

    <listitem>
      <para><link xlink:href="http://www.boutell.com/gd/">&name-gd;</link> development libraries</para>
    </listitem>

    <listitem>
      <para>libdbi-drivers, a database like &name-mysql;, or &name-postgres;</para>

      <note>
        <para>&name-postgres;: Due to changes on insert statements &name-postgres; 8.1 does no longer work (and is already <link
        xlink:href="http://wiki.postgresql.org/wiki/PostgreSQL_Release_Support_Policy">end-of-life</link> since November 2010) so please use
        8.2 or even better 8.4. String escaping in &name-postgres; 9.x is still in an experimental state (refer to <link
        xlink:href="https://dev.icinga.org/issues/1974">issue #1974</link>).</para>
      </note>
    </listitem>
  </itemizedlist>

  <para><emphasis role="bold">Optional</emphasis></para>

  <para>At one time or another you will likely use SNMP based checks so it might be a good idea to install the required packages now.
  Otherwise the plugins will not be compiled and are not available when you need them.</para>

  <para><emphasis role="bold">New features for the &name-idoutils;:</emphasis></para>

  <para><emphasis role="bold">SSL-encryption between idomod and ido2db</emphasis></para>

  <para>If you want to use <emphasis role="bold">SSL-encryption </emphasis>: it is already installed.</para>

  <note>
    <para>SSL has to be activated on all idomod clients, otherwise you will lose data!!!</para>
  </note>

  <para><emphasis role="bold">Oracle database support</emphasis></para>

  <para>If you want to use Oracle as an RDBMS then we are sorry. Unfortunately it isn't that easy with &name-freebsd;.</para>

  <para><anchor xml:id="quickstart_idof-timezone_support"/><emphasis role="bold">Timezone support</emphasis></para>

  <para>Starting with &name-icinga; 1.6 all dates are stored as local timestamps in the database. Before that there was a different
  behaviour storing and retrieving dates for each database system which was difficult to handle for frontend apps. Therefore datatypes have
  been changed for &name-mysql; from DATETIME to TIMESTAMP and for &name-oracle; from DATE to LOCAL TIMESTAMP (0). &name-postgres; was
  already using TIMESTAMP but has been changed to TIMESTAMP WITH TIME ZONE. IDO2DB will set session timezone to UTC and store all unix
  timestamps (which are UTC per definition) as UTC based values. Please make sure your system returns unix timestamps as real UTC based
  values (like "date -u '+%s'").</para>

  <note>
    <para>Make sure your database session runs in the same timezone in which the existing dates have been stored (check your local timezone
    e.g. &name-oracle;:"select sessiontimezone from dual;") if you are running the upgrade script. Additionally for your convenience in
    &name-oracle; you should set your session timestamp format to the value you want, e.g "alter session set
    nls_timestamp_format='YYYY-MM-DD HH24:MI:SS';" or similar. Now you can view entries from different &name-icinga; installations in
    different time zones which are stored in the same database and regardless from where you accessing it, all entries are returned in your
    local time zone.</para>
  </note>

  <para><emphasis role="bold">Install the packages</emphasis></para>

  <para>You can install the packages from the ports or you take older packages (have a look at the <link
  linkend="quickstart-icinga-freebsd">&name-freebsd; quickstart quide</link>.</para>

  <para><emphasis role="bold">Install ports</emphasis></para>

  <para>You can install these ports by running the following commands (as root) but it is recommended to use portupgrade or portmaster
  instead:</para>

  <para>Please update your ports before doing so.</para>

  <programlisting> #&gt; cd /usr/ports/devel/libtool/ &amp;&amp; make all install clean
 #&gt; cd /usr/ports/graphics/jpeg &amp;&amp; make all install clean
 #&gt; cd /usr/ports/graphics/png &amp;&amp; make all install clean
 #&gt; cd /usr/ports/graphics/gd &amp;&amp; make all install clean</programlisting>

  <note>
    <para>Please make sure you have Apache installed - the process will not be discussed here, however the lead is <emphasis># cd
    /usr/ports/www/apache22 &amp;&amp; make clean &amp;&amp; make</emphasis>.</para>
  </note>

  <programlisting> #&gt; cd /usr/ports/devel/gmake &amp;&amp; make all install clean 
 #&gt; cd /usr/ports/devel/libltdl &amp;&amp; make all install clean &lt;-- unless installed already</programlisting>

  <para><emphasis role="bold">&name-mysql;</emphasis></para>

  <programlisting> #&gt; cd /usr/ports/databases/mysql51-server &amp;&amp; make all install clean 
 #&gt; cd /usr/ports/databases/libdbi-drivers &amp;&amp; make all install clean</programlisting>

  <para>please choose the correct driver for the database used</para>

  <para><emphasis role="bold">&name-postgres;</emphasis></para>

  <programlisting> #&gt; cd /usr/ports/databases/postgresql84-server &amp;&amp; make all install clean 
 #&gt; cd /usr/ports/databases/libdbi-drivers &amp;&amp; make all install clean</programlisting>

  <para>please choose the correct driver for the database used</para>

  <para><emphasis role="bold">Create Account Information</emphasis></para>

  <para>Become the root user.</para>

  <programlisting> $&gt; su -l</programlisting>

  <para>Create a new <emphasis>icinga</emphasis> user account without a password and without the ability to log-in (set no password when
  asked):</para>

  <programlisting> #&gt; adduser -D -w no -s nologin</programlisting>

  <para>For sending commands from the classic web interface to &name-icinga;, you'll need to create a new group icinga-cmd and add the
  webuser (www) and the &name-icinga;user to this group:</para>

  <programlisting> #&gt; pw groupadd -n icinga-cmd -M icinga,www </programlisting>

  <para><emphasis role="bold">Download &name-icinga; and the plugins</emphasis></para>

  <para>Change to your local source directory i.e. ~/src</para>

  <programlisting> #&gt; mkdir ~/src
 #&gt; cd ~/src</programlisting>

  <para>Get the current source from the <link xlink:href="http://www.icinga.org/">&name-icinga; Website</link>.</para>

  <para>Don't forget to download the <link xlink:href="http://www.nagiosplugins.org/">Nagios Plugins</link>.</para>

  <para><emphasis role="bold">Compile and install &name-icinga; and &name-idoutils;</emphasis></para>

  <para>Extract the &name-icinga; source code tarball (or change directory to the GIT snapshot)</para>

  <programlisting> #&gt; cd ~/src/ 
 #&gt; tar xvzf icinga-&ver-icinga;.tar.gz 
 #&gt; cd icinga-&ver-icinga;</programlisting>

  <note>
    <para>This absolute path is meant if we use the description '/path/to/icinga-src/'.</para>
  </note>

  <para>Run the &name-icinga; configure script. You will get help by using the --help flag.</para>

  <programlisting> #&gt; ./configure --with-command-group=icinga-cmd \
    --enable-idoutils CPPFLAGS=-I/usr/local/include \
    CFLAGS="-I/usr/local/include -L/usr/local/lib" \
    --with-dbi-lib=/usr/local/lib --with-dbi-inc=/usr/local/include</programlisting>

  <important>
    <para>Appending <emphasis>CPPFLAGS=-I/usr/local/include</emphasis> is important for the &name-idoutils; and the broker modul
    respectively.</para>
  </important>

  <note>
    <para>You should include <literal>CFLAGS=..."</literal> like specified above. Otherwise you might get the following lines in
    <filename>icinga.log</filename>: <screen> Error: Module ‘/usr/local/icinga/lib/idomod.so’ is using an old or unspecified version
 of the event broker API. Module will be unloaded.
 Event broker module ‘/usr/local/icinga/lib/idomod.so’ deinitialized successfully.</screen> More details on this error can be found <link
    xlink:href="http://www.mazej.net/icinga-idomod-o-is-using-an-old-or-unspecified-version-of-the-event-broker-api/"> here</link>.</para>
  </note>

  <para><emphasis role="bold">With SSL-encryption:</emphasis></para>

  <programlisting> #&gt; ./configure --with-command-group=icinga-cmd \
    --enable-idoutils --enable-ssl CPPFLAGS=-I/usr/local/include \
    --with-dbi-lib=/usr/local/lib --with-dbi-inc=/usr/local/include</programlisting>

  <para>Compile the &name-icinga; source code. There is a separate option for &name-idoutils; (<emphasis>make idoutils</emphasis>) if you
  just want to recompile this module. To see possible option just call "make".</para>

  <programlisting> #&gt; gmake all</programlisting>

  <para>Install binaries, init script, sample config files, some eventhandlers, and set permissions on the external command directory.
  <programlisting> #&gt; make install
 #&gt; make install-init
 #&gt; make install-config
 #&gt; make install-eventhandlers
 #&gt; make install-commandmode </programlisting> or shorter <programlisting> #&gt; make fullinstall
 #&gt; make install-config</programlisting></para>

  <note>
    <para>Starting with &name-icinga; 1.5.0 <literal>make install-config</literal> is NOT included in <literal>make fullinstall
    </literal>anymore to avoid accidently overwriting of your config files.</para>
  </note>

  <note>
    <para>Starting with &name-icinga; 1.7.0 <literal>make install-eventhandlers</literal> will install some event handler routines. To
    prevent undesired behaviour it is only included when you use <literal>make fullinstall</literal>.</para>
  </note>

  <note>
    <para>The &name-icinga;-API served as a database abstraction layer written in PHP. Starting with &name-icinga; 1.5 it is replaced by an
    internal database abstraction layer so &name-icinga;-API doesn't have to be installed anymore.</para>
  </note>

  <para>Don't start &name-icinga; yet - there's still more that needs to be done...</para>

  <para><emphasis role="bold">Customise Configuration</emphasis></para>

  <para>Sample configuration files have been installed using <programlisting> #&gt; gmake install-config</programlisting>into
  &url-icinga-base;/etc/. You'll need to make just one change before you proceed...</para>

  <para>Edit the <emphasis>&url-icinga-base;/etc/objects/contacts.cfg</emphasis> config file with your favourite editor and change the email
  address associated with the <emphasis>icingaadmin</emphasis> contact definition to the address you'd like to use for receiving
  alerts.</para>

  <programlisting> #&gt; vi &url-icinga-base;/etc/objects/contacts.cfg</programlisting>

  <programlisting> #&gt; cd &url-icinga-base;/etc
 #&gt; mv idomod.cfg-sample idomod.cfg
 #&gt; mv ido2db.cfg-sample ido2db.cfg</programlisting>

  <para>If you compiled the &name-idoutils; with SSL then you have to activate SSL in <filename>idomod.cfg</filename> setting</para>

  <programlisting> use_ssl=1
 output_type=tcpsocket
 output=127.0.0.1</programlisting>

  <para>(adjust the IP address if your database is not running on localhost!) and in <filename>ido2db.cfg</filename> setting</para>

  <programlisting> use_ssl=1
 socket_type=tcp </programlisting>

  <note>
    <para>Don't forget to recompile all other idomod clients and to activate SSL <emphasis role="bold">otherwise you will lose
    data!!!</emphasis></para>
  </note>

  <para><emphasis role="bold">Activate the idomod event broker module</emphasis></para>

  <important>
    <para>Under normal circumstances the following module definition is already present in the <filename>modules</filename> subdirectory so
    there is no need to edit the main config file <screen> define module{
        module_name    ido_mod
        path           &url-icinga-base;/lib/idomod.so
        module_type    neb
        args           config_file=&url-icinga-base;/etc/idomod.cfg
        }</screen> This also means that a broker_module entry must not be enabled!</para>
  </important>

  <para><emphasis role="bold">Compile database and &name-idoutils;</emphasis></para>

  <para><emphasis role="bold">&name-mysql;:</emphasis></para>

  <para><emphasis>Create database, user, and permissions</emphasis></para>

  <note>
    <para>If you just installed the RDBMS like decribed above then you have to start the database server before you can create a database.
    Having &name-mysql; please use <code>/usr/local/etc/rc.d/mysql-server start</code> to start.</para>
  </note>

  <programlisting> #&gt; mysql -u root -p

 mysql&gt; CREATE DATABASE icinga;

 GRANT USAGE ON icinga.* TO 'icinga'@'localhost' IDENTIFIED BY 'icinga' 
   WITH MAX_QUERIES_PER_HOUR 0
   MAX_CONNECTIONS_PER_HOUR 0
   MAX_UPDATES_PER_HOUR 0;

 GRANT SELECT, INSERT, UPDATE, DELETE, DROP, CREATE VIEW, INDEX
   ON icinga.* TO 'icinga'@'localhost';

 FLUSH PRIVILEGES ;

 quit</programlisting>

  <programlisting> #&gt; cd /path/to/icinga-src/module/idoutils/db/mysql
 #&gt; mysql -u root -p icinga &lt; mysql.sql</programlisting>

  <programlisting> #&gt; vi &url-icinga-base;/etc/ido2db.cfg

 db_servertype=mysql
 db_port=3306
 db_user=icinga
 db_pass=icinga</programlisting>

  <para><emphasis role="bold">&name-postgres;:</emphasis></para>

  <para><emphasis>To Do</emphasis></para>

  <para><emphasis role="bold">Install and configure the Classic Web Interface</emphasis></para>

  <para>&name-icinga; ships with the Classic Web Interface ("the CGIs") which can be installed via</para>

  <programlisting> #&gt; cd /path/to/icinga-src
 #&gt; make cgis
 #&gt; make install-cgis
 #&gt; make install-html</programlisting>

  <para>If you are interested in the new &name-icinga; Web, please refer to <link linkend="icinga-web-scratch">Install &name-icinga; Web
  Interface</link>.</para>

  <para>Install the Icinga Classic web config file in the Apache conf.d directory.</para>

  <note>
    <para>There is currently a bug in &name-icinga; Makefile which directly prevents this <emphasis>make</emphasis> command, please edit
    Makefile file in &name-icinga; source directory and change the line <programlisting> $(INSTALL) -D -m 644 sample-config/httpd.conf $(DESTDIR)$(HTTPD_CONF)/icinga.conf</programlisting>
    to <programlisting> $(INSTALL) -m 644 sample-config/httpd.conf $(DESTDIR)$(HTTPD_CONF)/icinga.conf</programlisting></para>
  </note>

  <programlisting> #&gt; make install-webconf</programlisting>

  <para>Create an <emphasis>icingaadmin</emphasis> account for logging into the &name-icinga; classic web interface. If you want to change
  it later, use the same command. Remember the password you assign to this account - you'll need it later.</para>

  <programlisting> #&gt; htpasswd -c &url-icinga-base;/etc/htpasswd.users icingaadmin</programlisting>

  <para>If you want to change it later or want to add another user, use the following command:</para>

  <programlisting> #&gt; htpasswd &url-icinga-base;/etc/htpasswd.users &lt;USERNAME&gt;</programlisting>

  <para>Reload/Restart Apache to make the new settings take effect.</para>

  <programlisting> #&gt; /usr/local/etc/rc.d/apache22 reload</programlisting>

  <para><emphasis role="bold">Compile and Install the Nagios-/Perl Plugins</emphasis></para>

  <para>Extract the &name-nagios; plugins source code tarball.</para>

  <programlisting> #&gt; cd ~/src 
 #&gt; tar xvzf nagios-plugins-&ver-nagiosplug;.tar.gz
 #&gt; cd nagios-plugins-&ver-nagiosplug; </programlisting>

  <para>Compile and install the plugins by changing install directory to &url-icinga-base;</para>

  <programlisting> #&gt; ./configure --prefix=&url-icinga-base; --with-cgiurl=/icinga/cgi-bin \
    --with-htmurl=/icinga --with-nagios-user=icinga --with-nagios-group=icinga
 #&gt; make 
 #&gt; make install </programlisting>

  <note>
    <para>There is a port for the plugins but it will install them in a different directory. You can set certain variables to tweak its make
    but you still have to copy some things manually later on.</para>
  </note>

  <para>Compile and install the Perl plugin:</para>

  <programlisting> #&gt; cd /usr/ports/net-mgmt/p5-Nagios-Plugin
 #&gt; make all install clean</programlisting>

  <para><emphasis role="bold">Starting &name-idoutils; and &name-icinga;</emphasis></para>

  <para>&name-idoutils; has to be started before &name-icinga;</para>

  <para><emphasis role="bold">Starting &name-idoutils;</emphasis></para>

  <programlisting> #&gt; /usr/local/etc/rc.d/ido2db start</programlisting>

  <para><emphasis role="bold">Stopping &name-idoutils;</emphasis></para>

  <programlisting> #&gt; /usr/local/etc/rc.d/ido2db stop</programlisting>

  <para><emphasis role="bold">Start &name-icinga;</emphasis></para>

  <para>Add &name-icinga; to the list of system services and have it automatically start when the system boots (make sure you have installed
  the init script before).</para>

  <programlisting> #&gt; echo icinga_enable=\"YES\" &gt;&gt; /etc/rc.conf</programlisting>

  <para>Verify the sample &name-icinga; configuration files.</para>

  <programlisting> #&gt; &url-icinga-bin; -v &url-icinga-cfg;</programlisting>

  <para>If there are no errors, start &name-icinga;.</para>

  <programlisting> #&gt; /usr/local/etc/rc.d/icinga start</programlisting>

  <para><emphasis role="bold">Login to the Classic Web Interface</emphasis></para>

  <para>You should now be able to access the &name-icinga; classic web interface at the URL below. You'll be prompted for the username (
  <emphasis>icingaadmin</emphasis>) and password you specified earlier.</para>

  <programlisting> http://localhost/icinga/</programlisting>

  <para>or</para>

  <programlisting> http://yourdomain.com/icinga/</programlisting>

  <para>Click on the "Service Detail" navbar link to see details of what's being monitored on your local machine. It will take a few minutes
  for &name-icinga; to check all the services associated with your machine.</para>

  <para><emphasis role="bold">Other Modifications</emphasis></para>

  <para>Make sure your system's firewall rules are configured to allow access to the web server if you want to access the &name-icinga;
  classic interface remotely.</para>

  <programlisting> #&gt; TCP port 80</programlisting>

  <para>Setting up your mail transfer agent (MTA) like exim, sendmail or postfix to allow &name-icinga; sending notification emails won't be
  explained here.</para>

  <para>Please refer to the <link xlink:href="http://www.nagioswiki.org/">&name-nagioswiki;</link> for more resources.</para>

  <para><emphasis role="bold">You're Done</emphasis></para>

  <para>Congratulations! You successfully installed &name-icinga;. Your journey into monitoring has just begun.</para>

  <para>You'll no doubt want to monitor more than just your local machine, so check out the chapter on <link linkend="ch02">"Getting
  Started"</link> about "Monitoring ..."</para>

  <para/>

  <para>Packages for &name-icinga;</para>

  <para>Compiler options for &name-icinga; with &name-idoutils;</para>

  <programlisting>./configure --with-httpd-conf=/usr/local/etc/apache22/Includes/ \
 --with-gd-lib=/usr/local/lib/ --with-gd-inc=/usr/local/include/ \
 --with-command-group=icinga-cmd --enable-idoutils \
 --with-dbi-inc=/usr/local/include --with-dbu-lib=/usr/local/lib \
 CPPFLAGS=-I/usr/local/include CFLAGS=-fPIC</programlisting>

  <para>Compiler options for &name-nagios; plugins (ports)</para>

  <programlisting>make install NAGIOSUSER=icinga NAGIOSGROUP=icinga \
 PREFIX=/usr/local/icinga</programlisting>

  <indexterm zone="quickstart-idoutils-freebsd">
    <primary>Quickstart</primary>

    <secondary>&name-icinga; and &name-idoutils; on &name-freebsd;</secondary>
  </indexterm>

  <indexterm zone="quickstart_idof-timezone_support">
    <primary>&name-idoutils; / timezone support</primary>
  </indexterm>
</section>
