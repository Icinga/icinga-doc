<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % all.entities SYSTEM "all-entities.ent">
%all.entities;
]>
<section version="5.0" xml:id="security" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>Sicherheitsüberlegungen</title>

  <para><emphasis role="bold">Einführung</emphasis></para>

  <mediaobject>
    <imageobject>
      <imagedata fileref="../images/security.png" format="PNG"></imagedata>
    </imageobject>
  </mediaobject>

  <para>Dies ist als ein kurzer Überblick einiger Dinge gedacht, die Sie bei der Installation von &name-icinga; im Hinterkopf
  behalten sollten, um es in einer sicheren Weise aufzusetzen.</para>

  <para>Ihr Überwachungsrechner sollte als eine Hintertür in Ihre anderen System betrachtet werden. In vielen Fällen wird dem
  &name-icinga;-Rechner der Zugriff auf Firewalls gewährt, um entfernte Server zu überwachen. In den meisten Fällen ist die
  Abfrage von verschiedenen Informationen der entfernten Server erlaubt. Überwachenden Servern wird ein gewisses Maß an Vertrauen
  entgegen gebracht, damit sie entfernte Systeme abfragen können. Das bietet einem potenziellen Angreifer eine attraktive
  Hintertür zu Ihren Systemen. Ein Angreifer könnte es einfacher haben, in Ihre Systeme einzudringen, wenn er zuerst den
  Überwachungsserver kompromittiert. Das trifft besonders dann zu, wenn Sie gemeinsame SSH-Schlüssel nutzen, um entfernte Systeme
  zu überwachen.</para>

  <para>Wenn ein Eindringling in der Lage ist, Prüfergebnisse oder externe Befehle an den &name-icinga;-Daemon zu erteilen, hat er
  die Möglichkeit, falsche Überwachungsdaten zu übertragen, Sie mit falschen Benachrichtigungen auf die Palme bringen oder
  Eventhandler-Scripte auszulösen. Wenn Sie Eventhandler-Scripte haben, die Services neu starten, Strom unterbrechen usw., dann
  kann das ziemlich problematisch sein.</para>

  <para>Ein weiterer zu beachtender Bereich ist die Möglichkeit von Eindringlingen, Überwachungsdaten (Statusinformationen) zu
  belauschen, während sie über den Draht gehen. Wenn Übertragungskanäle nicht verschlüsselt sind, können Angreifer durch
  Beobachtung Ihrer Überwachungsdaten wertvolle Informationen gewinnen. Nehmen Sie als Beispiel die folgende Situation: ein
  Angreifer belauscht für eine gewisse Zeit die Überwachungsdaten und analysiert die typische CPU- und Plattenauslastung Ihrer
  Systeme zusammen mit der Zahl der Benutzer, die typischerweise angemeldet sind. Der Angreifer ist dann in der Lage, die beste
  Zeit für die Kompromittierung eines Systems und dessen Ressourcen (CPU usw.) zu ermitteln, ohne bemerkt zu werden.</para>

  <para>Hier sind einige Hinweise, wie Sie Ihre Systeme sichern können, wenn Sie eine &name-icinga;-basierte Überwachungslösung
  implementieren...</para>

  <para><anchor xml:id="security-bestpractices" /> <emphasis role="bold">Optimale Verfahren</emphasis></para>

  <orderedlist>
    <listitem>
      <para><emphasis role="bold">Benutzen Sie eine eigene Überwachungs-Box</emphasis>. Wir würden empfehlen, dass Sie einen
      Server benutzen, der nur für die Überwachung (und ggf. andere administrative Aufgaben) vorgesehen ist. Schützen Sie Ihren
      Überwachungsserver, als wäre es einer der wichtigsten Server Ihres Netzwerks. Halten Sie die laufenden Services auf einem
      Minimum und beschränken Sie den Zugang durch TCP-Wrapper, Firewalls usw. Weil der &name-icinga;-Rechner berechtigt ist, mit
      Ihren Servern zu reden und vielleicht durch Ihre Firewalls zu gehen, kann es ein Sicherheitsrisiko sein, wenn Sie Benutzern
      Zugang zu Ihrem Überwachungsserver gewähren. Bedenken Sie, dass es einfacher ist, root-Zugang über eine Sicherheitslücke zu
      bekommen, wenn Sie ein lokales Benutzerkonto auf dem System haben.</para>

      <para><inlinemediaobject>
          <imageobject>
            <imagedata fileref="../images/security3.png" format="PNG"></imagedata>
          </imageobject>
        </inlinemediaobject></para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Lassen Sie &name-icinga; nicht als root laufen</emphasis> . &name-icinga; muss nicht als root
      laufen, also tun Sie es nicht. Sie können &name-icinga; anweisen, die Berechtigungen nach dem Start zu "droppen" und mit
      Hilfe der <link xlink:href="configmain-nagios_user">icinga_user</link>- und <link
      xlink:href="configmain-nagios_group">icinga_group</link>-Direktiven in der Hauptkonfigurationsdatei unter anderen Benutzer-
      und/oder Gruppenberechtigungen zu laufen. Wenn Sie Eventhandler oder Plugins ausführen müssen, die Root-Berechtigungen
      benötigen, möchten Sie vielleicht <link xlink:href="http://www.courtesan.com/sudo/sudo.html">sudo</link> nutzen.</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Verriegeln Sie das Prüfergebnis-Verzeichnis</emphasis>. Stellen Sie sicher, dass nur der
      <emphasis>icinga</emphasis>-Benutzer im <link linkend="configmain-check_result_path">check result path</link> lesen und
      schreiben darf. Wenn andere Benutzer außer <emphasis>icinga</emphasis> (oder <emphasis>root</emphasis>) in diesem
      Verzeichnis schreiben dürfen, dann können sie falsche Host-/Service-Prüfergebnisse an den &name-icinga;-Daemon senden. Dies
      kann zu Ärger (falschen Benachrichtigungen) oder Sicherheitsproblemen (ausgelösten Eventhandlern) führen.</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Verriegeln Sie das External Command File</emphasis>. Wenn Sie <link
      xlink:href="extcommands.html">externe Befehle</link> aktivieren, dann stellen Sie sicher, dass Sie passende Berechtigungen
      für das <emphasis>&url-icinga-base;/var/rw</emphasis>-Verzeichnis setzen. Nur der &name-icinga;-Benutzer (normalerweise
      <emphasis>icinga</emphasis>) und der Web-Server-Benutzer (normalerweise <emphasis>nobody</emphasis>,
      <emphasis>httpd</emphasis>, <emphasis>apache2</emphasis> oder <emphasis>www-data</emphasis>) sollten Schreibberechtigung für
      das Commmand-File besitzen. Wenn Sie &name-icinga; auf einer Maschine installiert haben, die der Überwachung und
      administrativen Aufgaben dient, dann sollte das ausreichen. Wenn Sie es auf einer allgemeinen- oder Multi-User-Maschine
      installiert haben (nicht empfohlen) und dem Web-Server-Benutzer Schreibberechtigung auf das Command-File geben, kann das ein
      Sicherheitsproblem sein. Sie wollen schließlich nicht, dass jeder Benutzer auf Ihrem System &name-icinga; über das
      External-Command-File kontrollieren kann. In diesem Fall würden wir raten, nur dem <emphasis>nagios</emphasis>-Benutzer
      Schreibberechtigung zu erlauben und etwas wie <link xlink:href="http://cgiwrap.sourceforge.net/">CGIWrap</link> zu benutzen,
      um die CGIs als <emphasis>icinga</emphasis> statt als <emphasis>nobody</emphasis> laufen zu lassen.</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Fordern Sie Authentifizierung bei den CGIs</emphasis>. Wir empfehlen dringend Authentifizierung
      für den Zugriff auf die CGIs. Sobald Sie das tun, lesen Sie die Dokumentation zu Standardberechtigungen von
      authentifizierten Kontakten und autorisieren Sie bestimmte Kontakte für zusätzliche Rechte nur, wenn es nötig ist. Eine
      Anleitung zur Einrichtung von Authentifizierung und Autorisierung finden Sie <link linkend="cgiauth">hier</link>. Wenn Sie
      mit der <link linkend="configcgi-use_authentication">use_authentication</link>-Direktive die Authentifizierung in der
      CGI-Konfigurationsdatei deaktivieren, wird das <link linkend="cgis-cmd_cgi">command CGI</link> das Schreiben jeglicher
      Befehle in das <link linkend="configmain-command_file">external command file</link> verweigern. Sie wollen schließlich
      nicht, dass alle Welt in der Lage ist, &name-icinga; zu kontrollieren, oder?</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Benutzen Sie absolute Pfade in Befehlsdefinitionen</emphasis>. Wenn Sie Befehle definieren,
      benutzen Sie den <emphasis>absoluten Pfad</emphasis> (keinen relativen) für Scripte oder Programm, die Sie ausführen.</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Verstecken Sie sensible Daten mit $USERn$-Makros</emphasis>. Die CGIs lesen die <link
      linkend="configmain">Hauptkonfigurationsdatei</link> und die <link
      linkend="configobject">Objekt-Konfigurationsdatei(en)</link>, so dass Sie dort keine sensiblen Informationen (Benutzernamen,
      Passwörter, usw.) ablegen sollten. Wenn Sie Benutzernamen und/oder Passwörter in einer Befehlsdefinition angeben müssen,
      dann nutzen Sie ein $USERn$-<link linkend="macros">Makro</link>, um sie zu verstecken. $USERn$-Makros werden in einer oder
      mehreren <link linkend="configmain-resource_file">Ressourcen-Dateien</link> definiert. Die CGIs werden nicht versuchen, den
      Inhalt von Ressourcen-Dateien zu lesen, so dass Sie restriktivere Berechtigungen (600 oder 660) dafür benutzen können.
      Betrachten Sie die Beispiel-<emphasis>resource.cfg</emphasis>-Datei im Basisverzeichnis der &name-icinga;-Distribution für
      ein Beispiel, wie $USERn$-Makros zu definieren sind.</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Entfernen Sie gefährliche Zeichen aus Makros</emphasis>. Benutzen Sie die <link
      linkend="configmain-illegal_macro_output_chars">illegal_macro_output_chars</link>-Direktive, um gefährliche Zeichen aus den
      $HOSTOUTPUT$- , $SERVICEOUTPUT$-, $HOSTPERFDATA$- und $SERVICEPERFDATA$-Makros zu entfernen, bevor sie in Benachrichtigungen
      usw. benutzt werden. Gefährliche Zeichen kann alles sein, was ggf. durch die Shell interpretiert wird und dadurch eine
      Sicherheitslücke öffnet. Ein Beispiel dafür sind Backtick-Zeichen (`) in den $HOSTOUTPUT$, $SERVICEOUTPUT$, $HOSTPERFDATA$
      und /oder $SERVICEPERFDATA$-Makros, die es einem Angreifer erlauben, einen beliebigen Befehl als &name-icinga;-Benutzer
      auszuführen (ein guter Grund, &name-icinga; NICHT als root-Benutzer laufen zu lassen).</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Sicherer Zugang zu entfernten Agenten</emphasis>. Verriegeln Sie den Zugang zu Agenten
      (&name-nrpe;, NSClient, SNMP, usw.) auf entfernten Systemen durch Firewalls, Zugangsliste usw. Sie wollen nicht, dass jeder
      Ihre Systeme nach Statusinformationen abfragt. Diese Informationen können durch einen Angreifer genutzt werden, um entfernte
      Eventhandler-Scripte auszuführen oder die beste Zeit zu ermitteln, um nicht beobachtet zu werden.</para>

      <para><inlinemediaobject>
          <imageobject>
            <imagedata fileref="../images/security1.png" format="PNG"></imagedata>
          </imageobject>
        </inlinemediaobject></para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Sichere Kommunikationskanäle</emphasis>. Stellen Sie sicher, dass Sie die Kommunikationskanäle
      zwischen verschiedenen &name-icinga;-Installationen und Ihren Überwachungskanälen verschlüsseln, wann immer möglich. Sie
      wollen nicht, dass jemand Statusinformationen belauscht, die über Ihr Netzwerk gehen. Diese Informationen können durch einen
      Angreifer genutzt werden, um die beste Zeit für einen unbeobachteten Zugang zu ermitteln.</para>

      <para><inlinemediaobject>
          <imageobject>
            <imagedata fileref="../images/security2.png" format="PNG"></imagedata>
          </imageobject>
        </inlinemediaobject></para>
    </listitem>
  </orderedlist>
  <indexterm zone="security"><primary>Sicherheitsüberlegungen</primary></indexterm>
</section>
