<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!ENTITY % all.entities SYSTEM "all-entities.ent">
%all.entities;
]>
<section version="5.0" xml:id="dependencychecks" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>Vorausschauende Abhängigkeitsprüfungen</title>

  <para><emphasis role="bold">Einführung</emphasis></para>

  <para>Host- und Service-<link linkend="dependencies">Abhängigkeiten</link> können definiert werden, um Ihnen größere Kontrolle
  darüber zu geben, wann Prüfungen ausgeführt und wann Benachrichtigungen versandt werden. Da Abhängigkeiten benutzt werden, um
  grundlegende Aspekte des Überwachungsprozesses zu kontrollieren, ist es wichtig sicherzustellen, dass die Status-Informationen
  in der Abhängigkeitslogik so aktuell wie möglich sind.</para>

  <para>&name-icinga; erlaubt Ihnen, vorausschauende Abhängigkeitsprüfungen für Hosts und Services zu aktivieren, um
  sicherzustellen, dass die Abhängigkeitslogik die aktuellsten Status-Informationen hat, wenn Entscheidungen darüber getroffen
  werden müssen, ob Benachrichtigungen verschickt werden oder um aktive Prüfungen für einen Host oder Service zu erlauben.</para>

  <para><emphasis role="bold">Wie arbeiten vorausschauende Prüfungen?</emphasis></para>

  <para>Das nachfolgende Bild zeigt ein einfaches Diagramm von Hosts, die von &name-icinga; überwacht werden, zusammen mit ihren
  Eltern/Kindbeziehungen und Abhängigkeiten.</para>

  <para>Der <emphasis>Switch2</emphasis>-Host in diesem Beispiel hat gerade den Status von UP in einen Problemzustand gewechselt.
  &name-icinga; muss feststellen, ob der Host DOWN oder UNREACHABLE ist, also wird es parallele Prüfungen für die direkten Eltern
  (<emphasis>Firewall1</emphasis>) und Kinder (<emphasis>Comp1</emphasis>, <emphasis>Comp2</emphasis>, und
  <emphasis>Switch3</emphasis>) auslösen. Das ist eine normale Funktion der <link
  linkend="networkreachability">Host-Erreichbarkeit</link>s-Logik.</para>

  <para>Sie werden auch feststellen, dass <emphasis>Switch2</emphasis> von <emphasis>Monitor1</emphasis> und
  <emphasis>File1</emphasis> in Bezug auf Benachrichtigungen oder Prüfausführung abhängt (welches davon ist unwichtig für dieses
  Beispiel). Wenn vorausschauende Host-Abhängigkeitsprüfungen aktiviert sind, wird &name-icinga; parallele Prüfungen von
  <emphasis>Monitor1</emphasis> und <emphasis>File1</emphasis> sowie gleichzeitig für die direkten Eltern und Kinder von
  <emphasis>Switch2</emphasis> auslösen. &name-icinga; tut dies, weil es wei�, dass es die Abhängigkeitslogik in der nahen Zukunft
  prüfen muss (z.B. für Zwecke der Benachrichtigung) und es will sicherstellen, dass es die aktuellsten Statusinformationen für
  die Hosts hat, die an der Abhängigkeit beteiligt sind.</para>

  <para><mediaobject>
      <imageobject>
        <imagedata fileref="../images/predictive-dependency-checks.png" format="PNG"></imagedata>
      </imageobject>
    </mediaobject></para>

  <para>So arbeiten vorausschauende Abhängigkeitsprüfungen. Einfach, oder?</para>

  <para><inlinemediaobject>
      <imageobject>
        <imagedata fileref="../images/note.gif" format="GIF"></imagedata>
      </imageobject>
    </inlinemediaobject> Anmerkung: Vorausschauende Service-Abhängigkeitsprüfungen arbeiten in einer ähnlichen Weise wie oben
  beschrieben. Außer natürlich, dass sie mit Services arbeiten statt mit Hosts.</para>

  <para><emphasis role="bold">Vorausschauende Prüfungen aktivieren</emphasis></para>

  <para>Vorausschauende Abhängigkeitsprüfungen verursachen ziemlich wenig Overhead, also würden wir empfehlen, dass Sie diese
  aktivieren. In den meisten Fällen werden die Vorteile, aktuelle Informationen für die Abhängigkeitslogik zu haben, den
  zusätzlichen Overhead durch diese Prüfungen mehr als ausgleichen.</para>

  <para>Vorausschauende Abhängigkeitsprüfungen zu aktivieren ist einfach:</para>

  <itemizedlist>
    <listitem>
      <para>Vorausschauende Host-Abhängigkeitsprüfungen werden durch die <link
      linkend="configmain-enable_predictive_host_dependency_checks">enable_predictive_host_dependency_checks</link>-Option
      kontrolliert.</para>
    </listitem>

    <listitem>
      <para>Vorausschauende Service-Abhängigkeitsprüfungen werden durch die <link
      linkend="configmain-enable_predictive_service_dependency_checks">enable_predictive_service_dependency_checks</link>-Option
      kontrolliert.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis role="bold">Cached Checks</emphasis></para>

  <para>Vorausschauende Abhängigkeitsprüfungen sind Prüfungen nach Bedarf und daher den Regeln von <link
  linkend="cachedchecks">cached checks</link> unterworfen. Cached checks können Ihnen Performance-Verbesserungen liefern, wenn
  &name-icinga; darauf verzichtet, eine Host- oder Serviceprüfung durchzuführen, wenn es statt dessen ein relativ aktuelles
  Prüfungsergebnis nutzen kann. Mehr Informationen über cached checks finden Sie <link linkend="cachedchecks">hier</link>.</para>
  <indexterm zone="dependencychecks"><primary>Abhängigkeiten</primary><secondary>vorausschauende Abhängigkeitsprüfungen</secondary></indexterm>
</section>
