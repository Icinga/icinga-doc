<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!ENTITY % all.entities SYSTEM "all-entities.ent">
%all.entities;
]>
<section version="5.0" xml:id="upgrading_idoutils" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg" xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml" xmlns:db="http://docbook.org/ns/docbook">
  <title><anchor xml:id="upgrading_idoutils2"/>&name-idoutils;-Datenbank aktualisieren</title>

  <para>Es mag einen Bug im Datenbankschema geben, der behoben wurde. Wenn Sie eine ältere &name-idoutils;-Version aktualisieren, dann
  müssen Sie außerdem diese Anpassungen manuell ausführen. Wenn Sie rpm/deb-Pakete benutzen, lesen Sie bitte die Hinweise und/oder fragen
  Sie den Maintainer, ob er diese Anpassungen in der Installationsroutine hinzugefügt hat.</para>

  <note>
    <para>Abhängig von den Änderungen und der Größe Ihrer Datenbank kann es eine Weile dauern, die Anpassungen durchzuführen. Bitte haben
    Sie ein wenig Geduld und brechen Sie das Script nicht ab, weil sonst ggf. Ihre Daten unbrauchbar sind.</para>
  </note>

  <para>Die Update-Dateien finden Sie zusammen mit den Datenbank-Installationsdateien in
  <code>/path/to/icinga-src/module/idoutils/db/DeineDB/</code></para>

  <para>Die Syntax ist wie folgt</para>

  <para><code>&lt;rdbm&gt;-upgrade-&lt;version&gt;.sql</code></para>

  <para>wobei &lt;rdbm&gt; mysql, pgsql oder oracle sein kann und &lt;version&gt; zeigt auf die Version, auf die Sie aktualisieren
  wollen.</para>

  <note>
    <para>Wenn Sie eine ältere Version aktualisieren wollen und zwischen dieser und der aktuellen noch andere Versionen liegen, dann sollten
    Sie beachten, dass Sie auch die dazwischen liegenden Updates inkrementell installieren müssen!</para>
  </note>

  <para>Sie haben z.B. 1.0RC1 installiert und möchten auf 1.0.1 aktualisieren - Sie müssen dann zuerst auf 1.0 Stable updaten und dann die
  Aktualierung auf 1.0.1 durchführen.</para>

  <orderedlist>
    <listitem>
      <para>Sichern Sie Ihre aktuelle Datenbank vor der Aktualisierung!</para>
    </listitem>

    <listitem>
      <para>Prüfen Sie die laufende &name-idoutils;-Version und die Zielversion. Prüfen Sie, ob zwischen diesen beiden Versionen noch andere
      Versionen liegen und aktualisieren Sie ggf. schrittweise.</para>
    </listitem>

    <listitem>
      <para>Führen Sie die Aktualisierung(en) mit einem Benutzer durch, der über die notwendigen Berechtigungen verfügt. Sie können das
      upgradedb-Script verwenden, aber das wird nicht empfohlen (betrifft nur MySQL).</para>
    </listitem>
  </orderedlist>

  <para><emphasis role="bold">MySQL:</emphasis> <programlisting> $ mysql -u root -p &lt;dbname&gt; &lt; /path/to/icinga-src/module/idoutils/db/mysql/mysql-upgrade-&lt;version&gt;.sql</programlisting>
  <emphasis role="bold">PostgreSQL:</emphasis> <programlisting> # su - postgres
 $ psql -U icinga -d icinga &lt; /path/to/icinga-src/module/idoutils/db/pgsql/pgsql-upgrade-&lt;version&gt;.sql</programlisting> <emphasis
  role="bold">Oracle:</emphasis> <programlisting> # su - oracle
 $ sqlplus dbuser/dbpass
 SQL&gt; @oracle-upgrade-&lt;version&gt;.sql</programlisting></para>

  <para><emphasis role="bold">Aktualisierung der &name-idoutils; auf 1.7</emphasis></para>

  <para>Beginnend mit Icinga 1.7 wurden Ort und Name der idomod shared-Library von <filename>$bindir/idomod.o</filename> in
  <filename>$libdir/idomod.so</filename> geändert. Bitte beachten Sie, dass auch die Endung ".o" in ".so" geändert wurde. Abhängig von der
  verwendeten Methode müssen Sie entweder den Aufruf im "broker_module"-Eintrag in <filename>icinga.cfg</filename> ODER die Moduldefinition
  in <filename>module/idomod.cfg</filename> anpassen. Die alte Datei <filename>idomod.o</filename> wird entfernt, falls sie gefunden wird.
  Sie erhalten auch eine Warnung beim Aufruf von "make install-idoutils" über diese Änderung.</para>

  <para>Bitte lesen Sie auch den Abschnitt "CHANGES for users" in <filename>changelog</filename>.</para>

  <anchor xml:id="upgrading_idoutils_1.5"/>

  <para><emphasis role="bold">Aktualisierung der &name-idoutils; auf 1.5</emphasis></para>

  <para><emphasis role="bold">Oracle</emphasis></para>

  <note>
    <para>Zum Einsatz von &name-idoutils; 1.5.0 mit &name-oracle; benötigen Sie OCILIB 3.9.2 - installieren Sie nicht 3.9.0 oder 3.9.1, denn
    diese Version sind fehlerbehaftet.</para>
  </note>

  <para>Passen Sie <filename>oracle-upgrade-1.5.0.sql</filename> an und definieren Sie Ihre Tablespaces ähnlich den folgenden Zeilen. Sie
  können auch Ihre bestehenden Tablespace-Namen für alle Definitionen benutzen. <programlisting> /* set real TBS names on which you have quota, no checks are implemented!*/
 define DATATBS='icinga';
 define LOBTBS='icinga';
 define IXTBS='icinga';</programlisting></para>

  <note>
    <para>Detailliertere Informationen zu &name-idoutils; mit &name-oracle; finden Sie in unserer Wiki-HowTo-Serie zu <link
    xlink:href="https://wiki.icinga.org/display/howtos/Icinga+and+Oracle">&name-oracle;</link>.</para>
  </note>

  <anchor xml:id="upgrading_idoutils_1.4"/>

  <para><emphasis role="bold">Aktualisierung der &name-idoutils; auf 1.4</emphasis></para>

  <para><emphasis role="bold">Oracle</emphasis></para>

  <itemizedlist>
    <listitem>
      <para>Die minimal erforderliche Version ist &name-oracle; 10g R2. Ältere Versionen können ggf. ebenfalls funktionieren, werden aber
      nicht unterstützt.</para>
    </listitem>

    <listitem>
      <para>Die optionale Trennung von Daten-, Index- und LOB-Tablespaces wird eingeführt. Passen Sie <filename>oracle-upgrade-1.4.0.sql
      </filename> an und definieren Sie Ihre Tablespaces. Sie können auch Ihre bestehenden Tablespace-Namen für alle Definitionen
      benutzen.</para>

      <para>Aktionen:</para>

      <itemizedlist>
        <listitem>
          <para>entfernen der Beschränkungen von Zahlenwerten</para>
        </listitem>

        <listitem>
          <para>entfernen der meisten bestehenden NOT NULL-Constraints</para>
        </listitem>

        <listitem>
          <para>benennen von Constraints</para>
        </listitem>

        <listitem>
          <para>anlegen von Index und LOBs in neuen Tablespaces</para>
        </listitem>

        <listitem>
          <para>Sequenzen auf NOCACHE setzen</para>
        </listitem>

        <listitem>
          <para>&name-oracle;-Funktion anpassen, um NO_DATA-Exceptions zu erzeugen</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>

  <caution>
    <para>Aktualisierung der &name-idoutils; auf &name-oracle; 1.4 erfordert ein bisschen "Magie". Stellen Sie sicher, dass</para>

    <orderedlist>
      <listitem>
        <para>Sie den kompletten <filename>upgrade</filename>-Ordner kopieren</para>
      </listitem>

      <listitem>
        <para>Sie das Script <filename>oracle-upgrade-1.4.0.sql</filename> anpassen und die Werte für DATA, LOB und IXT setzen</para>
      </listitem>

      <listitem>
        <para>Sie anschließend das Upgrade-Script starten</para>
      </listitem>
    </orderedlist>
  </caution>

  <anchor xml:id="upgrading_idoutils_1.3"/>

  <para><emphasis role="bold">Aktualisieren der &name-idoutils; auf 1.3</emphasis></para>

  <para>Mit &name-idoutils; 1.3 wird die Verwendung der Tabelle dbversion im IDOUtils Schema wieder eingeführt. Das Aktualisierungsskript
  stellt sicher, dass die Tabelle dbversion die aktuelle Version enthält. Ido2db vergleicht die Programversion mit der Datenbankversion und
  gibt einen Fehler im Syslog aus, wenn die Versionen voneinander abweichen.</para>

  <para>Verwenden Sie das Aktualisierungsskript für die &name-idoutils; 1.3 unter
  <literal>module/idoutils/db/&lt;rdbms&gt;/&lt;rdbm&gt;-upgrade-1.3.sql</literal> gegen Ihr aktuelles Datenbankschema, bitte beachten Sie
  die inkrementelle Vorgehensweise wie oben beschrieben.</para>

  <para>Nach der Aktualisierung sollten Sie die Datenbank-Version prüfen.</para>

  <programlisting> SQL&gt; SELECT * FROM icinga_dbversion</programlisting>

  <note>
    <para>Der Oracle-Tabellenname lautet "dbversion" (anstatt "icinga_dbversion").</para>
  </note>

  <anchor xml:id="upgrading_idoutils_1.0.3"/>

  <para><emphasis role="bold">Aktualisieren der &name-idoutils; auf 1.0.3</emphasis></para>

  <para>Es gab ein paar kleinere Änderungen:</para>

  <itemizedlist>
    <listitem>
      <para>display_name wurde geändert zu varchar(255) für mysql/oracle</para>
    </listitem>

    <listitem>
      <para>Update des pgsql schema, ersetzen von varchar(n) durch text</para>
    </listitem>

    <listitem>
      <para>Geänderter Wert für Konfigdateivariablen bis 1024 Länge für MySQL/Oracle.</para>
    </listitem>
  </itemizedlist>

  <para>Bitte verwenden Sie das Update-Skript für ihre Datenbank wie oben beschrieben.</para>

  <anchor xml:id="upgrading_idoutils_1.0.2"/>

  <para><emphasis role="bold">Aktualisieren der &name-idoutils; auf 1.0.2</emphasis></para>

  <para>Es gab einen signifikanten Bug in den &name-idoutils;, der erst in &name-icinga; 1.0.2 bereinigt werden konnte.</para>

  <para>Bei jedem Core Restart wurde die gesamte Menge an Objekten in der Objekttabelle erneut hinzugefuegt, anstelle die alten weiterhin zu
  verwenden und wie Relationen auf den neuesten Stand zu bringen.</para>

  <para>Beispielsweise bei 4000 Objekten (Hosts, Services, Contacts, etc) hat ein zweimaliger Core Restartet 4000+4000+4000 = 12000 Objekte
  bedeutet.</para>

  <para>In Bezug auf die Konfiguration und die Statusdaten ist dies nicht relevant, da deren Relationen zur Objekttabelle bei jeden Neustart
  bereinigt werden.</para>

  <para>Historische Daten allerdings behalten diese unterschiedliche Beziehung zur Objekttabelle bei - vor und nach dem Restart sind die
  Relationen unterschiedlich.</para>

  <para>Diese Dateninkonsistenz ist natürlich nicht wünschenswert und es wurde dementsprechend versucht, eine einfache Lösungsmöglichkeit zu
  finden.</para>

  <para>Neben den normale SQL Scripts für 1.0.2 (z.B. mysql-upgrade-1.0.2.sql) stehen erweiterte SQL Scripts zur Verfügung.</para>

  <para>Das Script arbeitet jeweils auf einer historischen Tabelle und holt sich mit Hilfe einer gestaffelten Query die notwendigen Daten
  aus den beiden Tabellen - historisch 1..1 Objekte. Desweiteren werden kaputte Eintraege zur Zeit des Restarts bereinigt.</para>

  <para>Bitte verwenden Sie diese Scripts wie Sie möchten - wahlweise direkt ausgeführt oder Schritt für Schritt, wie der Ablauf innerhalb
  des Scripts ist. Beachten Sie allerdings bitte, dass diese Scripts ohne Garantie auf ihr eigenes Risiko verwendet werden können.</para>

  <para>Falls Sie lediglich Livedaten verwenden, ist unter Umständen eine Neuinstallation des Datenbankschemas die einfachere Option.</para>

  <para>* &lt;rdbms&gt;-upgrade-1.0.2-fix-object-relations.sql</para>

  <para>Das "normale" Upgrade Script ist in 1.0.2 nur für MySQL verfügbar. Es wurden binäre Casts entfernt, da case sensistives Vergleichen
  auch mit einer Anpassung der Collation erreicht werden kann und so massive Performanceeinbrüche verhindert werden können.</para>

  <para>* mysql-upgrade-1.0.2.sql</para>

  <anchor xml:id="upgrading_idoutils_1.0.1"/>

  <para><emphasis role="bold">Aktualisieren der &name-idoutils; auf 1.0.1</emphasis></para>

  <para>Bitte vergewissern Sie sich, dass Sie bereits auf Icinga &name-idoutils; 1.0 aktualisiert haben, bevor Sie diesen Abschnitt
  weierlesen! Es gab einige (große) Veränderungen für alle unterstützten RDBMS, deshalb lesen Sie diesen Abschnitt bitte sehr sorgfältig.
  Alle Datenbank- Skripte sind nun in entsprechenden Unterverzeichnissen zu finden. Für alle RDBMS wurden mehr Indizes gesetzt, außerdem
  wurde die Größe der command_line Spalte in mehreren Tabellen, die 255 Zeichen überschritten, angepasst.</para>

  <para>RDBMS spezifische Änderungen und HowTo's:</para>

  <para><emphasis role="bold">MySQL:</emphasis></para>

  <para>Änderung der Datenbank- Engine von MYISAM zu InnoDB. Der Grund ist die Umgehung von Zeilen- Sperren/Transaktionen/Rollbacks im
  Gegensatz zu einer kleinen Geschwindigkeitseinbuße während der Inserts.</para>

  <para>Das Upgrade-Skript führt eine ALTER TABLE- Anweisung aus. Falls ihnen diese Idee nicht gefällt, können Sie auch folgendes
  tun:</para>

  <itemizedlist>
    <listitem>
      <para>Dump erstellen der existierenden Datenbank:</para>

      <programlisting># mysqldump -u root -p icinga &gt; icinga.sql</programlisting>
    </listitem>

    <listitem>
      <para>Ändern Sie alle Einträge von "MYISAM" zu "InnoDB"</para>
    </listitem>

    <listitem>
      <para>Import des angepassten Datensatzes in eine neue Datenbank (wenn Sie die alte Datenbank verwenden möchten, löschen Sie als erstes
      den originalen Datensatz und rekreieren Sie die Datenbank).</para>
    </listitem>
  </itemizedlist>

  <para><emphasis role="bold">PostgreSQL:</emphasis></para>

  <para>Der Tabelle systemcommands fehlte die Spalte der Namens Ausgabe. Diese wird während des Upgrades hinzugefügt.</para>

  <para><emphasis role="bold">Oracle:</emphasis></para>

  <para>Um die Performance in mehreren Bereichen zu verbessern, muß der Wert für open_cursors höher gesetzt werden (Standardwert ist 50).
  Das Aktualisierungsskript enthält zwei neue, in DML geschriebene, Prozeduren für die DELETE- Anweisungen.</para>

  <para>Darüber hinaus gab es umfangreiche Änderungen bezüglich der Autoincrement- Sequenz und der AFTER INSERT- Trigger (Emulation des
  MySQL Autoincrement auf Primärschlüssel). Die alte Routine wurde komplett verworfen, d.h. alle Trigger und die Autoincrement- Sequenz
  werden während des Updates entfernt. Als Ersatz werden für jede Tabelle neue Sequenzen hinzugefügt und in den IDOUtils für Oracle
  verwendet.</para>

  <para>Bei bestehenden Datensätzen wird dies beim Importieren zu Problemen führen. Die Sequenzen starten mit dem Wert 1 wo hingegen der
  primäre Key (id) einen Maximalwert gesetzt hat. Aus diesem Grund wird eine Basisfunktion bereitgestellt, die das folgende tut: Diese
  extrahiert den maximalen Wert der id plus eins aus der angegebenen Tabelle und verändert den jeweiligen Sequence Start auf diesen
  berechneten Wert.</para>

  <para>Bitte verwenden Sie diese Prozedur so, wie Sie es benötigen - auf alle Tabellen und Sequenzen oder auf separierte Teile. Die
  Prozedur ist auskommentiert, und wird ohne Garantie auf Datenkonsistenz zur Verfügung gestellt. Ziehen Sie Ihren DBA zu Rate, wenn Sie
  bestehende Datensätze importieren wollen.</para>

  <anchor xml:id="upgrading_idoutils_1.0"/>

  <para><emphasis role="bold">Aktualisieren der &name-idoutils; auf 1.0</emphasis></para>

  <para>Es gab einen Unique-Key-Fehler durch den Fork, der bei einigen Tabellen zu doppelten und nutzlosen Zeilen führt. Dies betrifft die
  folgenden Tabellen:</para>

  <itemizedlist>
    <listitem>
      <para>timedevents, timedeventqueue</para>
    </listitem>

    <listitem>
      <para>servicechecks</para>
    </listitem>

    <listitem>
      <para>systemcommands</para>
    </listitem>
  </itemizedlist>

  <para>Wenn Sie sich z.B. Definition der Tabelle servicechecks ansehen:</para>

  <programlisting> mysql&gt; show create table icinga_servicechecks;</programlisting>

  <para>sollten Sie etwa folgendes sehen</para>

  <programlisting> PRIMARY KEY (`servicecheck_id`),
 KEY `instance_id` (`instance_id`),
 KEY `service_object_id` (`service_object_id`),
 KEY `start_time` (`start_time`)</programlisting>

  <para>Um die o.g. Definition zu etwas wie diesem</para>

  <programlisting> PRIMARY KEY (`servicecheck_id`),
 UNIQUE KEY `instance_id` (`instance_id`,`service_object_id`,`start_time`,`start_time_usec`)</programlisting>

  <para>zu ändern, befolgen Sie bitte den folgenden Ablauf!</para>

  <para><emphasis role="bold">Wenn Sie von &name-idoutils; 1.0RC aktualisieren, dann benutzen Sie bitte
  module/idoutils/db/mysql/mysql-upgrade-1.0.sql - wenn Sie von einer älteren Version aktualisieren, dann führen Sie vorher die notwendigen
  Schritte durch, um auf 1.0RC zu aktualisieren!</emphasis></para>

  <para>Bitte sichern Sie Ihre Datenbank und stoppen Sie ido2db vor der Ausführung des Patches!</para>

  <orderedlist>
    <listitem>
      <para><code>/etc/init.d/ido2db stop</code></para>
    </listitem>

    <listitem>
      <para><code>mysql -u root -p icinga &lt; /path/to/icinga-src/module/idoutils/db/mysql/mysql-upgrade-1.0.sql</code></para>
    </listitem>
  </orderedlist>

  <para>Der Patch erledigt das Folgende mit Hilfe von MySQL-Befehlen:</para>

  <itemizedlist>
    <listitem>
      <para>hinzufügen einer temporären Spalte 'active', um die aktualisierte Zeile zu kennzeichnen</para>
    </listitem>

    <listitem>
      <para>ermitteln der benötigten Informationen zweier doppelter Zeilen basierend auf dem unique contraint, aktualisieren der zweiten
      Zeile und markieren durch first=inactive, second=active</para>
    </listitem>

    <listitem>
      <para>löschen aller als 'inactive' gekennzeichneten Zeilen</para>
    </listitem>

    <listitem>
      <para>entfernen der fehlerhaften Key-Definitionen</para>
    </listitem>

    <listitem>
      <para>hinzufügen des Unique Key</para>
    </listitem>

    <listitem>
      <para>entfernen der temporären Spalte 'active'</para>
    </listitem>
  </itemizedlist>

  <para>Diese Prozedur wird für jede Tabelle durchgeführt, so dass es eine Weile dauern kann, abhängig von Ihren Tabellengrößen und/oder
  DB-Spezifikationen.</para>

  <para>Falls Sie vorher etwas an den Keys verändert haben, dann stellen Sie sicher, dass Sie das gleiche DB-Schema wie in &name-idoutils;
  1.0RC benutzen, andernfalls wird das Script fehlschlagen.</para>

  <indexterm zone="upgrading_idoutils">
    <primary>Upgrading &name-idoutils;</primary>
  </indexterm>
</section>
