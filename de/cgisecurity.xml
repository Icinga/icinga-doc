<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % all.entities SYSTEM "all-entities.ent">
%all.entities;
]>
<section version="5.0" xml:id="cgisecurity" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>Verbesserte CGI-Sicherheit und Authentifizierung</title>

  <para><emphasis role="bold">Einführung</emphasis></para>

  <mediaobject>
    <imageobject>
      <imagedata align="right" fileref="../images/security.png" format="PNG"></imagedata>
    </imageobject>
  </mediaobject>

  <para>Dies ist als eine Einführung für die Implementierung stärkerer Authentifizierung und Server-Sicherheit bezogen auf das
  CGI-Web-Interface gedacht.</para>

  <para>Es gibt viele Wege, die Sicherheit Ihres Überwachungs-Servers und des &name-icinga;-Umfeldes zu verbessern. Dies sollte
  nicht als das Ende aller Bemühungen angesehen werden. Nehmen Sie es statt dessen als eine Einführung für einige der Techniken,
  die Sie nutzen können, um die Sicherheit Ihres System zu verstärken. Wie immer sollten Sie forschen und die besten Techniken
  nutzen, die verfügbar sind. Behandeln Sie Ihren Überwachungs-Server, als wäre es der wichtigste Server in Ihrem Netzwerk und Sie
  werden belohnt werden.</para>

  <para><anchor xml:id="cgisecurity-additionaltechniques" /> <emphasis role="bold">Zusätzliche Techniken</emphasis></para>

  <itemizedlist>
    <listitem>
      <para><emphasis role="bold">Stärkere Authentifizierung durch Digest Authentication</emphasis>. Wenn Sie den <link
      xlink:href="quickstart">Schnellstartanleitungen</link> gefolgt sind, werden Sie wahrscheinlich &name-apache;s <link
      xlink:href="http://httpd.apache.org/docs/2.2/mod/mod_auth_basic.html">Basic Authentication</link> nutzen. "Basic
      Authentication" wird Benutzer und Password bei jedem HTTP-Request im Klartext übertragen. Ziehen Sie eine sicherere
      Authentifierungsmethode wie z.B. <link xlink:href="http://httpd.apache.org/docs/2.2/mod/mod_auth_digest.html">Digest
      Authentication</link> in Betracht, die aus Ihrem Benutzernamen und Passwort einen MD5-Hash erzeugt, der bei jeder Anfrage
      gesendet wird.</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Erzwingen von TLS/SSL für jede Web-Kommunikation</emphasis>. &name-apache; bietet <link
      xlink:href="http://de.wikipedia.org/wiki/Transport_Layer_Security">TLS/SSL</link> durch das <link
      xlink:href="http://httpd.apache.org/docs/2.2/mod/mod_ssl.html">mod_ssl</link>-Modul. TLS/SSL bietet einen sicheren Tunnel
      zwischen Client und Server, der Abhören und Verfälschung durch starke publickey/privatekey-Kryptographie verhindert.</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Beschränken Sie &name-apache; mit Hilfe von Zugangskontrollen</emphasis>. Überlegen Sie, ob Sie
      den Zugang zur &name-icinga;-Box auf Ihre IP-Adresse, IP-Adressbereich oder IP-Subnetz beschränken. Wenn Sie Zugang von
      außen auf Ihr Netzwerk benötigen, können Sie VPN und SSH-Tunnel nutzen. Es ist einfach, den Zugang zu Ihrem System auf
      HTTP/HTTPS zu begrenzen.</para>
    </listitem>
  </itemizedlist>

  <para><anchor xml:id="cgisecurity-implementation-digest" /> <emphasis role="bold">Implementieren der Digest
  Authentication</emphasis></para>

  <para>Die Implementierung der Digest Authentication ist einfach. Dazu müssen Sie den neuen Typ der Passwort-Datei mit dem <link
  xlink:href="http://httpd.apache.org/docs/2.2/programs/htdigest.html">'htdigest'</link>-Tool anlegen, dann die
  &name-apache;-Konfiguration für &name-icinga; anpassen (typischerweise &url-icinga-web;).</para>

  <para>Legen Sie eine neue Passwort-Datei mit dem <link
  xlink:href="http://httpd.apache.org/docs/2.2/programs/htdigest.html">'htdigest'</link>-Tool an. Den Unterschied, den Sie
  feststellen werden, wenn Sie mit dem <link
  xlink:href="http://httpd.apache.org/docs/2.2/programs/htpasswd.html">'htpasswd'</link>-Tool vertraut sind, ist die Anforderung,
  ein 'Realm'-Parameter anzugeben. In diesem Fall bezieht sich 'realm' auf den Wert der 'AuthName'-Direktive in der
  &name-apache;-Konfiguration.</para>

  <screen> htdigest -c &url-icinga-base;/etc/.digest_pw "&name-icinga; Access" icingaadmin</screen>

  <para>Als nächstes editieren Sie die &name-apache;-Konfigurationsdatei für &name-icinga; (typischerweise &url-icinga-web;) mit
  Hilfe des folgenden Beispiels:</para>

  <screen> ## BEGIN APACHE CONFIG SNIPPET - &name-icinga;.CONF
 ScriptAlias /icinga/cgi-bin "&url-icinga-base;/sbin"
 &lt;Directory "&url-icinga-base;/sbin"&gt;
    Options ExecCGI
    AllowOverride None
    Order allow,deny
    Allow from all
    AuthType Digest
    AuthName "&name-icinga; Access"
    AuthUserFile &url-icinga-base;/etc/.digest_pw
    Require valid-user
 &lt;/Directory&gt;
 Alias /icinga "&url-icinga-base;/share"
 &lt;Directory "&url-icinga-base;/share"&gt;
    Options None
    AllowOverride None
    Order allow,deny
    Allow from all
    AuthType Digest
    AuthName "&name-icinga; Access"
    AuthUserFile &url-icinga-base;/etc/.digest_pw
    Require valid-user
 &lt;/Directory&gt;
 ## END APACHE CONFIG SNIPPETS</screen>

  <para>Danach starten Sie den &name-apache;-Service, damit die neuen Einstellungen aktiv werden können.</para>

  <screen> /etc/init.d/httpd restart</screen>

  <para><anchor xml:id="cgisecurity-implementation-ssl" /> <emphasis role="bold">Implementieren erzwungener
  TLS/SSL-Kommunikation</emphasis></para>

  <para>Stellen Sie sicher, dass Sie &name-apache; und OpenSSL installiert haben. Normalerweise sollten Sie <link
  xlink:href="http://httpd.apache.org/docs/2.2/mod/mod_ssl.html">mod_ssl</link>-Unterstützung haben. Falls Sie trotzdem
  Schwierigkeiten haben, finden Sie ggf. Hilfe durch das Lesen von &name-apache;s <link
  xlink:href="http://httpd.apache.org/docs/2.0/ssl">TLS/SSL Encryption Documentation</link>.</para>

  <para>Als nächstes prüfen Sie durch den Aufruf des &name-icinga;-Web-Interfaces über HTTPS (https://your.domain/&name-icinga;),
  dass die TLS/SSL-Unterstützung funktioniert. Wenn es funktioniert, können Sie mit den nächsten Schritten fortfahren, die die
  Nutzung von HTTPS erzwingen und alle HTTP-Anfragen an das &name-icinga;-Web-Interface blockiert. Wenn Sie Schwierigkeiten haben,
  lesen Sie bitte &name-apache;s <link xlink:href="http://httpd.apache.org/docs/2.0/ssl">TLS/SSL Encryption Documentation</link>
  und nutzen Sie <link xlink:href="http://www.google.com">Google</link> für die Suche nach Lösungen zu Ihrer
  &name-apache;-Installation.</para>

  <para>Danach editieren Sie die &name-apache;-Konfigurationsdatei für &name-icinga; (typischerweise &url-icinga-web;) und fügen
  Sie den 'sbin'- und 'share'-Verzeichnissen die 'SSLRequireSSL'-Direktive hinzu.</para>

  <screen> ## BEGIN APACHE CONFIG SNIPPET - &name-icinga;.CONF
 ScriptAlias /icinga/cgi-bin "&url-icinga-base;/sbin"
 &lt;Directory "&url-icinga-base;/sbin"&gt;
    ...
    SSLRequireSSL
    ...
 &lt;/Directory&gt;
 Alias /icinga "&url-icinga-base;/share"
 &lt;Directory "&url-icinga-base;/share"&gt;
    ...
    SSLRequireSSL
    ...
 &lt;/Directory&gt;
 ## END APACHE CONFIG SNIPPETS</screen>

  <para>Danach starten Sie den &name-apache;-Service, damit die neuen Einstellungen aktiv werden können.</para>

  <screen> /etc/init.d/httpd restart</screen>

  <para><anchor xml:id="cgisecurity-implementation-lockdown" /> <emphasis role="bold">Implementieren von
  IP-Subnetz-Beschränkung</emphasis></para>

  <para>Das folgende Beispiel zeigt, wie Sie den Zugang auf die &name-icinga;-CGIs auf eine bestimmte IP-Adresse, einen
  IP-Adressbereich oder ein IP-Subnetz mit Hilfe von &name-apache;s <link
  xlink:href="http://httpd.apache.org/docs/2.2/howto/access.html">Access Controls</link> beschränken.</para>

  <para>Danach editieren Sie die &name-apache;-Konfigurationsdatei für &name-icinga; (typischerweise &url-icinga-web;) und fügen
  Sie die 'Allow'-, 'Deny'- und 'Order'-Direktiven hinzu. Dazu folgendes Beispiel:</para>

  <screen> ## BEGIN APACHE CONFIG SNIPPET - &name-icinga;.CONF
 ScriptAlias /icinga/cgi-bin "&url-icinga-base;/sbin"
 &lt;Directory "&url-icinga-base;/sbin"&gt;
    ...
    AllowOverride None
    Order deny,allow
    Deny from all
    Allow from 127.0.0.1 10.0.0.25               # Allow single IP addresses
    Allow from 10.0.0.0/255.255.255.0            # Allow network/netmask pair
    Allow from 10.0.0.0/24                       # Allow network/nnn CIDR spec
    ...
 &lt;/Directory&gt;
 Alias /icinga "&url-icinga-base;/share"
 &lt;Directory "&url-icinga-base;/share"&gt;
    ...
    AllowOverride None
    Order deny,allow
    Deny from all
    Allow from 127.0.0.1 10.0.0.25               # Allow single IP addresses
    Allow from 10.0.0.0/255.255.255.0            # Allow network/netmask pair
    Allow from 10.0.0.0/24                       # Allow network/nnn CIDR spec
    ...
 &lt;/Directory&gt;
 ## END APACHE CONFIG SNIPPET</screen>

  <para><anchor xml:id="cgisecurity-importantnotes" /> <emphasis role="bold">Wichtige Anmerkungen</emphasis></para>

  <itemizedlist>
    <listitem>
      <para><emphasis role="bold">Digest Authentication sendet Daten im Klartext, aber nicht Ihren Benutzernamen und
      Passwort</emphasis> .</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Digest Authentication ist nicht ganz so gut unterstützt wie Basic Authentication</emphasis>
      .</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">TLS/SSL hat das Potential für einen "Man-in-the-middle-Angriff"</emphasis>. MITM-Angriffe machen
      verletzbar, wenn ein Angreifer in der Lage ist, sich zwischen Server und Client zu schieben wie bei einem Phishing-Angriff,
      ISP-Monitoring oder Resignierung von Unternehmens-LAN Firewall-Zertifikaten. Bitte machen Sie sich kundig zu
      Zertifikats-Verifikation!</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">&name-apache; Access Controls schützen nur die HTTP/HTTPS-Protokolle</emphasis> . Sehen Sie sich
      <link xlink:href="http://www.netfilter.org/projects/iptables/index.html">IPtables</link> für eine starke systemweite
      Firewall-Kontrolle an.</para>
    </listitem>

    <listitem>
      <para><emphasis role="bold">Am wichtigsten: Sicherheit ist ein bewegliches Ziel, also bleiben Sie informiert und forschen
      Sie</emphasis> ! Vielleicht durch das Anhören eines Podcasts wie z.B. "<link
      xlink:href="http://www.grc.com/securitynow.htm">Security Now!</link>".</para>
    </listitem>
  </itemizedlist>
  <indexterm zone="cgisecurity"><primary>CGI-Sicherheit</primary><secondary>Verbesserte CGI-Sicherheit und Authentifizierung</secondary></indexterm>
  <indexterm zone="cgisecurity-additionaltechniques"><primary>CGI-Sicherheit</primary><secondary> Zusätzliche Techniken</secondary></indexterm>
  <indexterm zone="cgisecurity-implementation-digest"><primary>CGI-Sicherheit</primary><secondary> Implementieren der Digest Authentication</secondary></indexterm>
  <indexterm zone="cgisecurity-implementation-ssl"><primary>CGI-Sicherheit</primary><secondary> Implementieren erzwungener TLS/SSL-Kommunikation</secondary></indexterm>
  <indexterm zone="cgisecurity-implementation-lockdown"><primary>CGI-Sicherheit</primary><secondary> Implementieren von IP-Subnetz-Beschränkung</secondary></indexterm>
</section>
