<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter [
  <!ENTITY % all.entities SYSTEM "all-entities.ent">
  %all.entities;
]>
<section version="5.0" xml:id="whatsnew" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
    <title>Was gibt es Neues</title>
    <para><inlinemediaobject>
        <imageobject>
          <imagedata fileref="../images/tip.gif" format="GIF"/>
        </imageobject>
      </inlinemediaobject>
 Wichtig: Bitte lesen Sie die Dokumentation und die FAQs unter <link xlink:href="&url-nagios;/">nagios.org</link>, bevor Sie eine Frage an die Mailing-Listen stellen.</para>
    <para>
      <emphasis role="bold">Änderungsprotokoll</emphasis>
    </para>
    <para>Das (englischsprachige) Änderungsprotokoll für &name-icinga; finden Sie online unter <link xlink:href="&url-nagios;/development/changelog.php">&url-nagios;/development/changelog.php</link> oder in der <emphasis role="bold">Changelog</emphasis>-Datei im root-Verzeichnis der Source-Code-Distribution.</para>
    <para>
      <emphasis role="bold">Änderungen und neue Features</emphasis>
    </para>
    <orderedlist>
      <listitem>
        <para><emphasis condition="red" role="color">
            <emphasis role="bold">Dokumentation</emphasis>
          </emphasis>
 :</para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">Dokumentationsaktualisierungen</emphasis>  - ich (A.d.Ü.: der Autor, nicht der Übersetzer ;-)) kämpfe mich langsam durch das Umschreiben aller Teile der Dokumentation. Dies wird eine Weile dauern, da es (1) eine Menge Dokumentation ist und (2) das Schreiben der Dokumentation nicht zu meinen Lieblingsbeschäftigungen zählt. Es kann also sein, dass vorübergehend einige Teile nicht ganz zu anderen passen. Ich hoffe, dass die Änderungen die Dinge einfacher/klarer für neue und erfahrene Benutzer gleichermaßen machen.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Makros</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">Neue Makros</emphasis>  - Neue Makros wurden hinzugefügt, dazu gehören: $TEMPPATH$, $LONGHOSTOUTPUT$, $LONGSERVICEOUTPUT$, $HOSTNOTIFICATIONID$, $SERVICENOTIFICATIONID$, $HOSTEVENTID$, $SERVICEEVENTID$, $SERVICEISVOLATILE$, $LASTHOSTEVENTID$, $LASTSERVICEEVENTID$, $HOSTDISPLAYNAME$, $SERVICEDISPLAYNAME$, $MAXHOSTATTEMPTS$, $MAXSERVICEATTEMPTS$, $TOTALHOSTSERVICES$, $TOTALHOSTSERVICESOK$, $TOTALHOSTSERVICESWARNING$, $TOTALHOSTSERVICESUNKNOWN$, $TOTALHOSTSERVICESCRITICAL$, $CONTACTGROUPNAME$, $CONTACTGROUPNAMES$, $CONTACTGROUPALIAS$, $CONTACTGROUPMEMBERS$, $NOTIFICATIONRECIPIENTS$, $NOTIFICATIONISESCALATED$, $NOTIFICATIONAUTHOR$, $NOTIFICATIONAUTHORNAME$, $NOTIFICATIONAUTHORALIAS$, $NOTIFICATIONCOMMENT$, $EVENTSTARTTIME$, $HOSTPROBLEMID$, $LASTHOSTPROBLEMID$, $SERVICEPROBLEMID$, $LASTSERVICEPROBLEMID$, $LASTHOSTSTATE$, $LASTHOSTSTATEID$, $LASTSERVICESTATE$, $LASTSERVICESTATEID$.</para>
            <para> Es gibt auch zwei neue spezielle Zeit-Makros bei Prüfungen nach Bedarf: $ISVALIDTIME:$ und $NEXTVALIDTIME:$.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Entfernte Makros</emphasis>  - Das alte $NOTIFICATIONNUMBER$-Makro wurde zu Gunsten der neuen $HOSTNOTIFICATIONNUMBER$- und $SERVICENOTIFICATIONNUMBER$-Makros verworfen.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Änderungen</emphasis>  - Die $HOSTNOTES$- und $SERVICENOTES$-Makros können nun selbst Makros enthalten, wie z.B. die $HOSTNOTESURL$-, $HOSTACTIONURL$-, $SERVICENOTESURL$- und $SERVICEACTIONURL$-Makros.</para>
          </listitem>
          <listitem>
            <para> Makros sind normalerweise als Umgebungsvariablen verfügbar, wenn Prüfungen, Eventhandler, Benachrichtigungen und andere Befehle ausgeführt werden. Das kann in großen &name-icinga;-Installationen ziemlich CPU-intensiv sein, so dass Sie dieses Verhalten mit der <link linkend="configmain-enable_environment_macros">enable_environment_macros</link>-Option deaktivieren können.</para>
          </listitem>
          <listitem>
            <para> Informationen zu Makros finden Sie <link linkend="macros">hier</link>.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Geplante Ausfallzeiten</emphasis>  (Scheduled Downtime):</para>
        <itemizedlist>
          <listitem>
            <para> Einträge zu <link linkend="downtime">geplanten Ausfallzeiten</link> werden nicht länger in einer eigenen Datei (bisher angegeben in der <emphasis>downtime_file</emphasis>-Direktive in der Hauptkonfigurationsdatei) gespeichert. Aktuelle und zurückgehaltene (retained) Einträge werden nun in der <link linkend="configmain-status_file">Statusdatei</link> bzw. in der <link linkend="configmain-state_retention_file">Statusaufbewahrungsdatei</link> (retention file) gespeichert.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Kommentare</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Host- und Service-Kommentare werden nicht länger in einer eigenen Datei (bisher angegeben in der <emphasis>comment_file</emphasis>-Direktive in der Hauptkonfigurationsdatei) gespeichert. Aktuelle und zurückgehaltene (retained) Kommentare werden nun in der <link linkend="configmain-status_file">Statusdatei</link> bzw. in der <link linkend="configmain-state_retention_file">Statusaufbewahrungsdatei</link> (retention file) gespeichert.</para>
          </listitem>
          <listitem>
            <para> Bestätigungskommentare, die nicht als &quot;persistent&quot; gekennzeichnet sind, werden nur dann gelöscht, wenn die Bestätigung gelöscht wird. Sie wurden bisher automatisch beim (erneuten) Start von &name-icinga; gelöscht, was nicht ideal war.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">aufbewahrte Zustandsdaten</emphasis>  (State Retention Data):</para>
        <itemizedlist>
          <listitem>
            <para> Statusinformationen für einzelne Kontakte werden nun über erneute Programmstarts hinweg aufbewahrt.</para>
          </listitem>
          <listitem>
            <para> Kommentare und Ausfallzeit-IDs werden nun über erneute Programmstarts hinweg aufbewahrt und sollten eindeutig sein, solange diese aufbewahrten Daten nicht gelöscht oder ignoriert werden.</para>
          </listitem>
          <listitem>
            <para> Die Variablen <link linkend="configmain-retained_host_attribute_mask">retained_host_attribute_mask</link> und <link linkend="configmain-retained_service_attribute_mask">retained_service_attribute_mask</link> wurden hinzugefügt, um zu kontrollieren, welche Host-/Service-Attribute global über erneute Programmstarts hinweg aufbewahrt werden</para>
          </listitem>
          <listitem>
            <para> Die Variablen <link linkend="configmain-retained_process_host_attribute_mask">retained_process_host_attribute_mask</link> und <link linkend="configmain-retained_process_service_attribute_mask">retained_process_service_attribute_mask</link> wurden hinzugefügt, um zu kontrollieren, welche Host-/Service-Attribute global über erneute Programmstarts hinweg aufbewahrt werden</para>
          </listitem>
          <listitem>
            <para> Die Variablen <link linkend="configmain-retained_contact_host_attribute_mask">retained_contact_host_attribute_mask</link> und <link linkend="configmain-retained_contact_service_attribute_mask">retained_contact_service_attribute_mask</link> wurden hinzugefügt, um zu kontrollieren, welche Host-/Service-Attribute global über erneute Programmstarts hinweg aufbewahrt werden</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Flattererkennung</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Die <emphasis>flap_detection_options</emphasis>-Direktive wurde den Host- und Service-Definitionen hinzugefügt, um festzulegen, welche Host-/Service-Zustände bei der Flattererkennungslogik benutzt werden sollen (als Standard werden alle Zustände benutzt).</para>
          </listitem>
          <listitem>
            <para> Prozentuale Zustandsänderungen und Statusverläufe werden nun aufbewahrt und aufgezeichnet, selbst wenn die Flattererkennung deaktiviert ist.</para>
          </listitem>
          <listitem>
            <para> Hosts und Services werden sofort auf Flattern geprüft, wenn die Flattererkennung auf programmweiter Basis aktiviert ist.</para>
          </listitem>
          <listitem>
            <para> Hosts und Services, die flattern, werden protokolliert, wenn die Flattererkennung auf programmweiter Basis deaktiviert ist.</para>
          </listitem>
          <listitem>
            <para> Mehr Informationen zur Flattererkennung finden Sie <link linkend="flapping">hier</link>.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Externe Befehle</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> ein neuer externer Befehl PROCESS_FILE wurde hinzugefügt, um externe Befehle zu verarbeiten, die in einer externen (regulären) Datei stehen. Das ist nützlich, um große Mengen von passiven Prüfungen mit langen Ausgaben zu verarbeiten oder für das Scripting von &quot;normalen&quot; Befehlen. Mehr Informationen finden Sie <link linkend="#">hier</link>.</para>
          </listitem>
          <listitem>
            <para> eigene Befehle können nun an &name-icinga; erteilt werden. Eigene Befehlsnamen beginnen mit einem Unterstrich (_) und werden nicht intern vom &name-icinga;-Daemon verarbeitet. Sie können allerdings von einem geladenen NEB-Modul verarbeitet werden. (A.d.Ü.: NEB=&name-icinga; Event Broker)</para>
          </listitem>
          <listitem>
            <para> Die <link linkend="configmain-check_external_commands">check_external_commands</link>-Option ist nun per Default aktiviert, was bedeutet, dass &name-icinga; bereits im &quot;Auslieferzustand&quot; externe Befehle verarbeitet. Bei allen vorigen &name-icinga;-Version (2.x und früher) ist diese Version deaktiviert.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Statusdaten</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Kontaktstatusinformationen (letzte Benachrichtigungszeit, Benachrichtigungen aktiviert/deaktiviert, usw.) werden nun in den <link linkend="configmain-status_file">Status</link>- und <link linkend="configmain-state_retention_file">Aufbewahrungs</link>-Dateien gespeichert, obwohl sie nicht von den CGIs verarbeitet werden.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">eingebettetes Perl</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Die Variablen <link linkend="configmain-enable_embedded_perl">enable_embedded_perl</link> und <link linkend="configmain-use_embedded_perl_implicitly">use_embedded_perl_implicitly</link> zur Kontrolle der Nutzung des eingebetteten Perl-Interpreters wurden hinzugefügt.</para>
          </listitem>
          <listitem>
            <para> Perl-Scripts/Plugins können &name-icinga; nun mitteilen, ob sie mit dem eingebetteten Perl-Interpreter ausgeführt werden sollen oder nicht. Das ist sinnvoll, wenn Sie einige schwierige Scripte haben, die nicht sauber mit ePN laufen.</para>
          </listitem>
          <listitem>
            <para> Mehr Informationen zu diesen neuen Optionen finden Sie <link linkend="embeddedperl">hier</link>.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Anpassungsfähige Überwachung</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Die Zeitfenster für Host- und Service-Prüfungen können nun mit den entsprechenden externen Befehlen (CHANGE_HOST_CHECK_TIMEPERIOD bzw. CHANGE_SVC_CHECK_TIMEPERIOD) &quot;im Fluge&quot; geändert werden. Schauen Sie <link linkend="#">hier</link> nach verfügbaren anpassungsfähigen Überwachungsbefehlen.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Benachrichtigungen</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Eine <emphasis>first_notification_delay</emphasis>-Option wurde den Host- und Service-Definitionen hinzugefügt, um (was sonst) eine Verzögerung einzuführen zwischen dem ersten Auftreten eines Host-Service-Problems und der ersten Benachrichtigung, die versandt wird. In früheren Versionen mussten Sie mächtig mit Eskalationen herumbasteln, um dies zu erreichen. Nun ist dieses Feature auch für Normalsterbliche verfügbar.</para>
          </listitem>
          <listitem>
            <para> Benachrichtigungen werden nun für flatternde Host/Services versandt, wenn die Flattererkennung auf einer Host- oder Service-spezifischen oder programmweiten Basis deaktiviert ist. Das $NOTIFICATIONTYPE$-Makro hat in dieser Situation den Wert &quot;FLAPPIN&name-gd;ISABLED&quot;.</para>
          </listitem>
          <listitem>
            <para> Benachrichtigungen können versandt werden, wenn geplanten Ausfallzeiten (Downtimes) für Hosts oder Services beginnen, enden oder abgebrochen werden. Das $NOTIFICATIONTYPE$-Makro hat in diesem Fall den Wert &quot;DOWNTIMESTART&quot;, &quot;DOWNTIMEEND&quot; oder &quot;DOWNTIMECANCELLED&quot;. Um Benachrichtigungen zu Ereignissen bei geplanten Ausfallzeiten zu bekommen, geben Sie &quot;s&quot; oder &quot;downtime&quot; in Ihren Kontakt-, Host- und/oder Service-Benachrichtigungsoptionen an.</para>
          </listitem>
          <listitem>
            <para> Mehr Informationen zu Benachrichtigungen finden Sie <link linkend="notifications">hier</link>.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Objektdefinitionen</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Service-Abhängigkeiten können nun erstellt werden, um einfach &quot;gleicher Host&quot;-Abhängigkeiten für verschiedene Services auf einem oder mehreren Hosts zu definieren. (<link linkend="objecttricks-same_host_dependency">Lesen Sie mehr</link>)</para>
          </listitem>
          <listitem>
            <para> Erweiterte Host- und Service-Definitionen (hostextinfo bzw. serviceextinfo) sind &quot;veraltet&quot;. Alle Werte der erweiterten Definitionen sind nun in Host- und Service-Definitionen eingeflossen. &name-icinga; 3 wird alte erweiterte Informationsdefinitionen einlesen, aber eine Warnung ausgeben. Zukünftige Versionen von &name-icinga; (4.x und später) werden keine separaten erweiterten Informationsdefinitionen mehr unterstützen.</para>
          </listitem>
          <listitem>
            <para> Neue <emphasis>hostgroup_members</emphasis>-, <emphasis>servicegroup_members</emphasis>- und <emphasis>contactgroup_members</emphasis>-Direktiven wurden den hostgroup-, servicegroup- bzw. contactgroup-Definition hinzugefügt. Dies erlaubt es Ihnen, Hosts, Services oder Kontakte von Untergruppen in Ihre Gruppendefinitionen aufzunehmen.</para>
          </listitem>
          <listitem>
            <para> Neue <emphasis>notes</emphasis>, <emphasis>notes_url</emphasis> und <emphasis>action_url</emphasis>-Direktiven wurden den Hostgroup- und Servicegroup-Definitionen hinzugefügt.</para>
          </listitem>
          <listitem>
            <para> Kontaktdefinitionen enthalten die neuen <emphasis>host_notifications_enabled</emphasis>-, <emphasis>service_notifications_enabled</emphasis>- und <emphasis>can_submit_commands</emphasis>-Direktiven, um Benachrichtigungen besser zu kontrollieren und festzulegen, ob sie Befehle über das Web-Interface erteilen dürfen.</para>
          </listitem>
          <listitem>
            <para> Host- und Service-Abhängigkeiten unterstützen nun eine optionale <emphasis>dependency_period</emphasis>-Direktive. Dies erlaubt Ihnen, die Zeiten zu begrenzen, in denen Abhängigkeiten gültig sind.</para>
          </listitem>
          <listitem>
            <para> Die <emphasis>parallelize</emphasis>-Direktive in Service-Definitionen ist nun veraltet und wird nicht länger benutzt. Alle Service-Prüfungen laufen in &name-icinga; 3 parallel.</para>
          </listitem>
          <listitem>
            <para> Es gibt keine (inhärenten) Längenbegrenzungen bei Hostnamen oder Service-Beschreibungen mehr.</para>
          </listitem>
          <listitem>
            <para> Erweiterte reguläre Ausdrücke werden nun benutzt, wenn Sie die <link linkend="configmain-use_regexp_matching">use_regexp_matching</link> Konfigurationsoption aktivieren. &quot;Matching&quot; bei regulären Ausdrücken wird nur in bestimmten Objektdefinitionsdirektiven benutzt, die <emphasis role="bold">*</emphasis>, <emphasis role="bold">?</emphasis>, <emphasis role="bold">+</emphasis> oder <emphasis role="bold">\</emphasis> enthalten.</para>
          </listitem>
          <listitem>
            <para> Eine neue <emphasis>initial_state</emphasis>-Direktive wurde den Host- und Service-Definitionen hinzugefügt, so dass Sie &name-icinga; mitteilen können, dass ein Host/Service einen bestimmten Status haben soll, wenn &name-icinga; startet (statt UP bzw. OK, was immer noch der Default ist).</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Objektvererbung</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Sie können nun Objektvariablen/-werte von mehreren Vorlagen (Templates) erben, indem Sie mehr als einen Vorlagennamen in der <emphasis>use</emphasis>-Direktive von Objektdefinitionen angeben. Dies kann einige sehr mächtige (und komplexe) Vererbungs-Setups erlauben. (<link linkend="objectinheritance-multiple_templates">Lesen Sie mehr</link>)</para>
          </listitem>
          <listitem>
            <para> Services können nun Kontaktgruppen, Benachrichtigungsintervalle und Benachrichtigungsperioden von ihrem verbundenen Host erben, wenn nichts anderes angegeben wurde. (<link linkend="objectinheritance-implied_inheritance">Lesen Sie mehr</link>)</para>
          </listitem>
          <listitem>
            <para> Host- und Service-Eskalationen können nun Kontaktgruppen, Benachrichtigungsintervalle und Eskalationszeitfenster von ihrem verbundenen Host bzw. Service erben, wenn nichts anderes angegeben wurde. (<link linkend="objectinheritance-implied_inheritance">Lesen Sie mehr</link>)</para>
          </listitem>
          <listitem>
            <para> Zeichenkettenvariablen in Host-, Service- und Kontaktdefinitionen können nun eine Vererbung verhindern, indem Sie einen Wert von &quot;null&quot; (ohne Anführungszeichen) als Wert der Variable angeben. (<link linkend="objectinheritance-cancel_string">Lesen Sie mehr</link>)</para>
          </listitem>
          <listitem>
            <para> Die meisten Zeichenkettenvariablen in lokalen Objektdefinitionen können nun an die Zeichenkettenwerte angehängt werden, die vererbt werden. Dies ist ziemlich hilfreich in großen Konfigurationen. (<link linkend="objectinheritance-add_string">Lesen Sie mehr</link>)</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Leistungsverbesserungen</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Es wurden Möglichkeiten hinzugefügt, Objektkonfigurationsdateien vorher zwischenzuspeichern und die Prüfung auf zirkuläre Pfaderkennung vom Überprüfungsprozess auszuschließen. Das kann die Anlaufzeit von &name-icinga; in großen Umgebungen immens beschleunigen. Lesen Sie mehr <link linkend="faststartup">hier</link>.</para>
          </listitem>
          <listitem>
            <para> Eine neue <link linkend="configmain-use_large_installation_tweaks">use_large_installation_tweaks</link>-Option wurde hinzugefügt, die die Leistung in großen Umgebungen verbessern sollte. Lesen Sie mehr dazu <link linkend="largeinstalltweaks">hier</link>.</para>
          </listitem>
          <listitem>
            <para> Eine Reihe von internen Verbesserungen wurden gemacht mit Blick darauf, wie &name-icinga; interne Datenstrukturen und Objekt- (z.B. Host- und Service-) Beziehungen behandelt. Diese Verbesserungen sollten in einer Beschleunigung von größeren Umgebungen resultieren.</para>
          </listitem>
          <listitem>
            <para> Die neue <link linkend="configmain-external_command_buffer_slots">external_command_buffer_slots</link>-Option wurde hinzugefügt, um Ihnen die Skalierung in großen Umgebungen zu erleichtern. Um optimale Ergebnisse zu erzielen, sollten Sie überlegen, die Nutzung der Pufferbereiche über einen Zeitraum hinweg mit Hilfe von <link linkend="mrtggraphs">MRTG grafisch</link> darzustellen.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Plugin-Ausgaben</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Mehrzeilige Ausgaben von Plugins wird nun für Host- und Service-Prüfungen unterstützt. Hurra! Die Plugin-API wurde aktualisiert, um mehrzeilige Ausgaben in einer Weise zu unterstützen, die Rückwärtskompatibilität mit älteren Plugins gewährleistet. Zusätzliche Ausgabezeilen (außer der ersten) werden in den neuen $LONGHOSTOUTPUT$- und $LONGSERVICEOUTPUT$-Makros gespeichert.</para>
          </listitem>
          <listitem>
            <para> Die maximale Länge von Plugin-Ausgaben wurde auf 4K erhöht (von etwa 350 Bytes in früheren Versionen). Diese 4K-Grenze wurde willkürlich festgelegt, damit &quot;durchdrehende&quot; Plugins nicht zuviel Daten an &name-icinga; zurückliefern können.</para>
          </listitem>
          <listitem>
            <para> Mehr Informationen zu den Plugins, mehrzeiligen Ausgaben und maximaler Plugin-Ausgabelänge finden Sie <link linkend="pluginapi">hier</link>.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Service-Prüfungen</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> &name-icinga; prüft nun per Default nach verwaisten Service-Prüfungen.</para>
          </listitem>
          <listitem>
            <para> Eine neue <link linkend="configmain-enable_predictive_service_dependency_checks">enable_predictive_service_dependency_checks</link>-Option wurde hinzugefügt, um zu kontrollieren, ob &name-icinga; vorausschauende Prüfungen für Services initiiert, von denen andere abhängig sind (in Abhängigkeitsdefinitionen). Vorausschauende Prüfungen sollen helfen, dass die Abhängigkeitslogik so präzise wie möglich ist. (<link linkend="dependencychecks">Lesen Sie mehr</link>)</para>
          </listitem>
          <listitem>
            <para> Ein neues &quot;zwischengespeicherte Service-Prüfung&quot;-Feature wurde implementiert, das die Leistung für viele Leute signifikant verbessern kann. Statt mit einem Plugin den Zustand eines Service zu prüfen, kann &name-icinga; oft ein zwischengespeichertes Service-Prüfergebnis nutzen. Mehr Informationen darüber finden Sie <link linkend="cachedchecks">hier</link>.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Host-Prüfungen</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Host-Prüfungen laufen nun parallel! Host-Prüfungen liefen bisher nach einander, was bedeutete, dass sie für einen großen Stau im Sinne der Leistung sorgten. Das ist vorbei! (<link linkend="hostchecks">Lesen Sie hier</link>)</para>
          </listitem>
          <listitem>
            <para> Wiederholungsprüfungen für Hosts werden nun wie Wiederholungsprüfungen für Services durchgeführt. Das heißt, dass Host-Definitionen nun eine neue <emphasis>retry_interval</emphasis>-Direktive haben, die angibt, wieviel Zeit gewartet werden soll, bevor der Host erneut geprüft wird. :-)</para>
          </listitem>
          <listitem>
            <para> Regelmäßig geplante Host-Prüfungen beeinträchtigen nun nicht länger die Leistung. Vielmehr können sie nun zusammen mit der neuen Zwischenspeicher-Prüflogik die Leistung steigern (siehe unten).</para>
          </listitem>
          <listitem>
            <para> Die neue <link linkend="configmain-check_for_orphaned_hosts">check_for_orphaned_hosts</link>-Option erlaubt die Prüfung von verwaisten Host-Prüfungen. Das wird nun gebraucht, da Host-Prüfungen parallel laufen.</para>
          </listitem>
          <listitem>
            <para> Die neue <link linkend="configmain-enable_predictive_host_dependency_checks">enable_predictive_host_dependency_checks</link>-Option wurde hinzugefügt, um zu kontrollieren, ob &name-icinga; vorausschauende Prüfungen für Hosts initiiert, von denen andere abhängig sind (in Abhängigkeitsdefinitionen). Vorausschauende Prüfungen sollen helfen, dass die Abhängigkeitslogik so präzise wie möglich ist. (<link linkend="dependencychecks">Lesen Sie mehr</link>)</para>
          </listitem>
          <listitem>
            <para> Ein neues &quot;zwischengespeicherte Host-Prüfung&quot;-Feature wurde implementiert, das die Leistung für viele Leute signifikant verbessern kann. Statt mit einem Plugin den Zustand eines Hosts zu prüfen, kann &name-icinga; oft ein zwischengespeichertes Host-Prüfergebnis nutzen. Mehr Informationen darüber finden Sie <link linkend="cachedchecks">hier</link>.</para>
          </listitem>
          <listitem>
            <para> Passive Host-Prüfungen mit einem DOWN- oder UNREACHABLE-Ergebnis können nun automatisch in ihren korrekten Zustand aus Sicht der &name-icinga;-Instanz umgesetzt werden, die sie empfängt. Das ist sehr nützlich in Failover- und verteilten Überwachungsumgebungen. Mehr Informationen zur Übersetzung passiver Host-Prüfzustände finden Sie <link linkend="passivestatetranslation">hier</link>.</para>
          </listitem>
          <listitem>
            <para> Passive Host-Prüfungen setzen einen Host normalerweise in einen HARD-Zustand. Das kann nun durch die Aktivierung der <link linkend="configmain-passive_host_checks_are_soft">passive_host_checks_are_soft</link>-Option geändert werden.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Frische-Prüfungen</emphasis>  (Freshness checks):</para>
        <itemizedlist>
          <listitem>
            <para> Eine neue <link linkend="configmain-freshness_threshold_latency">freshness_threshold_latency</link>-Option wurde hinzugefügt, damit Sie die Zahl von Sekunden angeben können, die zu jedem Host- oder Service-Frischeschwellwert hinzugerechnet werden soll, den &name-icinga; automatisch ermittelt.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">IPC</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Der IPC-Mechanismus, der benutzt wird, um Host-/Service-Prüfergebnisse von den (Enkel-)Kind-Prozessen zurück an den &name-icinga;-Daemon zu liefern, wurde geändert! Das sollte helfen, Last-/Verzögerungsprobleme in Verbindung mit der Verarbeitung einer hohen Zahl von passiven Prüfungen in verteilten Umgebungen zu reduzieren.</para>
          </listitem>
          <listitem>
            <para> Prüfergebnisse werden nun übertragen, indem sie in Dateien in das Verzeichnis geschrieben werden, das durch die <link linkend="configmain-check_result_path">check_result_path</link>-Option angegeben wurde. Dateien, die älter sind als der in der <link linkend="configmain-max_check_result_file_age">max_check_result_file_age</link>-Option angegebene Wert werden gnadenlos ohne weitere Verarbeitung gelöscht.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Zeitfenster</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Zeitfenster waren reif für eine gründliche Überarbeitung und wurden schließlich erweitert, um Datumsausnahmen, Datumssprünge (alle drei Tage) usw. zu erlauben! Das sollte Ihnen dabei helfen, wenn Sie Benachrichtungszeitfenster für Pager-Bereitschaften definieren.</para>
          </listitem>
          <listitem>
            <para> Mehr Informationen zu den neuen Zeitfensterdirektiven finden Sie <link linkend="objectdefinitions-timeperiod">hier</link> und <link linkend="timeperiods">hier</link>.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Ereignisvermittlung</emphasis>  (Event Broker):</para>
        <itemizedlist>
          <listitem>
            <para> Aktualisierte NEB-API-Version</para>
          </listitem>
          <listitem>
            <para> modifizierter Rückruf (callback) für anpassungsfähige Programmstatusdaten</para>
          </listitem>
          <listitem>
            <para> Rückruf (callback) für anpassungsfähige Kontaktstatusdaten hinzugefügt</para>
          </listitem>
          <listitem>
            <para> Rückrufe vor der eigentlichen Prüfung von Hosts- und Services hinzugefügt, um es Modulen zu erlauben, interne Host-/Service-Prüfungen abzubrechen/zu übersteuern.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Web-Interface</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Hostgruppen- und Servicegruppen-Zusammenfassungen zeigen nun Aufschl�sselungen nach wichtigen/unwichtigen Problemen wie das TAC-CGI.</para>
          </listitem>
          <listitem>
            <para> Kleinere Layout-Änderungen bei Host- und Service-Detailansichten im extinfo-CGI.</para>
          </listitem>
          <listitem>
            <para> Neue Prüfstatistiken in der &quot;Performance Info&quot;-Anzeige hinzugefügt.</para>
          </listitem>
          <listitem>
            <para> In verschiedenen CGIs <link xlink:href="&url-splunk;">Splunk</link>-Integrationsoptionen hinzugefügt. Die Integration wird durch die <link linkend="configcgi-enable_splunk_integration">enable_splunk_integration</link>- und <link linkend="configcgi-splunk_url">splunk_url</link>-Optionen in der CGI-Konfigurationsdatei gesteuert.</para>
          </listitem>
          <listitem>
            <para> Neue <link linkend="configcgi-notes_url_target">notes_url_target</link>- und <link linkend="configcgi-action_url_target">action_url_target</link>-Optionen hinzugefügt, um zu kontrollieren, in welchem Frame notes- und action-URLs geöffnet werden.</para>
          </listitem>
          <listitem>
            <para> Neue <link linkend="configcgi-lock_author_names">lock_author_names</link>-Option hinzugefügt, um Änderungen des Autorennamens zu verhindern, wenn Benutzer Kommentare, Bestätigungen und geplante Ausfallzeiten eingeben.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Debugging-Info</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> Die im Konfigurations-Script verfügbaren DEBUGx-Compile-Optionen wurden entfernt.</para>
          </listitem>
          <listitem>
            <para> Debugging-Informationen können nun in eine separate Debug-Datei geschrieben werden, die automatisch rotiert wird, wenn sie eine bestimmte benutzerdefinierte Größe erreicht. Dies sollte das Debugging von Problemen viel einfacher machen, weil Sie &name-icinga; nicht erneut kompilieren müssen. Die volle Unterstützung zum Schreiben von Debugging-Informationen in eine Datei wird während der Alpha-Entwicklungsphase eingebaut, so dass sie vielleicht noch nicht komplett ist, wenn Sie es ausprobieren.</para>
          </listitem>
          <listitem>
            <para> Variablen, die das Debug-Protokoll im <link linkend="configmain-debug_file">debug_file</link>, den <link linkend="configmain-debug_level">debug_level</link>, die <link linkend="configmain-debug_verbosity">debug_verbosity</link> und die <link linkend="configmain-max_debug_file_size">max_debug_file_size</link> beeinflussen.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Update-Prüfungen</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para> &name-icinga; wird nun etwa einmal am Tag prüfen, ob eine neue Version verfügbar ist. Dies ist nützlich, um über Sicherheits-Updates oder neue Versionen informiert zu sein. Hinweise werden im Web-Interface zu sehen sein.</para>
          </listitem>
          <listitem>
            <para> Variablen, die die Update-Prüfung beeinflussen, sind <link linkend="configmain-check_for_updates">check_for_updates</link> und <link linkend="configmain-base_update_check">bare_update_check</link>.</para>
          </listitem>
        </itemizedlist>
       </listitem>
      <listitem>
        <para><emphasis role="bold">Verschiedenes</emphasis> :</para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">Variable temporärer Pfad</emphasis>  - Eine neue <link linkend="configmain-temp_path">temp_path</link>-Variable wurde hinzugefügt, um ein Verzeichnis anzugeben, das &name-icinga; für temporäre Dateien nutzen kann.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">eindeutige Benachrichtigungs- und Ereignisnummern</emphasis>  - Jeder Host- und Service-Benachrichtigung wird nun eine eindeutige ID-Nummer zugewiesen. Eine weitere eindeutige ID wird nun allen Host- und Service-Zustandsänderungen zugewiesen. Die eindeutige ID kann jeweils über die folgenden Makros abgefragt werden: $HOSTNOTIFICATIONID$, $SERVICENOTIFICATIONID$, $HOSTEVENTID$, $SERVICEEVENTID$, $LASTHOSTEVENTID$, $LASTSERVICEEVENTID$.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Neue Makros</emphasis>  - Es gibt einige neue Makros (außer denen, die bereits an anderer Stelle erwähnt wurden). Es sind: $HOSTGROUPNAMES$, $SERVICEGROUPNAMES$, $HOSTACKAUTHORNAME$, $HOSTACKAUTHORALIAS$, $SERVICEACKAUTHORNAME$ und $SERVICEACKAUTHORALIAS$.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Erntefrequenz</emphasis>  (reaper_frequency) - Die alte <emphasis>service_reaper_frequency</emphasis>-Variable wurde umbenannt zu <link linkend="configmain-check_result_reaper_frequency">check_result_reaper_frequency</link>, da sie nun auch benutzt wird, um Host-Prüfergebnisse zu verarbeiten.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Max. Erntezeit</emphasis>  (max reaper time) - Eine neue <link linkend="configmain-max_check_result_reaper_time">max_check_result_reaper_time</link>-Variable wurde hinzugefügt, um die zulässige Laufeit eines einzelnen Ernteereignisses zu begrenzen.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Nichtganzzahlige Intervalle</emphasis>  - Nichtganzzahlige Benachrichtungs- und Prüfintervalle (z.B. &quot;3.5&quot; Minuten) werden nun in Host-, Service-, Host-Eskalations- und Service-Eskalationsdefinitionen unterstützt.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Maskierte Befehlsargumente</emphasis>  (Escaped command arguments ) - Sie können nun Ausrufezeichen (!) in Ihren Befehlsargumenten benutzen, indem Sie diesen mit einem Backslash (\) maskieren. Wenn Sie einen Backslash in Ihren Befehlsargumenten verwenden müssen, dann muss auch dieser mit einem Backslash maskiert werden.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Mehrzeilige Systembefehlsausgabe</emphasis>  - &name-icinga; wird nun mehrzeilige Ausgaben von Systembefehlen (Benachrichtigungs-Scripte usw.) bis zu einer Länge von 4K einlesen. Das passt zu der Grenze von Plugin-Ausgaben, die bereits genannt wurde. Ausgaben von Systembefehlen werden nicht direkt von &name-icinga; verarbeitet, aber die Unterstützung gibt es trotzdem.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Bessere Planungsinformationen</emphasis>  - Detailliertere Informationen werden ausgegeben, wenn &name-icinga; mit der -s Kommandozeilenoption ausgeführt wird. Diese Informationen können genutzt werden, um die Zeit des Starts/Neustarts von &name-icinga; zu <link linkend="faststartup">reduzieren</link>.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Zusammengefasste Statusdateiaktualisierungen</emphasis>  - Die alte <emphasis>aggregate_status_updates</emphasis>-Option wurde entfernt. Alle Statusdateiaktualisierungen werden nun mit einem Intervall von mindestens einer Sekunde zusammengefasst.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Neuer Performance-Daten-Dateimodus</emphasis>  - Eine neue &quot;p&quot;-Option wurde den <link linkend="configmain-host_perfdata_file_mode">host_perfdata_file_mode</link>- und <link linkend="configmain-service_perfdata_file_mode">service_perfdata_file_mode</link>-Optionen hinzugefügt. Dieser neue Modus wird die Datei in einem nicht-blockierenden Schreib-/Lesemodus öffnen, der nützlich für Pipes ist.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Zeitzonen-Offset</emphasis>  - Eine neue <link linkend="configmain-use_timezone">use_timezone</link>-Option wurde hinzugefügt, um verschiedene &name-icinga;-Instanzen zu betreiben, die in anderen als der lokalen Zeitzone laufen.</para>
          </listitem>
        </itemizedlist>
       </listitem>
    </orderedlist>
</section>
